openapi: 3.0.1
info:
  title: Panoptica Management API
  version: 1.0.0
externalDocs:
  description: Product Documentation
  url: https://panoptica.readme.io/reference
servers:
- url: /api
tags:
- name: users
  description: APIs used for login and password management
- name: dashboard
  description: APIs to get dashboard statistics
- name: envs
  description: APIs used to define environments
- name: telemetries
  description: APIs used to query for telemetries
- name: runtime map
  description: APIs used to  query for network map
- name: environment policies
  description: APIs used to  define and manage environment policies
- name: connection policies
  description: APIs used to  define and manage connection policies
- name: cluster events policies
  description: APIs used to  define and manage cluster events policies
- name: API security policies
  description: APIs used to  define and manage api security policies
- name: CD
  description: APIs used to query for CD pipelines results
- name: CI/CD policies
  description: APIs used to  define and manage CI/CD policies
- name: registries
  description: APIs used to  define and manage registries
- name: trusted signers
  description: APIs used to  define and manage trusted signers
- name: agent management
  description: APIs use to  interact with  agents
- name: kubernetes
  description: APIs used to manage Kubernetes clusters on Secure Application
- name: cloud accounts
  description: APIs used to manage cloud accounts on Secure Application
- name: risk assessment
  description: APIs used to manage risk assessment on Kubernetes clusters
- name: api security
  description: APIs used to manage Api Security
- name: psp profiles
  description: APIs used to manage pod security standards profiles on Secure Application
- name: expansions
  description: APIs used to manage expansions on Secure Application
- name: deployers
  description: APIs used to manage deployers on Secure Application
- name: images and vulnerabilities
  description: APIs used to define and manage  image hashes
- name: audit logs
  description: APIs used to retrieve  audit logs
- name: advisor
  description: APIs used to get policy recommendations
- name: truncation
  description: APIs to delete workloads
- name: apps
  description: APIs used to define apps
- name: aws
  description: APIs used to change  credentials or return details about the  user's
    AWS environment
- name: settings
  description: APIs used  to configure system settings
- name: cli
  description: APIs to get the Secure Application CLI
- name: api
  description: APIs to get the Secure Application API specification file
- name: k8s cis benchmark
  description: APIs to get the kubernetes cis benchmark data
paths:
  /users:
    get:
      tags:
      - users
      summary: List current users
      parameters:
      - name: username
        in: query
        description: the user name to filter by
        schema:
          type: string
      - name: email
        in: query
        description: the email to filter by
        schema:
          type: string
      - name: roles
        in: query
        description: the roles to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - LIGHTSPIN_ADMIN
            - SELF_PROVISIONING
            - CI_CD_SCANNER
            - PORTSHIFT_ADMIN
            - PORTSHIFT_AUDITOR
            - ACCOUNT_ADMIN
            - SERVICE
            - ACCOUNT_AUDITOR
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDisplay'
    post:
      tags:
      - users
      summary: Create a user
      description: |
        Create a new user. Must be admin user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        201:
          description: The new user that was added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /users/trial:
    post:
      tags:
      - users
      summary: Create a trail user
      parameters:
      - name: g-recaptcha-response
        in: header
        description: google recaptcha response
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrialUser'
        required: true
      responses:
        201:
          description: The new trial user that was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /users/{userId}/accessTokens:
    get:
      tags:
      - users
      summary: Get the  access tokens for the user
      description: Get the access tokens for the user, to access Secure Application
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
  /operatorCredentials:
    get:
      tags:
      - users
      summary: get the credentials of the Secure Application Operator service user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /users/{userId}:
    put:
      tags:
      - users
      summary: Change user details
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUser'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-codegen-request-body-name: body
    delete:
      tags:
      - users
      summary: Delete a user
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /users/{userId}/deleteDependencies:
    get:
      tags:
      - users
      summary: get dependencies which need to be handled in order to delete specified
        user
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDependencyElementUser'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /users/acceptEula:
    post:
      tags:
      - users
      summary: Accept the EULA
      responses:
        204:
          description: The EULA was accepted.
          content: {}
  /me:
    post:
      tags:
      - users
      summary: an api to get current logged in user info
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginInfo'
        403:
          description: Session expired or doesnt exists. need to login
          content: {}
  /account/usageStatus:
    post:
      tags:
      - users
      summary: an api to get the account usage status
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageStatus'
        403:
          description: Session expired or doesnt exists. need to login
          content: {}
  /login:
    post:
      tags:
      - users
      summary: Login
      parameters:
      - name: token
        in: header
        description: cognito id token
        schema:
          type: string
          format: jwt
      - name: googleIdToken
        in: header
        description: google id token
        schema:
          type: string
          format: jwt
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginInfo'
        202:
          description: Accepted. Challenge required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeRequest'
        402:
          description: Account is disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
      - basicAuth: []
  /logout:
    post:
      tags:
      - users
      summary: Log out
      responses:
        204:
          description: Success
          content: {}
        401:
          description: Unauthorized.
          content: {}
  /changePassword:
    post:
      tags:
      - users
      summary: Change the password for the current user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordInfo'
        required: true
      responses:
        204:
          description: Success
          content: {}
        400:
          description: Bad request.
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /licensingDashboard:
    get:
      tags:
      - dashboard
      summary: Get licensing dashboard data
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicensingDashboard'
  /dashboard/report/status:
    get:
      tags:
      - dashboard
      summary: Get Secure Application report security status
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStatus'
  /dashboard/report/generate:
    post:
      tags:
      - dashboard
      summary: Generate Secure Application security report
      responses:
        204:
          description: Success
          content: {}
  /dashboard/report/download:
    get:
      tags:
      - dashboard
      summary: Download Secure Application security report
      responses:
        200:
          description: The Secure Application security report
          content:
            application/json:
              schema:
                type: string
                format: binary
  /dashboard/apisec/specsAndOperationsDiffs:
    get:
      tags:
      - dashboard
      - api security
      summary: Get API sec specs and operations diffs widget
      parameters:
      - name: apiSecSource
        in: query
        description: source filter. an enum representing the source of the APIs service
          in scope
        required: true
        schema:
          type: string
          default: INTERNAL
          enum:
          - INTERNAL
          - EXTERNAL
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecsAndOperationsDiffsWidget'
  /dashboard/apisec/topRiskyApis:
    get:
      tags:
      - dashboard
      - api security
      summary: Get API sec top risky APIs widget
      parameters:
      - name: apiSecSource
        in: query
        description: source filter. an enum representing the source of the APIs service
          in scope
        required: true
        schema:
          type: string
          default: INTERNAL
          enum:
          - INTERNAL
          - EXTERNAL
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSecTopRiskyApisWidget'
  /dashboard/apisec/topRiskyFindings:
    get:
      tags:
      - dashboard
      - api security
      summary: Get API sec top risky findings widget
      parameters:
      - name: apiSecSource
        in: query
        description: source filter. an enum representing the source of the APIs service
          in scope
        required: true
        schema:
          type: string
          default: INTERNAL
          enum:
          - INTERNAL
          - EXTERNAL
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSecTopRiskyFindingsWidget'
  /dashboard/apisec/riskFindings:
    get:
      tags:
      - dashboard
      - api security
      summary: Get API sec risk findings widget
      parameters:
      - name: apiSecSource
        in: query
        description: source filter. an enum representing the source of the APIs service
          in scope
        required: true
        schema:
          type: string
          default: INTERNAL
          enum:
          - INTERNAL
          - EXTERNAL
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSecRiskFindingsWidget'
  /dashboard/apisec/riskFindingsTrend:
    get:
      tags:
      - dashboard
      - api security
      summary: Get API sec risk findings trend graph widget for the last 30 days
      parameters:
      - name: apiSecSource
        in: query
        description: source filter. an enum representing the source of the APIs service
          in scope
        required: true
        schema:
          type: string
          default: INTERNAL
          enum:
          - INTERNAL
          - EXTERNAL
      - name: numOfDays
        in: query
        description: the desired number of days in graph
        schema:
          type: integer
          default: 30
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSecRiskFindingsTrendWidget'
  /dashboard/podTelemetries:
    get:
      tags:
      - dashboard
      summary: Get pod telemetries dashboard data for all clusters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodTelemetriesWidget'
  /dashboard/{kubernetesClusterId}/podTelemetries:
    get:
      tags:
      - dashboard
      summary: Get pod telemetries dashboard data for the given kubernetesClusterId
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodTelemetriesWidget'
  /dashboard/connectionTelemetries:
    get:
      tags:
      - dashboard
      summary: Get pod connection dashboard data for all clusters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionTelemetriesWidget'
  /dashboard/{kubernetesClusterId}/connectionTelemetries:
    get:
      tags:
      - dashboard
      summary: Get connection telemetries dashboard data for the given kubernetesClusterId
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionTelemetriesWidget'
  /dashboard/kubernetesAuditLogs:
    get:
      tags:
      - dashboard
      summary: Get kubernetes audit logs dashboard data for all clusters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubernetesAuditLogsWidget'
  /dashboard/{kubernetesClusterId}/kubernetesAuditLogs:
    get:
      tags:
      - dashboard
      summary: Get kubernetes audit logs dashboard data for the given kubernetesClusterId
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubernetesAuditLogsWidget'
  /dashboard/vulnerabilities:
    get:
      tags:
      - dashboard
      summary: Get vulnerabilities dashboard data for the given kubernetesClusterId
      parameters:
      - name: clustersIds
        in: query
        description: the clusters ids to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilitiesWidget'
  /dashboard/permissions:
    get:
      tags:
      - dashboard
      summary: Get permissions dashboard data for the given kubernetesClusterIds
      parameters:
      - name: clustersIds
        in: query
        description: the clusters ids to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      - name: includeSystemOwners
        in: query
        description: include systems default owners
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsWidget'
  /dashboard/topSecurityRisks:
    get:
      tags:
      - dashboard
      summary: Get the top risky deployments dashboard data for the given kubernetesClusterIds
      parameters:
      - name: clustersIds
        in: query
        description: the clusters ids to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      - name: size
        in: query
        description: Amount of top risky workloads to return
        schema:
          minimum: 1
          type: integer
          default: 5
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopSecurityRisksWidget'
  /dashboard/operationalBar:
    get:
      tags:
      - dashboard
      summary: Get the operation data dashboard for the given kubernetesClusterId
      parameters:
      - name: clustersIds
        in: query
        description: the clusters ids to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalBar'
  /dashboard/clusters:
    get:
      tags:
      - dashboard
      summary: Get the active clusters
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersDetails'
  /dashboard/securityContext:
    get:
      tags:
      - dashboard
      summary: Get security context dashboard data for all clusters
      parameters:
      - name: clustersIds
        in: query
        description: the clusters ids to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityContextWidget'
  /aws/roles:
    get:
      tags:
      - aws
      summary: Lists AWS role ARNs for the account
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AWSRole'
    post:
      tags:
      - aws
      summary: Add AWS role to the account
      description: Upload a role ARN, that Secure Application will use to connect
        to the AWS account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSRolePost'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSRole'
      x-codegen-request-body-name: body
  /aws/roles/{roleId}:
    put:
      tags:
      - aws
      summary: Change AWS role name
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSRoleDetails'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSRole'
      x-codegen-request-body-name: body
  /aws/accounts:
    get:
      tags:
      - aws
      summary: Get a list of AWS accounts
      description: |
        Returns a list of AWS accounts for this Secure Application account.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AWSAccount'
        401:
          description: Unauthorized.
          content: {}
  /aws/{awsAccountId}/regions:
    get:
      tags:
      - aws
      summary: Get a list of regions for the  AWS account
      description: |
        Returns a list of regions for AWS account.
      parameters:
      - name: awsAccountId
        in: path
        description: AWS account Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized.
          content: {}
  /aws/{awsAccountId}/{regionId}/vpcs:
    get:
      tags:
      - aws
      summary: Get a list of VPCs for AWS accounts.
      description: |
        Returns a list of VPCs for an AWS account and region. These values are used to define a Secure Application environment.
      parameters:
      - name: awsAccountId
        in: path
        description: AWS account Id
        required: true
        schema:
          type: string
      - name: regionId
        in: path
        description: AWS region Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/vpcResponse'
        401:
          description: Unauthorized.
          content: {}
  /aws/{awsAccountId}/{regionId}/subnets:
    get:
      tags:
      - aws
      summary: Get a list of AWS subnets for an AWS account and region
      parameters:
      - name: awsAccountId
        in: path
        description: AWS account Id
        required: true
        schema:
          type: string
      - name: regionId
        in: path
        description: AWS region Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortshiftAwsSubnet'
        401:
          description: Unauthorized.
          content: {}
  /aws/tags:
    get:
      tags:
      - aws
      summary: Get a list of AWS tag keys
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        401:
          description: Unauthorized.
          content: {}
  /environments:
    get:
      tags:
      - envs
      summary: List all defined Secure Application environments
      parameters:
      - name: sortKey
        in: query
        description: Environment sort key
        schema:
          type: string
          enum:
          - name
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: name
        in: query
        description: Filter environments by name
        schema:
          type: string
      - name: includeSystemEnvs
        in: query
        description: include systems environments
        schema:
          type: boolean
          default: true
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - envs
      summary: Add a new environment
      description: |
        Add a  Secure Application environment. An instance should be contained in a single environment. The environment is defined by a VPC and an optional tag. If a tag is supplied, only instances in the specified VPC with the given tag will belong to the new environment.
      requestBody:
        description: Environment definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /environments/batch:
    post:
      tags:
      - envs
      summary: Add a number of  Secure Application environments
      description: |
        Add a number of new Secure Application environments. This is similar to the 'Add environment' method, but for multiple environments.
      requestBody:
        description: Environment definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Environment'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /environments/{envId}:
    get:
      tags:
      - envs
      summary: get a Secure Application environment
      parameters:
      - name: envId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment'
        401:
          description: Unauthorized.
          content: {}
    put:
      tags:
      - envs
      summary: Edit an existing Secure Application environment
      description: |
        Edit an existing Secure Application environment.
      parameters:
      - name: envId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Environment definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - envs
      parameters:
      - name: envId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /environments/delete:
    post:
      tags:
      - envs
      summary: Delete multiple Secure Application environments
      description: |
        Delete multiple Secure Application environments.
      responses:
        204:
          description: Success
          content: {}
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /environments/{envId}/deleteDependencies:
    get:
      tags:
      - envs
      summary: get dependencies which need to be handled in order to delete specified
        environment
      parameters:
      - name: envId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDependencyElementEnvironments'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /accountVulnerabilitiesXlsx:
    get:
      tags:
      - images and vulnerabilities
      summary: Returns a xlsx file of images alongside to their vulnerabilities.
      parameters:
      - name: IMAGE_NAME
        in: query
        description: Filter images by name
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: IMAGE_TAG
        in: query
        description: Filter images by tags
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: IMAGE_HASH
        in: query
        description: Filter images by HASH
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: vulnerabilityName
        in: query
        description: Filter images by vulnerability name
        schema:
          type: string
      responses:
        200:
          description: OK
          content: {}
        401:
          description: Unauthorized.
          content: {}
  /images:
    get:
      tags:
      - images and vulnerabilities
      summary: Returns a list of images
      parameters:
      - name: sortKey
        in: query
        description: image sort key. enum description in image sort key definition
        required: true
        schema:
          type: string
          default: RISK
          enum:
          - IMAGE_NAME
          - TIME
          - RISK
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: IMAGE_NAME
        in: query
        description: Filter images by name
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: IMAGE_TAG
        in: query
        description: Filter images by tags
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: IMAGE_HASH
        in: query
        description: Filter images by HASH
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: vulnerabilityName
        in: query
        description: Filter images by vulnerability name
        schema:
          type: string
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageDefGet'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - images and vulnerabilities
      summary: Define a New image hash
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageDef'
        required: true
      responses:
        201:
          description: A new image was added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefGet'
        400:
          description: Required field was not provided.
          content: {}
        401:
          description: Unauthorized.
          content: {}
        409:
          description: |
            An existing app already has this name, or, according to the details provided, this app cannot be uniquely identified.
          content: {}
      x-codegen-request-body-name: body
  /images/{imageId}/packages:
    get:
      tags:
      - images and vulnerabilities
      summary: Returns a list of packages for a specific image
      parameters:
      - name: imageId
        in: path
        description: the image record identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/imagePackageDetails'
        401:
          description: Unauthorized.
          content: {}
  /images/{imageId}/imageLayers:
    get:
      tags:
      - images and vulnerabilities
      summary: Returns a list of image layers
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: isIgnored
        in: query
        description: Return ignored / not ignored entries
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageLayers'
  /images/{imageId}/vulnerabilities:
    get:
      tags:
      - images and vulnerabilities
      summary: Returns a list of vulnerabilities detected in the image
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: isIgnored
        in: query
        description: Return ignored / not ignored entries
        schema:
          type: boolean
          default: false
      - name: showOnlyVulnerabilitiesWithFix
        in: query
        schema:
          type: boolean
          default: false
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      - name: layerId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vulnerability'
  /images/{imageId}/sbomPath:
    get:
      tags:
      - images and vulnerabilities
      summary: Returns the path to the SBOM in cloud storage
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageSbomPathResponse'
  /images/vulnerabilitiesByImageNameAndHash:
    get:
      tags:
      - images and vulnerabilities
      summary: Returns a list of vulnerabilities detected in the image
      parameters:
      - name: imageName
        in: query
        description: the image name without tag
        required: true
        schema:
          type: string
      - name: imageHash
        in: query
        description: the image sha256
        required: true
        schema:
          type: string
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: isIgnored
        in: query
        description: Return ignored / not ignored entries
        schema:
          type: boolean
          default: false
      - name: showOnlyVulnerabilitiesWithFix
        in: query
        schema:
          type: boolean
          default: false
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      - name: layerId
        in: query
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vulnerability'
  /images/{imageId}/vulnerabilities/ignore:
    post:
      tags:
      - images and vulnerabilities
      summary: Add / remove a list of  UUIDs of vulnerabilities from ignored list
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: actionType
        in: query
        description: The ignore action type (ADD/REMOVE)
        required: true
        schema:
          type: string
          enum:
          - ADD
          - REMOVE
      - name: snoozeTime
        in: query
        description: The time to snooze the vulnerability
        schema:
          type: string
          enum:
          - ALWAYS
          - YEAR
          - MONTH
          - WEEK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UuidList'
        required: true
      responses:
        204:
          description: Success
          content: {}
      x-codegen-request-body-name: body
  /images/{imageId}/dockerfileScanResults:
    get:
      tags:
      - images and vulnerabilities
      summary: Returns a list of vulnerabilities detected in the  image
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: isIgnored
        in: query
        description: Return ignored / not ignored entries
        schema:
          type: boolean
          default: false
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DockerfileScanResult'
  /images/{imageId}/dockerfileScanResults/ignore:
    post:
      tags:
      - images and vulnerabilities
      summary: Add / remove a list of  UUIDs of dockerfileScanResults from ignored
        list
      parameters:
      - name: imageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: actionType
        in: query
        description: The ignore action type (ADD/REMOVE)
        required: true
        schema:
          type: string
          enum:
          - ADD
          - REMOVE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UuidList'
        required: true
      responses:
        204:
          description: Success
          content: {}
      x-codegen-request-body-name: body
  /images/imagesHash:
    get:
      tags:
      - images and vulnerabilities
      summary: search for image hash in the account
      parameters:
      - name: imageHash
        in: query
        description: image hash to search for ( as prefix and suffix )
        schema:
          type: string
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /vulnerabilities:
    get:
      tags:
      - vulnerabilities
      summary: search for vulnerability names in the account
      parameters:
      - name: vulName
        in: query
        description: vulnerabilities to search for ( as prefix and suffix )
        schema:
          type: string
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /advisor/run:
    post:
      tags:
      - advisor
      summary: Runs the policy advisor
      parameters:
      - name: policyAdvisorType
        in: query
        description: policy advisor type
        required: true
        schema:
          type: string
          enum:
          - ENVIRONMENT
          - POD_SECURITY_STANDARD
          - CONNECTION_RULES
          - DEPLOYMENT_RULES
          - API_RULES
      responses:
        202:
          description: Accepted
          content: {}
        401:
          description: Unauthorized.
          content: {}
  /advisor/queue/{advisorType}:
    get:
      tags:
      - advisor
      summary: Get status for policy advisor background job
      parameters:
      - name: advisorType
        in: path
        required: true
        schema:
          type: string
          enum:
          - ENVIRONMENT
          - POD_SECURITY_STANDARD
          - CONNECTION_RULES
          - DEPLOYMENT_RULES
          - API_RULES
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAdvisorState'
  /advisor/environment:
    get:
      tags:
      - advisor
      summary: Returns a list of suggested kubernetes environments
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentRecommendationPeriod'
        401:
          description: Unauthorized.
          content: {}
  /advisor/podSecurityPolicy:
    get:
      tags:
      - advisor
      summary: Returns a list of suggested kubernetes Pod Security Standards
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PodSecurityPolicyRecommendationPeriod'
        401:
          description: Unauthorized.
          content: {}
  /advisor/environmentRules:
    get:
      tags:
      - advisor
      summary: Returns a list of suggested environment rules
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentRulesRecommendationPeriod'
        401:
          description: Unauthorized.
          content: {}
  /advisor/connectionRules:
    get:
      tags:
      - advisor
      summary: Returns a list of suggested connection rules
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionsRuleRecommendationPeriod'
        401:
          description: Unauthorized.
          content: {}
  /advisor/clusterEventRules:
    get:
      tags:
      - advisor
      summary: Returns a list of suggested cluster event rules
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterEventRuleRecommendationPeriod'
        401:
          description: Unauthorized.
          content: {}
  /images/approve:
    post:
      tags:
      - images and vulnerabilities
      summary: Approve an image hash
      parameters:
      - name: isImageApproved
        in: query
        description: Is image approved
        required: true
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UuidList'
        required: true
      responses:
        204:
          description: Success
          content: {}
        400:
          description: Failure
          content: {}
      x-codegen-request-body-name: body
  /images/{id}:
    get:
      tags:
      - images and vulnerabilities
      summary: get an image
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefGet'
    delete:
      tags:
      - images and vulnerabilities
      summary: Delete an image hash
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
        400:
          description: Failure
          content: {}
  /apps:
    get:
      tags:
      - apps
      summary: Returns a list of defined Apps
      parameters:
      - name: sortKey
        in: query
        description: App sort key
        schema:
          type: string
          enum:
          - name
          - type
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: name
        in: query
        description: Filter Apps by name
        schema:
          type: string
      - name: type
        in: query
        description: Filter Apps by type
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - apps
      summary: Define a New App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
        required: true
      responses:
        201:
          description: A new app was added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        400:
          description: Required field was not provided.
          content: {}
        401:
          description: Unauthorized.
          content: {}
        409:
          description: |
            An existing App already has this name, or, according to the details provided, this App cannot be uniquely identified.
          content: {}
      x-codegen-request-body-name: body
  /truncation/workloads:
    get:
      tags:
      - truncation
      summary: Get workloads truncation time for account
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruncationStatus'
    post:
      tags:
      - truncation
      summary: Update workloads truncation status for account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TruncationStatus'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruncationStatus'
      x-codegen-request-body-name: truncationStatus
  /truncation/images:
    get:
      tags:
      - truncation
      summary: Get workloads truncation time for account
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruncationStatus'
    post:
      tags:
      - truncation
      summary: Update workloads truncation status for account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TruncationStatus'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruncationStatus'
      x-codegen-request-body-name: truncationStatus
  /tokens/info:
    get:
      tags:
      - tokens
      summary: Get tokens by Ids
      parameters:
      - name: tokensIds
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiTokenInfo'
        401:
          description: Unauthorized.
          content: {}
  /tokens:
    get:
      tags:
      - tokens
      summary: Get tokens
      parameters:
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: tokenName
        in: query
        description: Defined token name
        schema:
          type: string
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      - name: sortKey
        in: query
        description: the token sort key
        schema:
          type: string
          enum:
          - expirationDate
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - tokens
      summary: Add new token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /gateways:
    get:
      tags:
      - api security
      - gateways
      summary: Get gateways
      parameters:
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: name
        in: query
        description: Filter gateways by name
        schema:
          type: string
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gateway'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - api security
      - gateways
      summary: Add new gateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway'
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /gateways/{gatewayId}:
    put:
      tags:
      - api security
      - gateways
      summary: Edit gateway
      parameters:
      - name: gatewayId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gateway'
        required: true
      responses:
        200:
          description: Token was gateway.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway'
        400:
          description: Required field was not provided.
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - api security
      - gateways
      summary: Delete gateway
      parameters:
      - name: gatewayId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /gateways/{gatewayId}/download_bundle:
    get:
      tags:
      - api security
      - gateways
      summary: Get a GW installation script
      description: In order to install,  extract and run "./install_bundle.sh"
      parameters:
      - name: gatewayId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /gateways/clusters:
    get:
      tags:
      - api security
      - gateways
      summary: Get clusters info
      parameters:
      - name: gatewayType
        in: query
        required: true
        schema:
          type: string
          enum:
          - APIGEE_X
          - KONG_INTERNAL
          - TYK_INTERNAL
          - F5_BIG_IP
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GatewayClusterInfo'
        401:
          description: Unauthorized.
          content: {}
  /tokens/{tokenId}:
    put:
      tags:
      - tokens
      summary: Edit token
      parameters:
      - name: tokenId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      responses:
        200:
          description: Token was edited.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: Required field was not provided.
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - tokens
      summary: Delete token
      parameters:
      - name: tokenId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /tokens/{tokenId}/deleteDependencies:
    get:
      tags:
      - tokens
      summary: get dependancies which need to be handled in order to delete specified
        token
      parameters:
      - name: tokenId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDeleteDependencies'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /apps/{appId}:
    get:
      tags:
      - apps
      summary: Returns an App by its ID
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        401:
          description: Unauthorized.
          content: {}
    put:
      tags:
      - apps
      summary: Edit the existing App
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
        required: true
      responses:
        201:
          description: App was edited.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        400:
          description: Required field was not provided.
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /apps/delete:
    post:
      tags:
      - apps
      summary: Delete several Apps
      description: |
        Delete several apps.
      requestBody:
        description: Array of apps ids
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifierArray'
        required: true
      responses:
        204:
          description: Success
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /appTelemetries:
    get:
      tags:
      - telemetries
      summary: Get App telemetries
      parameters:
      - name: namespacesFilter
        in: query
        description: namespace filter. a base 64 representation of a list of NamespacesFilter
          definition object
        schema:
          type: string
          format: base64
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortKey
        in: query
        description: sort key
        required: true
        schema:
          type: string
          enum:
          - appName
          - appType
          - executable
          - environmentName
          - risk
          - status
          - startTime
          - finishTime
          - workloadRisk
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: startTime
        in: query
        description: Start date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: End date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: appName
        in: query
        description: Defined App name
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: appType
        in: query
        description: Empty string means no filtering. "UNDEFINED" means telemetries
          with no App type
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: host
        in: query
        description: Defined host name
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: status
        in: query
        description: App status
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: environmentName
        in: query
        description: Empty string means no filtering. "UNDEFINED" means telemetries
          with no App type
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: vulnerabilityLevelsFilter
        in: query
        description: Highest vulnerability
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            format: enum - UNKNOWN - LOW - MEDIUM - HIGH - CRITICAL
      - name: highestDockerfileScanResult
        in: query
        description: Highest DockerfileScan Result
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            format: enum - INFO - WARN - FATAL
      - name: workloadRisks
        in: query
        description: workloadRisk filter
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - LOW
            - MEDIUM
            - HIGH
            - CRITICAL
      - name: showOnlyEntriesWithAppName
        in: query
        description: When true, the telemetries API will only return entries with
          the App name
        schema:
          type: boolean
          default: false
      - name: executable
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: showOnlyViolations
        in: query
        description: When true, the API will only return entries that violate the
          active policy
        schema:
          type: boolean
      - name: hideInternals
        in: query
        description: When true, the API will filter out "OS Internal" and "User OS
          Internal" App types
        schema:
          type: boolean
          default: false
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      - name: showSystemPods
        in: query
        description: When true, the telemetries API will also return workloads that
          are part of the Kubernetes system
        schema:
          type: boolean
          default: false
      - name: protectionStatus
        in: query
        description: When true, the API will return only protected pods
        schema:
          type: string
          default: ALL
          enum:
          - FULL
          - DEPLOYMENT_ONLY
          - CONNECTION_ONLY
          - DISABLED
          - ALL
      - name: result
        in: query
        description: app result filter
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - ALLOW
            - DETECT
            - BLOCK
      - name: isIdentified
        in: query
        description: app is identified filter
        schema:
          type: boolean
      - name: imagesId
        in: query
        description: Array of images id
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppTelemetry'
        401:
          description: Unauthorized.
          content: {}
  /appTelemetries/{appTelemetryId}:
    get:
      tags:
      - telemetries
      summary: Get App telemetry by ID
      parameters:
      - name: appTelemetryId
        in: path
        description: App telemetry ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTelemetry'
        404:
          description: App telemetry with given ID does not exist
          content: {}
  /appTelemetries/{appTelemetryId}/imagePackages:
    get:
      tags:
      - telemetries
      summary: list packages with licenses runnin on a pod
      parameters:
      - name: appTelemetryId
        in: path
        description: App telemetry ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImagesWithLicenses'
        404:
          description: App telemetry with given ID does not exist
          content: {}
  /appTelemetries/{appTelemetryId}/injectionInfo:
    get:
      tags:
      - telemetries
      summary: Get token injection info of given app telemetry
      parameters:
      - name: appTelemetryId
        in: path
        description: App telemetry ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TokenInjectionInfo'
  /appTelemetries/{appTelemetryId}/apiRiskInfo:
    get:
      tags:
      - telemetries
      summary: Get API risks info of given app telemetry
      parameters:
      - name: appTelemetryId
        in: path
        description: App telemetry ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiRiskInfo'
  /connectionTelemetries:
    get:
      tags:
      - telemetries
      summary: Get connection telemetries
      parameters:
      - name: sourceNamespacesFilter
        in: query
        description: namespace filter for source in connection telemetries, a base
          64 representation of a NamespacesFilter definition object
        schema:
          type: string
          format: base64
      - name: targetNamespacesFilter
        in: query
        description: namespace filter for target in connection telemetries. a base
          64 representation of a NamespacesFilter definition object
        schema:
          type: string
          format: base64
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortKey
        in: query
        description: sort key
        required: true
        schema:
          type: string
          enum:
          - sourceAppName
          - sourceAppType
          - sourceEnvironmentName
          - sourceExecutable
          - sourceRisk
          - sourceHostName
          - targetAppName
          - targetAppType
          - targetEnvironmentName
          - targetExecutable
          - targetRisk
          - targetHostName
          - firstSeen
          - lastSeen
          - total
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: startTime
        in: query
        description: Start date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: End date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: sourceAppName
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sourceEnvironmentName
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sourceExecutable
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sourceRisk
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - HIGH
            - MEDIUM
            - LOW
      - name: sourceHostName
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: targetAppName
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: targetEnvironmentName
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: targetExecutable
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: targetRisk
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - HIGH
            - MEDIUM
            - LOW
      - name: showOnlyViolations
        in: query
        description: When true, the API will only return entries that violate the
          active policy
        schema:
          type: boolean
      - name: targetHostName
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: logicalOperator
        in: query
        description: Logical operator between the source group and the target group
          filters
        schema:
          type: string
          default: and
          enum:
          - and
          - or
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      - name: result
        in: query
        description: connection result filter
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - DETECT
            - BLOCK
            - ALLOW
            - ENCRYPT
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionTelemetry'
        401:
          description: Unauthorized.
          content: {}
  /connectionTelemetries/{connectionTelemetryId}:
    get:
      tags:
      - telemetries
      summary: get details for a single connection telemetry
      parameters:
      - name: connectionTelemetryId
        in: path
        description: connection telemetry ID
        required: true
        schema:
          type: string
          format: uuid
      - name: startTime
        in: query
        description: Start date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: End date of the query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionTelemetry'
  /networkMap:
    get:
      tags:
      - runtime map
      summary: Get data for network map
      parameters:
      - name: startTime
        in: query
        description: Start date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: End date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: showOnlyAppsWithViolations
        in: query
        description: When true, the API will only return Apps that violated the active
          policy
        schema:
          type: boolean
          default: false
      - name: showOnlyConnectionsBetweenEnvironments
        in: query
        description: When true, the API will only return connections between environments
        schema:
          type: boolean
          default: false
      - name: showOnlyConnectionsWithViolations
        in: query
        description: When true, the API will only return connections that violate
          the active policy
        schema:
          type: boolean
          default: false
      - name: showOnlyAppsWithConnections
        in: query
        description: When true, the API will only return Apps with connections
        schema:
          type: boolean
          default: false
      - name: groupAppsOnTheSameEnvironment
        in: query
        description: When true, the API will aggregate Apps that are on the same environment
        schema:
          type: boolean
          default: false
      - name: ignoreExternalConnection
        in: query
        description: When true, the API will ignore connections coming from external
          IP addresses
        schema:
          type: boolean
          default: false
      - name: apiRisk
        in: query
        description: minimum api risk level
        schema:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - CRITICAL
          - NEUTRAL
          - UNKNOWN
      - name: apps
        in: query
        description: Array of App names
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: excludeApps
        in: query
        description: Array of App/pod names to exclude
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: environments
        in: query
        description: Array of environments names
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: namespaces
        in: query
        description: Array of namespaces ids
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            format: uuid
      - name: labels
        in: query
        description: Array of labels. Each label is a string with format key:value
        style: form
        explode: false
        schema:
          maxItems: 10
          type: array
          items:
            type: string
      - name: isBackgroundJob
        in: query
        description: should run as background job or not
        schema:
          type: boolean
          default: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkMap'
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundJobResponse'
  /performanceMetrics:
    get:
      tags:
      - performance
      summary: Get performance metrics for a connection between workloads
      parameters:
      - name: startTime
        in: query
        description: Start date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: End date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: protocol
        in: query
        description: protocol
        required: true
        schema:
          type: string
      - name: sourceNamespace
        in: query
        description: namespace id
        required: true
        schema:
          type: string
          format: uuid
      - name: targetNamespace
        in: query
        description: namespace id
        required: true
        schema:
          type: string
          format: uuid
      - name: sourcePodTemplate
        in: query
        description: pod template id
        required: true
        schema:
          type: string
          format: uuid
      - name: targetPodTemplate
        in: query
        description: pod template id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceMetrics'
  /riskAssessment:
    get:
      tags:
      - risk assessment
      summary: Get risk assessment data for all clusters
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskAssessmentCluster'
  /riskAssessment/poll:
    get:
      tags:
      - risk assessment
      summary: Poll running scans
      parameters:
      - name: riskAssessmentPollKey
        in: query
        description: The ids of the clusters whose scans to poll
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskAssessmentCluster'
  /riskAssessment/{kubernetesClusterId}/scan:
    post:
      tags:
      - risk assessment
      summary: Execute a new runtime scan on the given cluster with the given configuration
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        201:
          description: 'Scan with the returned scanId was added to execution queue. '
          content:
            application/json:
              schema:
                type: string
                format: uuid
  /riskAssessment/{kubernetesClusterId}/cancel:
    delete:
      tags:
      - risk assessment
      summary: Cancel the runtime scan on the given cluster with the given id
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /riskAssessment/{kubernetesClusterId}/settings:
    post:
      tags:
      - risk assessment
      summary: Save the runtime scan configuration on the given cluster
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskAssessmentClusterScanConfig'
        required: true
      responses:
        201:
          description: 'Scan with the returned scanId was added to execution queue. '
          content:
            application/json:
              schema:
                type: string
                format: uuid
      x-codegen-request-body-name: body
  /riskAssessment/{kubernetesClusterId}/pods:
    get:
      tags:
      - risk assessment
      summary: Get all risk assessments of all pods of given cluster
      parameters:
      - name: namespacesNamesFilter
        in: query
        description: namespace names filter. a base 64 representation of a list of
          namespace names definition object
        schema:
          type: string
          format: base64
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      - name: sortKey
        in: query
        description: risk assessment pod sort key.
        required: true
        schema:
          type: string
          default: RISK
          enum:
          - NAME
          - RISK
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskAssessmentPod'
  /riskAssessment/{imageId}/vulnerabilities:
    get:
      tags:
      - risk assessment
      summary: Get all images of given risk assessment pod
      parameters:
      - name: imageId
        in: path
        description: The id of the risk assessment image
        required: true
        schema:
          type: string
          format: uuid
      - name: sortKey
        in: query
        description: risk assessment image sort key.
        required: true
        schema:
          type: string
          default: SEVERITY
          enum:
          - SEVERITY
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskAssessmentVulnerability'
  /riskAssessment/ignoredRisks:
    get:
      tags:
      - risk assessment
      summary: Get all the ignored risks
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IgnoredRisk'
    post:
      tags:
      - risk assessment
      summary: Add ignore risk
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IgnoredRisk'
  /riskAssessment/ignoredRisks/{ignoredRiskId}:
    put:
      tags:
      - risk assessment
      summary: Edit ignore risk
      parameters:
      - name: ignoredRiskId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CiPolicy'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IgnoredRisk'
      x-codegen-request-body-name: body
    delete:
      tags:
      - risk assessment
      summary: Delete ignored risk
      parameters:
      - name: ignoredRiskId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /mitre/dashboard:
    get:
      tags:
      - mitre
      summary: Get data for MITRE dashboard for all clusters
      parameters:
      - name: clustersIds
        in: query
        description: the clusters ids to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MitreDashboard'
  /mitre/technique:
    get:
      tags:
      - mitre
      summary: Get data for MITRE technique of the given mitreTechniqueType
      parameters:
      - name: mitreTechniqueType
        in: query
        description: MITRE technique type
        required: true
        schema:
          type: string
          enum:
          - COMPROMISED_IMAGES
          - UNAUTHORISED_REGISTRIES_USAGE
          - SUSPICIOUS_DEPLOYMENT
          - VULNERABLE_APPLICATION
          - EXPOSED_K8S_DASHBOARD
          - EXPLOIT_PUBLIC_FACING_APPLICATION
          - CONTAINER_SERVICE
          - DEPLOY_CONTAINER
          - SSH_CONNECTION
          - WRITEABLE_HOST_PATH
          - CRON_JOBS
          - PRIVILEGED_OR_ROOT_CONTAINER
          - PRIVILEGE_ESCALATION_ENABLED
          - CLUSTER_ADMIN_BINDING
          - UNAUTHORIZED_CLUSTER_ADMIN_BINDING
          - ACCESS_CLUSTER_RESOURCES
          - CLEAR_CONTAINER_LOGS
          - CLEAR_K8S_EVENTS
          - LIST_SECRETS
          - SERVICE_ACCOUNT_ACCESS
          - CONTAINER_RESOURCE_DISCOVERY
          - CLUSTER_INTERNAL_NETWORKING
          - TILLER_ENDPOINT_ACCESS
          - DATA_DESTRUCTION
      - name: clustersIds
        in: query
        description: the clusters ids to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MitreTechniqueInfo'
  /mitre/technique/fix:
    post:
      tags:
      - mitre
      summary: Post fix for MITRE technique of the given mitreTechniqueType
      parameters:
      - name: mitreTechniqueType
        in: query
        description: MITRE technique type
        required: true
        schema:
          type: string
          enum:
          - COMPROMISED_IMAGES
          - UNAUTHORISED_REGISTRIES_USAGE
          - SUSPICIOUS_DEPLOYMENT
          - VULNERABLE_APPLICATION
          - EXPOSED_K8S_DASHBOARD
          - EXPLOIT_PUBLIC_FACING_APPLICATION
          - CONTAINER_SERVICE
          - DEPLOY_CONTAINER
          - SSH_CONNECTION
          - WRITEABLE_HOST_PATH
          - CRON_JOBS
          - PRIVILEGED_OR_ROOT_CONTAINER
          - PRIVILEGE_ESCALATION_ENABLED
          - CLUSTER_ADMIN_BINDING
          - UNAUTHORIZED_CLUSTER_ADMIN_BINDING
          - ACCESS_CLUSTER_RESOURCES
          - CLEAR_CONTAINER_LOGS
          - CLEAR_K8S_EVENTS
          - LIST_SECRETS
          - SERVICE_ACCOUNT_ACCESS
          - CONTAINER_RESOURCE_DISCOVERY
          - CLUSTER_INTERNAL_NETWORKING
          - TILLER_ENDPOINT_ACCESS
          - DATA_DESTRUCTION
      - name: clustersIds
        in: query
        description: the clusters ids to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MitreTechniqueFixInfo'
        required: true
      responses:
        204:
          description: Success
          content: {}
      x-codegen-request-body-name: body
  /mitre/report/status:
    get:
      tags:
      - mitre
      summary: Get Mitre report status
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportStatus'
  /mitre/report/generate:
    post:
      tags:
      - mitre
      summary: Generate Mitre report
      responses:
        204:
          description: Success
          content: {}
  /mitre/report/download:
    get:
      tags:
      - mitre
      summary: Download Mitre security report
      responses:
        200:
          description: The Mitre report
          content:
            application/json:
              schema:
                type: string
                format: binary
  /networkMap/queue/{requestId}:
    get:
      tags:
      - runtime map
      summary: Get status for network map background job
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundJobResponse'
    delete:
      tags:
      - runtime map
      summary: Cancel the network map background job
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content: {}
        400:
          description: Failure
          content: {}
  /networkMap/results/{requestId}:
    get:
      tags:
      - runtime map
      summary: Get result for network map background job
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetworkMap'
  /appsPolicy:
    get:
      tags:
      - environment policies
      summary: Get the current Apps policy
      parameters:
      - name: policyFilter
        in: query
        description: the filter to filter by. the string must be a json representation
          of PolicyFilter object
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPolicy'
        401:
          description: Unauthorized.
          content: {}
    put:
      tags:
      - environment policies
      summary: Set the current Apps policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppPolicy'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPolicy'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /appsPolicy/searchOptions:
    get:
      tags:
      - environment policies
      summary: Get the current Apps policy filter option
      parameters:
      - name: nameFilter
        in: query
        description: the pod/env name to filter by.
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyFilterSearchResponse'
        401:
          description: Unauthorized.
          content: {}
  /appsPolicy/history:
    get:
      tags:
      - environment policies
      summary: Get the history of Apps policies
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppPolicyHistory'
        401:
          description: Unauthorized.
          content: {}
  /connectionsPolicy/searchOptions:
    get:
      tags:
      - connection policies
      summary: Get the current connection policy filter option
      parameters:
      - name: nameFilter
        in: query
        description: the pod/env name to filter by.
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyFilterSearchResponse'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/{catalogId}/tags:
    get:
      tags:
      - api security
      summary: Get a list of an API spec tags or a specific API
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceTags'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/{catalogId}/methods:
    get:
      tags:
      - api security
      summary: Get a list of an API spec methods for a specific API and its spec's
        tags
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: tags
        in: query
        description: spec tags names
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiServiceMethod'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/api/{catalogId}/hitCountGraph:
    get:
      tags:
      - performance
      summary: Get hit count for specific spec path
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: specPath
        in: query
        description: spec path
        required: true
        schema:
          type: string
      - name: specPathMethod
        in: query
        description: spec path method
        required: true
        schema:
          type: string
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - HEAD
          - CONNECT
          - OPTIONS
          - TRACE
          - PATCH
      - name: hoursInterval
        in: query
        description: hours interval
        schema:
          type: integer
          default: 24
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceSpecPathHitCountGraph'
  /connectionsPolicy:
    get:
      tags:
      - connection policies
      summary: Get current connection policy
      parameters:
      - name: policyFilter
        in: query
        description: the filter to filter by.
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsPolicy'
        401:
          description: Unauthorized.
          content: {}
    put:
      tags:
      - connection policies
      summary: Set the current connection policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionsPolicy'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionsPolicy'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /connectionsPolicy/history:
    get:
      tags:
      - connection policies
      summary: Get the history of the connection policies
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionPolicyHistory'
        401:
          description: Unauthorized.
          content: {}
  /kubernetesApiPolicy:
    get:
      tags:
      - cluster events policies
      summary: Get current Kubernetes API policy
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesApiPolicy'
        401:
          description: Unauthorized.
          content: {}
    put:
      tags:
      - cluster events policies
      summary: set the current Kubernetes API policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesApiPolicy'
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesApiPolicy'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /kubernetesApiPolicy/history:
    get:
      tags:
      - cluster events policies
      summary: Get the history of the Kubernetes API policies
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KubernetesApiPolicyHistory'
        401:
          description: Unauthorized.
          content: {}
  /kubernetesApiPolicy/recommendedRules:
    get:
      tags:
      - cluster events policies
      summary: Get the recommended Kubernetes API rules
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecommendedKubernetesApiRule'
        401:
          description: Unauthorized.
          content: {}
  /kubernetesApiPolicy/kubernetesResources:
    get:
      tags:
      - cluster events policies
      summary: Get the Kubernetes resource list
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KubernetesResource'
        401:
          description: Unauthorized.
          content: {}
  /kubernetesApiPolicy/kubernetesUsers:
    get:
      tags:
      - cluster events policies
      summary: Get the Kubernetes user list
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KubernetesUsersByType'
        401:
          description: Unauthorized.
          content: {}
  /connectionsPolicy/kafka/{kubernetesClusterId}/brokers:
    get:
      tags:
      - connection policies
      summary: Get the a list of kafka brokers
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized.
          content: {}
  /connectionsPolicy/kafka/{kubernetesClusterId}/topics:
    get:
      tags:
      - connection policies
      summary: Get the a list of kafka topics
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized.
          content: {}
  /connectionsPolicy/kafka/actions:
    get:
      tags:
      - connection policies
      summary: Get the a list of kafka actions
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized.
          content: {}
  /istio/supportedVersions:
    get:
      tags:
      - kubernetes
      summary: Get a list of istio releases that are supported by Secure Application
        agent. sorted from latest to oldest
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized.
          content: {}
  /kubernetesClusters:
    get:
      tags:
      - kubernetes
      summary: get a list of current Kubernetes clusters
      parameters:
      - name: onlySpecReconstructionEnabledFilter
        in: query
        description: retrive only clusters that configured as spec reconstruction
          enabled.
        schema:
          type: boolean
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: clusterName
        in: query
        description: the cluster name to filter by
        schema:
          type: string
      - name: kubernetesVersion
        in: query
        description: Filter the clusters by k8s version
        schema:
          type: string
      - name: controllerVersion
        in: query
        description: Filter the clusters by controller version
        schema:
          type: string
      - name: controllerStatus
        in: query
        description: Filter the clusters by controller status
        schema:
          type: string
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KubernetesClusterController'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
      - kubernetes
      summary: Add a new Kubernetes cluster to Secure Application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesCluster'
        required: true
      responses:
        201:
          description: Agent was added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /leanKubernetesClusters:
    get:
      tags:
      - kubernetes
      summary: get a list of current Kubernetes clusters
      parameters:
      - name: clusterName
        in: query
        description: the cluster name to filter by
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeanKubernetesCluster'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /namespaces:
    get:
      tags:
      - kubernetes
      summary: Get a list of current Kubernetes namespaces
      parameters:
      - name: namespaceName
        in: query
        description: the namespace name to filter by
        schema:
          type: string
      - name: clusterName
        in: query
        description: the cluster name to filter by
        schema:
          type: string
      - name: protectionStatus
        in: query
        description: When true, the API will return only protected pods
        schema:
          type: string
          default: ALL
          enum:
          - FULL
          - DEPLOYMENT_ONLY
          - CONNECTION_ONLY
          - DISABLED
          - ALL
      - name: sortKey
        in: query
        description: the namespaces sort key
        schema:
          type: string
          default: namespaceName
          enum:
          - namespaceName
          - clusterName
          - runningPods
          - protectionStatus
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Namespace'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /kubernetesClusters/{kubernetesClusterId}:
    get:
      tags:
      - kubernetes
      summary: get the Kubernetes cluster with the given id
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
      - kubernetes
      summary: Update the Kubernetes cluster
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesCluster'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - kubernetes
      summary: Delete a Kubernetes cluster
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /kubernetesClusters/{kubernetesClusterId}/managedByHelm:
    put:
      tags:
      - kubernetes
      summary: Update the Kubernetes cluster which managed by HELM
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditKubernetesClusterManagedByHelm'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesCluster'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /kubernetesClusters/{kubernetesClusterId}/deleteDependencies:
    get:
      tags:
      - kubernetes
      summary: get dependencies which need to be handled in order to delete specified
        Kubernetes cluster
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesClusterDeleteDependencies'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /kubernetesClusters/{kubernetesClusterId}/download_bundle:
    get:
      tags:
      - kubernetes
      summary: Get Secure Application installation script
      description: In order to install,  extract and run "./install_bundle.sh"
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      - name: sendTelemetriesIntervalSec
        in: query
        description: The time interval for sending telemetries
        schema:
          type: integer
          default: 30
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /kubernetesClusters/{kubernetesClusterId}/getHelmCommands:
    get:
      tags:
      - kubernetes
      summary: Get Panoptica Aug release Helm command
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmCommandsInstallation'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /kubernetesClusters/{kubernetesClusterId}/services:
    get:
      tags:
      - kubernetes
      summary: List services on a specific Kubernetes cluster
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      - name: showIstioOnly
        in: query
        description: if true, return only services deployed on namespace with label
          istio-injection=enabled
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KubernetesService'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /kubernetesClusters/{kubernetesClusterId}/namespaces:
    get:
      tags:
      - kubernetes
      summary: List namespaces on a specific Kubernetes cluster
      parameters:
      - name: kubernetesClusterId
        in: path
        description: Secure Application Kubernetes cluster ID
        required: true
        schema:
          type: string
          format: uuid
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: name
          enum:
          - name
          - status
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: includeScannable
        in: query
        description: If true - return all scannable namespaces
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KubernetesNamespaceResponse'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /podDefinitions:
    get:
      tags:
      - kubernetes
      summary: Get all pod definitions on the system
      parameters:
      - name: name
        in: query
        description: Filter pod definitions by name
        schema:
          type: string
      - name: clusterName
        in: query
        description: Filter pod definitions by cluster name
        schema:
          type: string
      - name: templateSource
        in: query
        description: Filter pod definitions by template source
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: deploymentType
        in: query
        description: Filter pod definitions by deployment type
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PodDefinition'
    post:
      tags:
      - kubernetes
      summary: Create a new pod definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodDefinition'
        required: true
      responses:
        201:
          description: A new pod definition was added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodDefinition'
        409:
          description: |
            An existing Pod definition already has this name
          content: {}
      x-codegen-request-body-name: body
  /podDefinitions/{podId}:
    put:
      tags:
      - kubernetes
      summary: Change pod definition
      parameters:
      - name: podId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodDefinition'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodDefinition'
      x-codegen-request-body-name: body
    delete:
      tags:
      - kubernetes
      summary: Delete a pod definition
      parameters:
      - name: podId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /expansions:
    get:
      tags:
      - expansions
      summary: List all the expansions on the system
      parameters:
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortKey
        in: query
        description: sort key
        required: true
        schema:
          type: string
          enum:
          - name
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      - name: name
        in: query
        description: Filter expansions by name
        schema:
          type: string
      - name: clusterName
        in: query
        description: Filter expansions by cluster name
        schema:
          type: string
      - name: namespaceName
        in: query
        description: Filter expansions by namespace
        schema:
          type: string
      - name: controllerVersion
        in: query
        description: Filter the clusters by controller version
        schema:
          type: string
      - name: controllerStatus
        in: query
        description: Filter the clusters by controller status
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expansion'
    post:
      tags:
      - expansions
      summary: Create a new expansion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expansion'
        required: true
      responses:
        201:
          description: A new expansion was added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expansion'
        409:
          description: |
            An existing expansion already has this name
          content: {}
      x-codegen-request-body-name: body
  /expansions/{expansionId}:
    put:
      tags:
      - expansions
      summary: Edit expansion definition
      parameters:
      - name: expansionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpansionPut'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expansion'
      x-codegen-request-body-name: body
    delete:
      tags:
      - expansions
      summary: Delete an expansion
      parameters:
      - name: expansionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /deployers:
    get:
      tags:
      - deployers
      summary: List all the deployers on the system
      parameters:
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortKey
        in: query
        description: sort key
        required: true
        schema:
          type: string
          enum:
          - deployer
          - type
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: name
        in: query
        description: Filter deployers by name
        schema:
          type: string
      - name: ruleCreation
        in: query
        description: Filter deployers by rule creation
        schema:
          type: boolean
      - name: securityCheck
        in: query
        description: Filter deployers by security checks
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deployer'
    post:
      tags:
      - deployers
      summary: Create a new deployer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployer'
        required: true
      responses:
        201:
          description: A new deployer was added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployer'
        409:
          description: |
            An existing deployer already has this name
          content: {}
      x-codegen-request-body-name: body
  /deployers/{deployerId}:
    put:
      tags:
      - deployers
      summary: Edit deployer definition
      parameters:
      - name: deployerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deployer'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployer'
      x-codegen-request-body-name: body
    delete:
      tags:
      - deployers
      summary: Delete an deployer
      parameters:
      - name: deployerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /deployers/{deployerId}/deleteDependencies:
    get:
      tags:
      - deployers
      summary: get dependencies which need to be handled in order to delete specified
        deployer
      parameters:
      - name: deployerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployerDeleteDependencies'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /deployers/serviceAccounts:
    get:
      tags:
      - deployers
      summary: List all the service account on the system
      parameters:
      - name: kubernetesClusterId
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: namespaceName
        in: query
        description: the namespace name to filter by
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAccountInfo'
  /expansions/{expansionId}/install_expansion.tar.gz:
    get:
      tags:
      - expansions
      summary: Get the expansion installation
      parameters:
      - name: expansionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /serverlessPolicy:
    get:
      tags:
      - serverless policies
      summary: Get current serverless policy
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerlessPolicy'
        401:
          description: Unauthorized.
          content: {}
    put:
      tags:
      - serverless policies
      summary: Set the current serverless policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerlessPolicy'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerlessPolicy'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /serverlessPolicy/history:
    get:
      tags:
      - connection policies
      summary: Get the history of the serverless policies
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionPolicyHistory'
        401:
          description: Unauthorized.
          content: {}
  /cd/serverlessRule:
    post:
      tags:
      - CD
      summary: Adds cd serverless rule.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdServerlessRule'
        required: true
      responses:
        201:
          description: created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdServerlessRule'
      x-codegen-request-body-name: body
  /cd/{ruleId}/serverlessRule:
    get:
      tags:
      - CD
      summary: get a cd serverless rule.
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdServerlessRule'
    put:
      tags:
      - CD
      summary: update a cd serverless rule.
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdServerlessRule'
        required: true
      responses:
        200:
          description: updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdServerlessRule'
      x-codegen-request-body-name: body
    delete:
      tags:
      - CD
      summary: delete a cd serverless rule.
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: deleted
          content: {}
  /cloudAccounts:
    get:
      tags:
      - serverless
      summary: List all the cloud accounts on the system
      parameters:
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      - name: sortKey
        in: query
        description: sort key
        required: true
        schema:
          type: string
          enum:
          - lastScanned
          - name
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: cloudAccountName
        in: query
        description: Filter cloud accounts by name
        schema:
          type: string
      - name: region
        in: query
        description: Filter cloud accounts by region
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloudAccount'
  /cloudAccounts/installationDetails:
    get:
      tags:
      - serverless
      summary: Get the installation details
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerlessInstallationDetails'
  /cloudAccounts/azureInstallationDetails:
    get:
      tags:
      - serverless
      summary: Get the Azure installation details
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerlessAzureInstallationDetails'
  /cloudAccounts/{cloudAccountId}:
    put:
      tags:
      - serverless
      summary: Edit cloud account definition
      parameters:
      - name: cloudAccountId
        in: path
        description: cloud account ID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudAccount'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudAccount'
      x-codegen-request-body-name: body
    delete:
      tags:
      - serverless
      summary: Delete a cloud account
      parameters:
      - name: cloudAccountId
        in: path
        description: cloud account ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /cloudAccounts/regions/AWS:
    get:
      tags:
      - serverless
      summary: List all the possible regions of AWS
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AwsRegion'
  /cloudAccounts/regions/Azure:
    get:
      tags:
      - serverless
      summary: List all the possible regions of Azure
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /cloudAccounts/scan:
    post:
      tags:
      - serverless
      summary: invoke cloud account scan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerlessScanConfig'
        required: true
      responses:
        204:
          description: Scan with the returned scanId was added to execution queue.
          content: {}
        400:
          description: invalid config
          content: {}
        412:
          description: Failed to scan given cloud accounts
          content: {}
      x-codegen-request-body-name: body
  /cloudAccounts/{cloudAccountId}/download_bundle:
    get:
      tags:
      - serverless
      summary: Get Secure Application installation script
      description: In order to install, extract and run "./install_bundle.sh"
      parameters:
      - name: cloudAccountId
        in: path
        description: cloud account ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /serverless/functions/names:
    get:
      tags:
      - serverless
      summary: Get serverless functions names
      parameters:
      - name: funcName
        in: query
        description: Defined function name
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: region
        in: query
        description: Filter cloud accounts by region
        schema:
          type: string
      - name: cloudAccountName
        in: query
        description: Filter cloud accounts by name
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerlessFunctionNames'
        401:
          description: Unauthorized.
          content: {}
  /serverless/functions/arns:
    get:
      tags:
      - serverless
      summary: Get serverless functions names
      parameters:
      - name: funcArn
        in: query
        description: Defined function ARN
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: region
        in: query
        description: Filter cloud accounts by region
        schema:
          type: string
      - name: cloudAccountName
        in: query
        description: Filter cloud accounts by name
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerlessFunctionArns'
        401:
          description: Unauthorized.
          content: {}
  /cloudAccounts/{cloudAccountId}/deleteDependencies:
    get:
      tags:
      - serverless
      summary: get dependencies which need to be handled in order to delete specified
        cloud account
      parameters:
      - name: cloudAccountId
        in: path
        description: cloud account ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudAccountDeleteDependencies'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /serverless/functions:
    get:
      tags:
      - serverless
      summary: Get serverless functions
      parameters:
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: funcName
        in: query
        description: Defined function name
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: cloudAccountsIdsFilter
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            format: uuid
      - name: secretsRisk
        in: query
        description: The risk of the serverless function secrets
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - NO_KNOWN_RISK
            - RISK_IDENTIFIED
      - name: policyRisk
        in: query
        description: The risk of the serverless functioriskFindingsn policy
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - LOW
            - MEDIUM
            - HIGH
            - CRITICAL
      - name: risk
        in: query
        description: The risk of the serverless function
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - LOW
            - MEDIUM
            - HIGH
            - CRITICAL
      - name: region
        in: query
        description: Filter cloud accounts by region
        schema:
          type: string
      - name: cloudAccountName
        in: query
        description: Filter cloud accounts by name
        schema:
          type: string
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      - name: result
        in: query
        description: serverless function result filter
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - ALLOW
            - DETECT
            - BLOCK
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerlessFunction'
        401:
          description: Unauthorized.
          content: {}
  /serverless/zipFiles:
    get:
      tags:
      - serverless
      summary: Get serverless zip files that was scanned by cli
      parameters:
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: zipNameFilter
        in: query
        schema:
          type: string
      - name: zipSha256Filter
        in: query
        schema:
          type: string
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: VULNERABILITIES
          enum:
          - TIME
          - VULNERABILITIES
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerlessZip'
        401:
          description: Unauthorized.
          content: {}
  /serverless/zipFiles/{zipId}:
    get:
      tags:
      - serverless
      summary: Get specific zip file record
      parameters:
      - name: zipId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerlessZip'
        401:
          description: Unauthorized.
          content: {}
  /serverless/zipFiles/{zipId}/vulnerabilities:
    get:
      tags:
      - serverless
      summary: Returns a list of vulnerabilities detected in the serverless zip
      parameters:
      - name: zipId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vulnerability'
  /serverless/zipFiles/{zipId}/packages:
    get:
      tags:
      - serverless
      summary: Returns a list of packages for a specific serverless zip
      parameters:
      - name: zipId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/imagePackageDetails'
        401:
          description: Unauthorized.
          content: {}
  /serverless/functions/{functionId}:
    get:
      tags:
      - serverless
      summary: Get Serverless Function by ID
      parameters:
      - name: functionId
        in: path
        description: Function ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerlessFunction'
        404:
          description: Function with given ID does not exist
          content: {}
  /serverless/functions/{functionId}/secrets:
    get:
      tags:
      - serverless
      summary: Get Serverless Function secrets issues
      parameters:
      - name: functionId
        in: path
        description: Function ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServerlessFunctionSecretIssue'
        404:
          description: Function with given ID does not exist
          content: {}
  /serverless/functions/{functionId}/vulnerabilities:
    get:
      tags:
      - serverless
      summary: Get Serverless Function Vulnerabilities by ID
      parameters:
      - name: functionId
        in: path
        description: Function ID
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vulnerability'
        404:
          description: Function with given ID does not exist
          content: {}
  /ciPolicy:
    get:
      tags:
      - CI/CD policies
      summary: Get the current CI policy
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiPolicy'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - CI/CD policies
      summary: Set the current CI policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CiPolicy'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiPolicy'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /ciPolicy/{policyId}:
    put:
      tags:
      - CI/CD policies
      summary: Edit CI policy
      parameters:
      - name: policyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CiPolicy'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiPolicy'
      x-codegen-request-body-name: body
    delete:
      tags:
      - CI/CD policies
      summary: Delete CI policy
      parameters:
      - name: policyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /cdPolicy:
    get:
      tags:
      - CI/CD policies
      summary: Get the current CD policy
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CdPolicy'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - CI/CD policies
      summary: Set the current CD policy. At least one CdPolicyElement should be present
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdPolicy'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdPolicy'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /cdPolicy/{policyId}:
    put:
      tags:
      - CI/CD policies
      summary: Edit CD policy. At least one CdPolicyElement should be present
      parameters:
      - name: policyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdPolicy'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdPolicy'
      x-codegen-request-body-name: body
    delete:
      tags:
      - CI/CD policies
      summary: Delete CD policy
      parameters:
      - name: policyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /apiSecurityPolicy:
    get:
      tags:
      - API security policies
      summary: Get a list of API security policies
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiSecurityPolicy'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - API security policies
      summary: Add new API security policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSecurityPolicy'
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSecurityPolicy'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /apiSecurityPolicy/{policyId}/deleteDependencies:
    get:
      tags:
      - API security policies
      summary: get dependencies which need to be handled in order to delete specified
        api security service
      parameters:
      - name: policyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSecurityPolicyDeleteDependencies'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /apiSecurityPolicy/{policyId}:
    put:
      tags:
      - API security policies
      summary: Edit Api security policy.
      parameters:
      - name: policyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSecurityPolicy'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSecurityPolicy'
      x-codegen-request-body-name: body
    delete:
      tags:
      - API security policies
      summary: Delete api security policy
      parameters:
      - name: policyId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /podSecurityPolicyProfiles:
    get:
      tags:
      - psp profiles
      summary: Get all the pod security standards profiles on the system
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PodSecurityPolicy'
    post:
      tags:
      - psp profiles
      summary: Create a new pod security standards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodSecurityPolicy'
        required: true
      responses:
        201:
          description: A new pod security policy standards was added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodSecurityPolicy'
        409:
          description: |
            An existing pod security standards profile already has this name
          content: {}
      x-codegen-request-body-name: body
  /podSecurityPolicyProfiles/{profileId}:
    put:
      tags:
      - psp profiles
      summary: Change pod security standards profile
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PodSecurityPolicy'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodSecurityPolicy'
      x-codegen-request-body-name: body
    delete:
      tags:
      - psp profiles
      summary: Delete a pod security policy standards
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /podSecurityPolicyProfiles/batch:
    post:
      tags:
      - psp profiles
      summary: Add a number of Pod Security Standards
      description: |
        Add a number of new Pod Security Standards Profiles.
      requestBody:
        description: psp definition
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PodSecurityPolicy'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PodSecurityPolicy'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /seccompProfiles/validateData:
    post:
      tags:
      - settings
      summary: Test the seccomp profile data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeccompProfileData'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: seccomp data is invalid
          content: {}
      x-codegen-request-body-name: body
  /seccompProfiles:
    get:
      tags:
      - psp profiles
      summary: Get all the seccomp profiles on the system
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SeccompProfile'
    post:
      tags:
      - psp profiles
      summary: Add seccomp profile
      requestBody:
        description: seccomp profile
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeccompProfile'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeccompProfile'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /seccompProfiles/{profileId}:
    put:
      tags:
      - psp profiles
      summary: Change seccomp profile
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeccompProfile'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeccompProfile'
      x-codegen-request-body-name: body
    delete:
      tags:
      - psp profiles
      summary: Delete a seccomp profile
      parameters:
      - name: profileId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /agents:
    get:
      tags:
      - agent management
      summary: List all installed agents
      parameters:
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: hostName
          enum:
          - hostName
          - environmentName
          - risk
          - status
          - lastActive
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: hostName
        in: query
        description: The name of the host
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: status
        in: query
        description: Agent status
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - ACTIVE
            - INACTIVE
            - STOPPED
            - TERMINATED
      - name: environmentName
        in: query
        description: Empty string means no filtering. "UNDEFINED" means telemetries
          with no App type
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: risk
        in: query
        description: The risk of the environment for attack
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - HIGH
            - MEDIUM
            - LOW
            - UNDEFINED
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agents'
        401:
          description: Unauthorized.
          content: {}
  /agents/{agentId}/updateState:
    post:
      tags:
      - agent management
      summary: Update the status of an agent with the given id
      parameters:
      - name: agentId
        in: path
        description: Secure Application agent ID
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentStatusUpdate'
        required: true
      responses:
        204:
          description: Status was successfully changed.
          content: {}
        402:
          description: Account is disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      x-codegen-request-body-name: body
  /agents/{agentId}/update:
    post:
      tags:
      - agent management
      summary: Update the agent with the given id to the latest agent version
      parameters:
      - name: agentId
        in: path
        description: Secure Application agent ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Status was successfully changed.
          content: {}
        402:
          description: Account is disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /tools/cli/securecn_deployment_cli:
    get:
      tags:
      - cli
      description: Get the Secure Application deployment cli
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
  /settings/integrations/eventForwarding/{eventForwardingId}:
    put:
      tags:
      - settings
      description: Edit the event forwarding integration details
      parameters:
      - name: eventForwardingId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplunkEventsForwardingDetails'
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsForwardingDetails'
      x-codegen-request-body-name: body
    delete:
      tags:
      - settings
      description: Delete the event forwarding integration details with the given
        id
      parameters:
      - name: eventForwardingId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /settings/integrations/eventForwarding:
    get:
      tags:
      - settings
      summary: Get the event forwarding integration details
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsForwardingDetailsList'
    post:
      tags:
      - settings
      summary: Set the event forwarding integration details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventsForwardingDetails'
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsForwardingDetails'
      x-codegen-request-body-name: body
  /settings/integrations/slack/testIntegration:
    post:
      tags:
      - settings
      summary: Test the Slack integration by sending test message to the provided
        URL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSlackIntegrationRequest'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: Failed to send messages to Slack
          content: {}
      x-codegen-request-body-name: body
  /settings/integrations/webex/testIntegration:
    post:
      tags:
      - settings
      summary: Test the Webex integration by sending test message to the provided
        URL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestWebexIntegrationRequest'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: Failed to send messages to Webex
          content: {}
      x-codegen-request-body-name: body
  /settings/integrations/securex/testIntegration:
    post:
      tags:
      - settings
      summary: Test the SecureX integration by sending test message to the provided
        URL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSecureXIntegrationRequest'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: Failed to send messages to SecureX
          content: {}
      x-codegen-request-body-name: body
  /settings/integrations/sumoLogic/testIntegration:
    post:
      tags:
      - settings
      summary: Test the Sumo Logic integration by sending test message to the provided
        URL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSumoLogicIntegrationRequest'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: Failed to send messages to Sumo Logic
          content: {}
      x-codegen-request-body-name: body
  /settings/integrations/opsgenie/testIntegration:
    post:
      tags:
      - settings
      summary: Test the connection to Opsgenie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestOpsgenieConnectionRequest'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: Failed to send messages to Opsgenie
          content: {}
      x-codegen-request-body-name: body
  /settings/integrations/splunk/testIntegration:
    post:
      tags:
      - settings
      summary: Test the connection to Splunk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSplunkConnectionRequest'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: Failed to send messages to Splunk
          content: {}
      x-codegen-request-body-name: body
  /settings/integrations/teams/testIntegration:
    post:
      tags:
      - settings
      summary: Test the connection to Teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestTeamsIntegrationRequest'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: Failed to send messages to Teams
          content: {}
      x-codegen-request-body-name: body
  /settings/agentsUpdate:
    get:
      tags:
      - settings
      summary: Get the agents update configurations
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsUpdateSettings'
    put:
      tags:
      - settings
      summary: get the agents update configurations.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsUpdateSettings'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsUpdateSettings'
      x-codegen-request-body-name: agentsUpdateSettings
  /settings/agentsUpdate/updateNow:
    post:
      tags:
      - settings
      summary: Update the agents of the account now
      responses:
        204:
          description: Success
          content: {}
  /settings/integrations/ca:
    get:
      tags:
      - settings
      summary: Get the CA integration details
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaIntegrationResponseWithClusters'
    post:
      tags:
      - settings
      summary: Set the CA integration details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaIntegrationRequest'
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaIntegrationResponse'
      x-codegen-request-body-name: body
  /settings/integrations/ca/{id}:
    put:
      tags:
      - settings
      description: Edit the CA integration details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaIntegrationRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaIntegrationResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - settings
      description: Delete the CA integration details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /auditLogs:
    get:
      tags:
      - audit logs
      summary: Get audit logs
      parameters:
      - name: startTime
        in: query
        description: Start date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: End date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: time
          enum:
          - time
          - action
          - objectType
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: user
        in: query
        description: User name
        schema:
          type: string
      - name: actions
        in: query
        description: Actions
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: objectType
        in: query
        description: Object Type
        schema:
          type: string
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
        401:
          description: Unauthorized.
          content: {}
  /auditLogs/actions:
    get:
      tags:
      - audit logs
      summary: Get all the audit logs actions
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized.
          content: {}
  /riskAssessment/permissions:
    get:
      tags:
      - risk assessment
      summary: Get list of clusters and their permissions
      parameters:
      - name: clustersIds
        in: query
        description: the clusters ids to filter by
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            format: uuid
      - name: permissionRisk
        in: query
        description: the risk to filter by
        schema:
          type: string
          enum:
          - NO_RISK
          - MEDIUM
          - HIGH
          - APPROVED
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: permissionRisk
          enum:
          - permissionRisk
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: includeSystemOwners
        in: query
        description: include systems default owners
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterPermission'
        401:
          description: Unauthorized.
          content: {}
  /riskAssessment/permissions/{clusterId}:
    get:
      tags:
      - risk assessment
      summary: Get all of the users permissions
      parameters:
      - name: clusterId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: owner
        in: query
        description: owner name
        schema:
          type: string
      - name: ownerType
        in: query
        description: owner type
        schema:
          type: string
          enum:
          - SERVICEACCOUNT
          - USER
          - GROUP
      - name: namespaceName
        in: query
        description: the namespace name to filter by
        schema:
          type: string
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: owner
          enum:
          - owner
          - ownerType
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      - name: permissionRisk
        in: query
        description: the risk to filter by
        schema:
          type: string
          enum:
          - NO_RISK
          - MEDIUM
          - HIGH
          - APPROVED
      - name: includeSystemOwners
        in: query
        description: include systems default owners
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerResponse'
        401:
          description: Unauthorized.
          content: {}
  /riskAssessment/permissions/{clusterId}/{ownerId}:
    get:
      tags:
      - risk assessment
      summary: Get the owner permissions
      parameters:
      - name: clusterId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: ownerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: isApproved
        in: query
        description: Return approved / not approved entries
        schema:
          type: boolean
          default: false
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: risk
          enum:
          - risk
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
        401:
          description: Unauthorized.
          content: {}
  /riskAssessment/permissions/{ownerId}/approve:
    post:
      tags:
      - risk assessment
      summary: add / remove permissions to /from the approved permissions list
      parameters:
      - name: ownerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: actionType
        in: query
        description: The approve action type (ADD/REMOVE)
        required: true
        schema:
          type: string
          enum:
          - ADD
          - REMOVE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UuidList'
        required: true
      responses:
        204:
          description: Success
          content: {}
      x-codegen-request-body-name: body
  /riskAssessment/permissions/{clusterId}/{ownerId}/{roleId}:
    get:
      tags:
      - risk assessment
      summary: Get the owner permissions
      parameters:
      - name: clusterId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: ownerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: roleId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionRoleResponse'
        401:
          description: Unauthorized.
          content: {}
  /auditLogs/kubernetes:
    get:
      tags:
      - audit logs
      summary: Get audit logs
      parameters:
      - name: startTime
        in: query
        description: Start date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: End date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: resourceKind
        in: query
        description: Resource kind
        schema:
          type: string
      - name: resourceName
        in: query
        description: Resource name
        schema:
          type: string
      - name: kubernetesAuditAction
        in: query
        description: Kubernetes audit action
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: user
        in: query
        description: User name
        schema:
          type: string
      - name: namespaceName
        in: query
        description: the namespace name to filter by
        schema:
          type: string
      - name: clusterName
        in: query
        description: the cluster name to filter by
        schema:
          type: string
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: lastSeen
          enum:
          - firstSeen
          - lastSeen
          - action
          - user
          - total
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: result
        in: query
        description: event result filter
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - ALLOW
            - DETECT
            - BLOCK
            - RISKY
      - name: downloadAsXlsx
        in: query
        description: When true, the API will return an xlsx file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KubernetesAuditLog'
        401:
          description: Unauthorized.
          content: {}
  /auditLogs/kubernetes/actions:
    get:
      tags:
      - audit logs
      summary: Get all the kubernetes audit logs actions
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized.
          content: {}
  /cd:
    get:
      tags:
      - CD
      summary: Get all the CD pipelines results
      parameters:
      - name: startTime
        in: query
        description: Start date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        description: End date of the query
        required: true
        schema:
          type: string
          format: date-time
      - name: resourceName
        in: query
        description: Resource name
        schema:
          type: string
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: time
          enum:
          - time
          - status
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CDPipelineResult'
        401:
          description: Unauthorized.
          content: {}
  /cd/connectionsRule:
    post:
      tags:
      - CD
      summary: Adds cd connection rule.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdConnectionRule'
        required: true
      responses:
        201:
          description: created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdConnectionRule'
      x-codegen-request-body-name: body
  /cd/{ruleId}/connectionsRule:
    get:
      tags:
      - CD
      summary: get a cd connection rule.
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdConnectionRule'
    put:
      tags:
      - CD
      summary: update a cd connection rule.
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdConnectionRule'
        required: true
      responses:
        200:
          description: updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdConnectionRule'
      x-codegen-request-body-name: body
    delete:
      tags:
      - CD
      summary: delete a cd connection rule.
      parameters:
      - name: ruleId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: deleted
          content: {}
  /cd/{resourceId}:
    get:
      tags:
      - CD
      summary: Get A single CD pipeline results
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: risk
          enum:
          - risk
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdPipelineResourceResult'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/externalCatalog/count:
    get:
      tags:
      - api security
      summary: Get the number of existing 3rd party APIs in the inventory
      parameters:
      - name: includeServiceWithNoSpec
        in: query
        description: When false, only services with specs wikk be returned
        schema:
          type: boolean
          default: true
      - name: name
        in: query
        description: the Api Catalog name filter
        schema:
          type: string
      - name: updatedAfter
        in: query
        description: Only Apis updated since this date
        schema:
          type: string
          format: date-time
      responses:
        200:
          description: Number of APIs in the inventory
          content:
            application/json:
              schema:
                type: integer
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/externalCatalog:
    get:
      tags:
      - api security
      summary: Get a list of APIs and their compliance
      parameters:
      - name: includeServiceWithNoSpec
        in: query
        description: When false, only services with specs wikk be returned
        schema:
          type: boolean
          default: true
      - name: apiPolicyProfiles
        in: query
        description: Names of the Api Policy Profiles
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sortKey
        in: query
        description: the Api Catalog sort key
        schema:
          type: string
          enum:
          - name
          - risk
      - name: name
        in: query
        description: the Api Catalog name filter
        schema:
          type: string
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      - name: updatedAfter
        in: query
        description: Only Apis updated since this date
        schema:
          type: string
          format: date-time
      - name: drillDownScore
        in: query
        description: Return associated score
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceListExternal'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/count:
    get:
      tags:
      - api security
      summary: Get the number of existing 3rd party APIs in the inventory
      parameters:
      - name: namespacesFilter
        in: query
        description: namespace filter. a base 64 representation of a list of NamespacesFilter
          definition object
        schema:
          type: string
          format: base64
      - name: includeServiceWithNoSpec
        in: query
        description: When false, only services with specs wikk be returned
        schema:
          type: boolean
          default: true
      - name: name
        in: query
        description: the Api Catalog name filter
        schema:
          type: string
      - name: updatedAfter
        in: query
        description: Only Apis updated since this date
        schema:
          type: string
          format: date-time
      responses:
        200:
          description: Number of APIs in the inventory
          content:
            application/json:
              schema:
                type: integer
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog:
    get:
      tags:
      - api security
      summary: Get a list of APIs and their compliance
      parameters:
      - name: namespacesFilter
        in: query
        description: namespace filter. a base 64 representation of a list of NamespacesFilter
          definition object
        schema:
          type: string
          format: base64
      - name: includeServiceWithNoSpec
        in: query
        description: When false, only services with specs wikk be returned
        schema:
          type: boolean
          default: true
      - name: apiPolicyProfiles
        in: query
        description: Names of the Api Policy Profiles
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: sortKey
        in: query
        description: the Api Catalog sort key
        schema:
          type: string
          enum:
          - name
          - risk
      - name: name
        in: query
        description: the Api Catalog name filter
        schema:
          type: string
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      - name: updatedAfter
        in: query
        description: Only Apis updated since this date
        schema:
          type: string
          format: date-time
      - name: drillDownScore
        in: query
        description: Return associated score
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceListInternal'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/externalCatalog/{catalogId}:
    get:
      tags:
      - api security
      summary: Get information about a specific API
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: apiPolicyProfiles
        in: query
        description: Names of the Api Policy Profiles
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: downloadAsJson
        in: query
        description: When true, the API will return an json file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceDrillDownExternal'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}:
    get:
      tags:
      - api security
      summary: Get information about a specific API
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: apiPolicyProfiles
        in: query
        description: Names of the Api Policy Profiles
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: downloadAsJson
        in: query
        description: When true, the API will return an json file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceDrillDownInternal'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}/startTraceAnalysis:
    post:
      tags:
      - api security
      summary: Start trace analysis
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceAnalysisConfiguration'
        required: true
      responses:
        204:
          description: No content
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /apiSecurity/internalCatalog/{catalogId}/resetTraceAnalysis:
    post:
      tags:
      - api security
      summary: Reset trace analysis
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: No content
          content: {}
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}/stopTraceAnalysis:
    post:
      tags:
      - api security
      summary: Stop trace analysis
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: No content
          content: {}
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}/traceAnalysis:
    get:
      tags:
      - api security
      summary: Get trace analysis details
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceAnalysisDetails'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}/bfla:
    get:
      tags:
      - api security
      - bfla
      summary: Get bfla info for given catalogId
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceBflaInfo'
        401:
          description: Unauthorized.
          content: {}
    put:
      tags:
      - api security
      - bfla
      summary: update BFLA info for this catalogId
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiServiceBflaInfo'
        required: true
      responses:
        200:
          description: Updated
          content:
            application/json:
              schema:
                type: string
                format: uuid
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /apiSecurity/internalCatalog/{catalogId}/bfla/learning:
    post:
      tags:
      - api security
      - bfla
      summary: Start new bfla learning phase
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BflaDurationConfiguration'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: string
                format: uuid
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - api security
      - bfla
      summary: stop bfla learning phase
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Stopped
          content:
            application/json:
              schema:
                type: string
                format: uuid
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}/bfla/detection:
    post:
      tags:
      - api security
      - bfla
      summary: Start new bfla detection phase
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BflaDurationConfiguration'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: string
                format: uuid
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - api security
      - bfla
      summary: stop bfla detection phase
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Stopped
          content:
            application/json:
              schema:
                type: string
                format: uuid
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}/bfla/reset:
    post:
      tags:
      - api security
      - bfla
      summary: Reset bfla model
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: string
                format: uuid
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}/fuzzingTests:
    get:
      tags:
      - api security
      summary: Get list of fuzzing tests
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiServiceFuzzingTest'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}/fuzzingStatus:
    get:
      tags:
      - api security
      summary: Get status of the last/running fuzzing test
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceFuzzingProgress'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/internalCatalog/{catalogId}/startFuzzing:
    post:
      tags:
      - api security
      summary: Start new fuzzing test
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiFuzzingTestConfiguration'
        required: true
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceFuzzingTest'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /apiSecurity/internalCatalog/{catalogId}/stopFuzzing:
    post:
      tags:
      - api security
      summary: Stop fuzzing test
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: No content
          content: {}
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/{catalogId}/deleteDependencies:
    get:
      tags:
      - api security
      summary: get dependencies which need to be handled in order to delete specified
        api security service
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceDeleteDependencies'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /apiSecurity/openApiSpecs/{catalogId}/reconstructedSpec/status:
    get:
      tags:
      - api security
      summary: Get the status of a spec reconstruction
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReconstructionResponse'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/openApiSpecs/{catalogId}/reconstructedSpec/learn:
    post:
      tags:
      - api security
      summary: Start learning and reconstructing an API via API Clarity
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiReconstructionRequest'
        required: false
      responses:
        204:
          description: Success
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /apiSecurity/openApiSpecs/{catalogId}/reconstructedSpec/abort:
    post:
      tags:
      - api security
      summary: abort learning and reconstructing an API via API Clarity
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/openApiSpecs/{catalogId}/reconstructedSpec/review:
    get:
      tags:
      - api security
      summary: Get the suggestions of a spec reconstruction (or previously cached
        info)
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReconstructedSpec'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/openApiSpecs/{catalogId}/reconstructedSpec/review/approve:
    post:
      tags:
      - api security
      summary: Approve reconstructed spec suggestions (only 1 approval per catalogId)
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiReconstructedSpec'
        required: true
      responses:
        204:
          description: Success
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /apiSecurity/openApiSpecs/{catalogId}:
    get:
      tags:
      - api security
      summary: Get provided and reconstructed open api specs for specific API
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiSpec'
        401:
          description: Unauthorized.
          content: {}
    put:
      tags:
      - api security
      summary: Add or edit a spec about a specific API for the account
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: Json or Yaml representing openapi spec V2 or V3
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiSpec'
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - api security
      summary: delete open api spec include all of it findings and scores
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiSpecScoreStatus'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/openApiSpecs/{catalogId}/diffDetectionStatus:
    get:
      tags:
      - api security
      summary: Get provided and reconstructed open api specs for specific API
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: diff detection status. in case of in progress, will reveal
            the detection end time. will return null for external services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiffDetectionStatus'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/openApiSpecs/{catalogId}/startDiffsDetection:
    post:
      tags:
      - api security
      summary: Start spec diffs detection
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionDuration'
        required: true
      responses:
        204:
          description: No content
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
  /apiSecurity/openApiSpecs/{catalogId}/stopDiffsDetection:
    post:
      tags:
      - api security
      summary: stop spec diffs detection
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: No content
          content: {}
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/openApiSpecs/{catalogId}/getOpenApiSpecScoreStatus:
    get:
      tags:
      - api security
      summary: Get open api spec score status
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiSpecScoreStatus'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/openApiSpecs/{catalogId}/openApiSpecSwagger.json:
    get:
      tags:
      - api security
      summary: Get provided spec content as json
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/openApiSpecs/{catalogId}/reconstructedSpecJson:
    get:
      tags:
      - api security
      summary: Get reconstructed open api spec as json for specific API
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: downloadAsJson
        in: query
        description: When true, the API will return an json file, and pagination will
          be ignored
        schema:
          type: boolean
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/api:
    post:
      tags:
      - api security
      summary: Register an API for scoring
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSecurityApi'
        required: true
      responses:
        201:
          description: the new api id
          content:
            application/json:
              schema:
                type: string
                format: uuid
        401:
          description: Unauthorized.
          content: {}
        403:
          description: Forbidden. Api Security is disabled for user
          content: {}
        404:
          description: Api with given catalogId does not exist
          content: {}
      x-codegen-request-body-name: body
  /apiSecurity/api/{catalogId}:
    delete:
      tags:
      - api security
      summary: Delete an API
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/riskFindings:
    get:
      tags:
      - api security
      summary: Get a list of risk findings
      parameters:
      - name: name
        in: query
        description: Name of the risk finding name
        schema:
          type: string
      - name: risks
        in: query
        description: The API risk filter
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - LOW
            - MEDIUM
            - HIGH
            - CRITICAL
            - ALL
      - name: category
        in: query
        description: Category of the risk finding
        schema:
          type: string
      - name: source
        in: query
        description: Source of the risk finding
        schema:
          type: string
      - name: element
        in: query
        description: Affected element of the risk finding
        schema:
          type: string
      - name: detected
        in: query
        description: 'Show finding with detect elements only '
        schema:
          type: boolean
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: sortKey
        in: query
        description: Risk finding sort key.
        required: true
        schema:
          type: string
          default: RISK
          enum:
          - NAME
          - RISK
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      - name: apiSecSource
        in: query
        description: source filter. an enum representing the source of the APIs service
          in scope
        required: true
        schema:
          type: string
          default: INTERNAL
          enum:
          - INTERNAL
          - EXTERNAL
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskFindings'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/riskFindings/{riskFindingId}:
    get:
      tags:
      - api security
      summary: Get a specific risk findings
      parameters:
      - name: riskFindingId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskFinding'
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/riskFindings/categories:
    get:
      tags:
      - api security
      summary: Get a list of risk findings categories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized.
          content: {}
  /apiSecurity/riskFindings/sources:
    get:
      tags:
      - api security
      summary: Get a list of risk findings sources
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized.
          content: {}
  /trustedSigners:
    get:
      tags:
      - trusted signers
      summary: Get a list of defined trusted signers
      parameters:
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: name
          enum:
          - name
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrustedSigner'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - trusted signers
      summary: Add new trusted signer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedSigner'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedSigner'
      x-codegen-request-body-name: body
  /trustedSigners/{trustedSignerId}:
    get:
      tags:
      - trusted signers
      summary: get existing trusted signer
      parameters:
      - name: trustedSignerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedSigner'
    put:
      tags:
      - trusted signers
      summary: edit existing trusted signer
      parameters:
      - name: trustedSignerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedSigner'
        required: true
      responses:
        201:
          description: Edited
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - trusted signers
      summary: Delete a trusted signer
      parameters:
      - name: trustedSignerId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /registries:
    get:
      tags:
      - registries
      summary: Get a list of defined registries
      parameters:
      - name: sortKey
        in: query
        description: sort key
        schema:
          type: string
          default: url
          enum:
          - url
      - name: sortDir
        in: query
        description: sorting direction
        schema:
          type: string
          default: ASC
          enum:
          - ASC
          - DESC
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Registry'
        401:
          description: Unauthorized.
          content: {}
    post:
      tags:
      - registries
      summary: Add new registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registry'
        required: true
      responses:
        201:
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
      x-codegen-request-body-name: body
  /registries/{registryId}:
    put:
      tags:
      - registries
      summary: edit existing registry
      parameters:
      - name: registryId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registry'
        required: true
      responses:
        200:
          description: Added
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - registries
      summary: Delete a registry
      parameters:
      - name: registryId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        204:
          description: Success
          content: {}
  /registries/testConnection:
    post:
      tags:
      - registries
      summary: test registry connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registry'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: Failed to connect to Registry
          content: {}
        501:
          description: Not yet implemented
          content: {}
      x-codegen-request-body-name: body
  /registries/testConnection/{registryId}:
    post:
      tags:
      - registries
      summary: test registry connection
      parameters:
      - name: registryId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registry'
        required: true
      responses:
        204:
          description: Success
          content: {}
        412:
          description: Failed to connect to Registry
          content: {}
        501:
          description: Not yet implemented
          content: {}
      x-codegen-request-body-name: body
  /api:
    get:
      tags:
      - api
      summary: Get Secure Application API as a Swagger file
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized.
          content: {}
  /k8sCISBenchmark/summary:
    get:
      tags:
      - k8s cis benchmark
      summary: Get k8s cis benchmark summary of account
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sCISBenchmarkAccountSummary'
        401:
          description: Unauthorized.
          content: {}
  /k8sCISBenchmark:
    get:
      tags:
      - k8s cis benchmark
      summary: Get k8s cis benchmark for clusters
      parameters:
      - name: offset
        in: query
        description: Return entries from this offset (pagination)
        schema:
          type: number
          default: 0.0
      - name: maxResults
        in: query
        description: The number of entries to return (pagination)
        schema:
          maximum: 200
          type: number
          default: 100.0
      - name: noPagination
        in: query
        description: When true, the pagination params will be ignored
        schema:
          type: boolean
      - name: clusterIds
        in: query
        description: cluster ids to filter
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/K8sCISBenchmarkClustersSummary'
        401:
          description: Unauthorized.
          content: {}
  /k8sCISBenchmark/{clusterId}:
    get:
      tags:
      - k8s cis benchmark
      summary: Get k8s cis benchmark for a specific cluster
      parameters:
      - name: clusterId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content: {}
        401:
          description: Unauthorized.
          content: {}
    put:
      tags:
      - k8s cis benchmark
      summary: edit k8s cis benchmark for a specific cluster with test statuses
      parameters:
      - name: clusterId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/K8sCISBenchmarkUpdateNodes'
        required: true
      responses:
        204:
          description: No content
          content: {}
        401:
          description: Unauthorized.
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - k8s cis benchmark
      summary: initiate k8s cis benchmark scan for a specific cluster
      parameters:
      - name: clusterId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/K8sCISBenchmarkClustersSummary'
        401:
          description: Unauthorized.
          content: {}
  /getControllerData/{clusterId}:
    get:
      tags:
      - kubernetes
      summary: get controller data using clusterId
      parameters:
      - name: clusterId
        in: path
        description: Portshift cluster ID
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControllerDataResponse'
        default:
          description: unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    Account:
      required:
      - accountTier
      - name
      - permissionsMode
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        permissionsMode:
          $ref: '#/components/schemas/PermissionsMode'
        status:
          type: string
          enum:
          - ENABLED
          - DISABLED
        accountTier:
          $ref: '#/components/schemas/AccountTier'
        apiSecurity:
          $ref: '#/components/schemas/ApiSecurity'
        serverlessSecurity:
          $ref: '#/components/schemas/ServerlessSecurity'
        accountUsageLimits:
          $ref: '#/components/schemas/AccountUsageLimits'
        createdTime:
          type: string
          format: date-time
          readOnly: true
        lastAction:
          $ref: '#/components/schemas/AuditLog'
        lastSeen:
          type: string
          format: date-time
        lastKubernetesActive:
          type: string
          format: date-time
        lastServerlessActive:
          type: string
          format: date-time
    StateInfo:
      type: object
      properties:
        state:
          type: array
          items:
            $ref: '#/components/schemas/EditUser'
    GatherInformationResponse:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/BackgroundJobState'
    KreRequest:
      type: object
      properties:
        accountId:
          type: string
        command:
          type: string
    KreResponse:
      type: object
      properties:
        commandId:
          type: string
        command:
          type: string
        response:
          type: string
          format: binary
        time:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - PENDING_AGENT
          - PENDING_AGENT_RESPONSE
          - RESPONSE_RECEIVED
    WorkloadRiskLevel:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    ServerlessFunctionRiskLevel:
      type: string
      enum:
      - NO_RISK
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    BackgroundJobState:
      type: string
      enum:
      - NEW
      - PROCESSING
      - DONE
      - FAILED
      - NONE
    ApiSecurityRisk:
      type: string
      enum:
      - UNKNOWN
      - NEUTRAL
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
      - NO_RISK
    ApiSecurityRiskOperator:
      type: string
      enum:
      - EQUAL
      - NOT_EQUAL
      - LESS_THAN
      - LESS_THAN_EQUAL
      - GREATER_THAN
      - GREATER_THAN_EQUAL
    ApiSecurityStringOperator:
      type: string
      enum:
      - EQUAL
      - NOT_EQUAL
      - IS_NONE
    ApiSecurityFqdnOperator:
      type: string
      enum:
      - EQUAL
      - NOT_EQUAL
      - IN
      - CONTAINS
      - IS_NONE
    ApiSecurityAvgVulnerabilityDurationOperator:
      type: string
      enum:
      - EQUAL
      - NOT_EQUAL
      - LESS_THAN
      - LESS_THAN_EQUAL
      - GREATER_THAN
      - GREATER_THAN_EQUAL
      - IS_NONE
    ApiSecurityProtocol:
      type: string
      enum:
      - TCP
      - UDP
    ApiSecurityScheme:
      type: string
      enum:
      - HTTP
      - HTTPS
    ApiSecurityRiskTrend:
      type: string
      enum:
      - DEGRADING
      - STABLE
      - IMPROVING
    ApiSecurityRiskTrendOperator:
      type: string
      enum:
      - EQUAL
      - NOT_EQUAL
      - IS_NONE
    ApiSecurityRiskConfidence:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
    ApiSecurityRiskConfidenceOperator:
      type: string
      enum:
      - EQUAL
      - NOT_EQUAL
      - IS_NONE
    WorkloadRiskReasonType:
      type: string
      enum:
      - K8S_DASHBOARD
      - VULNERABILITY
      - RISKY_ROLE
      - PRIVILEGED
      - RUN_AS_ROOT
      - ALLOWED_HOST_PATH
      - ALLOWED_RISKY_CAPABILITIES
      - PUBLIC_FACING
      - UNIDENTIFIED
      - RUNNING_SSH_SERVER
      - HOST_NETWORK
      - HOST_PID
      - HOST_IPC
      - ALLOW_PRIVILEGE_ESCALATION
      - TEMPLATE_DIFF
      - DOCKERFILE_SCAN
      - API
    ServerlessFunctionReasonType:
      type: string
      enum:
      - SECRETS
      - POLICY
      - VULNERABILITIES
      - PUBLICLY_ACCESSIBLE
      - UNUSED_FUNCTION
      - DATA_ACCESS
      - UNIDENTIFIED
    WorkloadRiskReason:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/WorkloadRiskReasonType'
        text:
          type: string
        level:
          $ref: '#/components/schemas/WorkloadRiskLevel'
        isIgnored:
          type: boolean
    ServerlessFunctionReason:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ServerlessFunctionReasonType'
        text:
          type: string
        level:
          $ref: '#/components/schemas/ServerlessFunctionRiskLevel'
    ServerlessFunctionSecretIssue:
      required:
      - name
      - reason
      type: object
      properties:
        name:
          type: string
        reason:
          type: string
    BackgroundJobResponse:
      type: object
      properties:
        requestId:
          type: string
          format: uuid
        path:
          type: string
        state:
          $ref: '#/components/schemas/BackgroundJobState'
        progress:
          type: string
        expiry:
          type: number
    EditUser:
      required:
      - fullName
      - status
      type: object
      properties:
        id:
          type: string
          description: ID of the user as created by Secure Application management.
          format: uuid
        accountId:
          type: string
          description: The Secure Application account ID to which the user belongs
          format: uuid
          readOnly: true
        lastLogin:
          type: string
          format: date-time
          readOnly: true
        fullName:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
          - ENABLED
          - DISABLED
        role:
          $ref: '#/components/schemas/Role'
    Role:
      type: string
      description: The role of the user
      enum:
      - LIGHTSPIN_ADMIN
      - CISCO_SUBSCRIBER
      - SELF_PROVISIONING
      - CI_CD_SCANNER
      - PORTSHIFT_ADMIN
      - PORTSHIFT_AUDITOR
      - ACCOUNT_ADMIN
      - SERVICE
      - ACCOUNT_AUDITOR
    User:
      allOf:
      - $ref: '#/components/schemas/EditUser'
      - type: object
        properties:
          email:
            type: string
            description: The email of the user.
          shouldDisplayEula:
            type: boolean
            readOnly: true
          shouldDisplayProductTour:
            type: boolean
            readOnly: true
    AccountDetailsAndServiceAccountCreds:
      allOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/AccessToken'
    TrialUser:
      required:
      - email
      - firstName
      - lastName
      - privacyPolicyAndTermsAndConditionsAgreement
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        jobTitle:
          type: string
        privacyPolicyAndTermsAndConditionsAgreement:
          type: boolean
        howDidYouHearAboutUs:
          type: string
          enum:
          - COLLEAGUES_RECOMMENDATION
          - KUBECON_CONFERENCE
          - PAST_CLIENT
          - ADVERTISING
          - SEARCH_ENGINE
          - BLOG
    UserDisplay:
      allOf:
      - $ref: '#/components/schemas/EditUser'
      - type: object
        properties:
          normalizedRole:
            type: string
            description: The role of the user
          email:
            type: string
            description: The email of the user.
    ChallengeRequest:
      type: object
      properties:
        ChallengeName:
          type: string
          enum:
          - GOOGLE_LOGIN
    AccessToken:
      type: object
      properties:
        accessKey:
          type: string
          format: uuid
        secretKey:
          type: string
          description: A 256-bit string encoded in base 64
        agentSecretKey:
          type: string
          description: A 256-bit string encoded in base 64
    AddAccount:
      allOf:
      - $ref: '#/components/schemas/User'
      - type: object
        properties:
          account:
            $ref: '#/components/schemas/Account'
    LicensingDashboard:
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/StatsSection'
        usageAndPricing:
          $ref: '#/components/schemas/UsageAndPricingSection'
    TimeBasedWidget:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/TimeBasedWidgetInfo'
        allowedGraphs:
          $ref: '#/components/schemas/DashboardTimeBasedGraphs'
        detectedGraphs:
          $ref: '#/components/schemas/DashboardTimeBasedGraphs'
        blockedGraphs:
          $ref: '#/components/schemas/DashboardTimeBasedGraphs'
    SpecsAndOperationsDiffsWidget:
      type: object
      properties:
        specs:
          $ref: '#/components/schemas/SpecsDonutPieChart'
        operationsDiffs:
          $ref: '#/components/schemas/OperationsDiffsDonutPieChart'
    ApiSecTopRiskyApisWidget:
      type: object
      properties:
        apis:
          type: array
          items:
            $ref: '#/components/schemas/ApiSecTopRiskyApi'
    ApiSecTopRiskyFindingsWidget:
      type: object
      properties:
        findings:
          type: array
          items:
            $ref: '#/components/schemas/ApiSecTopRiskyFinding'
    ApiSecRiskFindingsWidget:
      type: object
      properties:
        total:
          minimum: 0
          type: integer
        noKnownRisk:
          minimum: 0
          type: integer
        low:
          minimum: 0
          type: integer
        medium:
          minimum: 0
          type: integer
        high:
          minimum: 0
          type: integer
        critical:
          minimum: 0
          type: integer
    ApiSecRiskFindingsTrendWidget:
      type: object
      properties:
        noKnownRisk:
          type: array
          items:
            $ref: '#/components/schemas/GraphNumberPoint'
        low:
          type: array
          items:
            $ref: '#/components/schemas/GraphNumberPoint'
        medium:
          type: array
          items:
            $ref: '#/components/schemas/GraphNumberPoint'
        high:
          type: array
          items:
            $ref: '#/components/schemas/GraphNumberPoint'
        critical:
          type: array
          items:
            $ref: '#/components/schemas/GraphNumberPoint'
    PodTelemetriesWidget:
      allOf:
      - $ref: '#/components/schemas/TimeBasedWidget'
    ConnectionTelemetriesWidget:
      allOf:
      - $ref: '#/components/schemas/TimeBasedWidget'
    kubernetesAuditLogsWidget:
      allOf:
      - $ref: '#/components/schemas/TimeBasedWidget'
    VulnerabilitiesWidget:
      type: object
      properties:
        WorkloadVulnerabilitiesWidget:
          $ref: '#/components/schemas/WorkloadVulnerabilitiesWidget'
        ServerlessVulnerabilitiesWidget:
          $ref: '#/components/schemas/ServerlessVulnerabilitiesWidget'
    WorkloadVulnerabilitiesWidget:
      type: object
      properties:
        totalVulnerablePods:
          type: integer
        totalVulnerableImages:
          type: integer
        bars:
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilitiesBar'
    ServerlessVulnerabilitiesWidget:
      type: object
      properties:
        bars:
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilitiesBar'
    PermissionsWidget:
      type: object
      properties:
        totalOwners:
          type: integer
        totalPermissions:
          type: integer
        bars:
          type: array
          items:
            $ref: '#/components/schemas/PermissionsBar'
    TopSecurityRisksWidget:
      type: object
      properties:
        topRiskyWorkloadsWidget:
          $ref: '#/components/schemas/TopRiskyWorkloadsWidget'
        topRiskyApisWidget:
          $ref: '#/components/schemas/TopRiskyApisWidget'
        topRiskyServerlessFunctionsWidget:
          $ref: '#/components/schemas/TopRiskyServerlessFunctionsWidget'
    TopRiskyServerlessFunctionsWidget:
      type: object
      properties:
        topRiskyServerlessFunctions:
          type: array
          items:
            $ref: '#/components/schemas/TopRiskyServerlessFunction'
    TopRiskyWorkloadsWidget:
      type: object
      properties:
        topRiskyWorkloads:
          type: array
          items:
            $ref: '#/components/schemas/TopRiskyWorkload'
    TopRiskyApisWidget:
      type: object
      properties:
        topRiskyApis:
          type: array
          items:
            $ref: '#/components/schemas/TopRiskyApi'
    SecurityContextWidget:
      type: object
      properties:
        bars:
          type: array
          items:
            $ref: '#/components/schemas/SecurityContextBar'
    OperationalBar:
      type: object
      properties:
        podSection:
          $ref: '#/components/schemas/OperationalBarSection'
        namespaceSection:
          $ref: '#/components/schemas/OperationalBarSection'
        expantionSection:
          $ref: '#/components/schemas/OperationalBarSection'
    OperationalBarSection:
      type: object
      properties:
        total:
          type: integer
        protected:
          type: integer
        system:
          type: integer
    ClustersDetails:
      type: array
      items:
        $ref: '#/components/schemas/ClusterDetails'
    ClusterDetails:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
    SpecsDonutPieChart:
      type: object
      properties:
        total:
          type: integer
        apisWithSpecs:
          type: integer
        apisWithoutSpecs:
          type: integer
    OperationsDiffsDonutPieChart:
      type: object
      properties:
        totalOperations:
          type: integer
        zombieDiffs:
          type: integer
        shadowDiffs:
          type: integer
        generalDiffs:
          type: integer
        operationsWithoutDiffs:
          type: integer
    ApiSecTopRiskyApi:
      required:
      - name
      - type
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        type:
          $ref: '#/components/schemas/ApiServiceType'
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
    ApiSecTopRiskyFinding:
      required:
      - category
      - name
      - risk
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        category:
          type: string
        risk:
          $ref: '#/components/schemas/ApiSecurityRisk'
    SingleBar:
      type: object
      properties:
        count:
          type: integer
    VulnerabilitiesBar:
      allOf:
      - $ref: '#/components/schemas/SingleBar'
    PermissionsBar:
      allOf:
      - $ref: '#/components/schemas/SingleBar'
    TopRiskyServerlessFunction:
      type: object
      properties:
        name:
          type: string
        risk:
          $ref: '#/components/schemas/ServerlessFunctionRiskLevel'
    ServerlessFunctionNames:
      type: object
      properties:
        names:
          type: array
          items:
            type: string
    ServerlessFunctionArns:
      type: object
      properties:
        arns:
          type: array
          items:
            type: string
    TopRiskyWorkload:
      type: object
      properties:
        name:
          type: string
        risk:
          $ref: '#/components/schemas/WorkloadRiskLevel'
        score:
          multipleOf: 0.1
          maximum: 1E+1
          minimum: 0
          type: number
          format: double
    TopRiskyApi:
      type: object
      properties:
        name:
          type: string
        risk:
          $ref: '#/components/schemas/ApiSecurityRisk'
    SecurityContextBar:
      allOf:
      - $ref: '#/components/schemas/SingleBar'
    StatsSection:
      type: object
      properties:
        hosts:
          type: integer
        cores:
          type: integer
        pods:
          type: integer
        agents:
          type: integer
    UsageAndPricingSection:
      type: object
      properties:
        periods:
          type: array
          items:
            $ref: '#/components/schemas/UsageAndPricingPeriod'
    DashboardTimeBasedGraph:
      type: object
      properties:
        info:
          $ref: '#/components/schemas/DashboardTimeBasedGraphInfo'
        graph:
          type: array
          description: the graph points
          items:
            $ref: '#/components/schemas/GraphNumberPoint'
    DashboardTimeBasedGraphs:
      type: object
      properties:
        lastHour:
          $ref: '#/components/schemas/DashboardTimeBasedGraph'
        lastDay:
          $ref: '#/components/schemas/DashboardTimeBasedGraph'
        lastWeek:
          $ref: '#/components/schemas/DashboardTimeBasedGraph'
        lastMonth:
          $ref: '#/components/schemas/DashboardTimeBasedGraph'
    UsageAndPricingPeriod:
      type: object
      properties:
        timePeriod:
          $ref: '#/components/schemas/UsageAndPricingPeriodEnum'
        usageAndPricing:
          type: array
          items:
            $ref: '#/components/schemas/UsageAndPricing'
    UsageAndPricing:
      type: object
      properties:
        date:
          type: string
          format: date-time
        pricingDetails:
          $ref: '#/components/schemas/PricingDetails'
        podsUsageGraph:
          type: array
          items:
            $ref: '#/components/schemas/GraphNumberPoint'
        vcpusUsageGraph:
          type: array
          items:
            $ref: '#/components/schemas/GraphNumberPoint'
    PricingDetails:
      type: object
      properties:
        averageNumOfUnit:
          type: integer
        estimatedNumOfUnit:
          type: integer
        typeOfUnit:
          $ref: '#/components/schemas/pricingUnitType'
        budget:
          type: integer
        price:
          type: integer
    GraphNumberPoint:
      type: object
      properties:
        graph:
          type: number
        date:
          type: string
          format: date-time
    UsageAndPricingPeriodEnum:
      type: string
      enum:
      - YEAR
      - MONTHS
      - LAST_DAY
    KubernetesClusterController:
      type: object
      properties:
        KubernetesCluster:
          $ref: '#/components/schemas/KubernetesCluster'
        Agent:
          $ref: '#/components/schemas/Agent'
        shouldSendMetrics:
          type: boolean
    LeanKubernetesCluster:
      type: object
      properties:
        id:
          type: string
          description: Id of the cluster.
          format: uuid
          readOnly: true
        name:
          minLength: 1
          type: string
        clusterPodDefinitionSource:
          $ref: '#/components/schemas/ClusterPodDefinitionSource'
        installTracingSupport:
          type: boolean
          description: indicates whether to install tracing support, enable for apiSecurity
            accounts
          default: false
        kubernetesSecurity:
          type: boolean
          description: indicates whether kubernetes security is enabled
          default: true
        useExternalCA:
          type: boolean
          description: indicates whether kubernetes should use external CA
          default: false
    HelmCommandsInstallation:
      type: object
      properties:
        panopticaHelmCommand:
          type: string
          description: Cmd of panoptica values
        istioHelmCommand:
          type: string
          description: Cmd of istio values
        vaultHelmCommand:
          type: string
          description: Cmd of vault values
    EditKubernetesClusterManagedByHelm:
      type: object
      properties:
        name:
          minLength: 1
          type: string
    KubernetesCluster:
      required:
      - name
      - orchestrationType
      type: object
      properties:
        id:
          type: string
          description: Id of the cluster.
          format: uuid
        name:
          minLength: 1
          type: string
        clusterPodDefinitionSource:
          $ref: '#/components/schemas/ClusterPodDefinitionSource'
        ciImageValidation:
          type: boolean
          description: Enable pod template images validation
          default: false
        ciImageSignatureValidation:
          type: boolean
          description: Enable pod template images signature validation
          default: false
        restrictRegistires:
          type: boolean
          description: indicates whether the agent validate the images origin
          default: false
        preserveOriginalSourceIp:
          type: boolean
          description: indicates whether the agent should preserve the original source
            ip
          default: false
        isPersistent:
          type: boolean
          description: indicates whether the agent should run in persistent mode
          default: false
        isMultiCluster:
          type: boolean
          description: indicates whether this cluster should support multi-cluster
            communication
          default: false
        enableConnectionsControl:
          type: boolean
          description: indicates whether Secure Application allows connections actions
            and detections
          default: false
        proxyConfiguration:
          $ref: '#/components/schemas/ProxyConfiguration'
        agentFailClose:
          type: boolean
          description: indicates fail close behavior on Secure Application agent failure
          default: false
        serviceDiscoveryIsolationEnabled:
          type: boolean
          description: indicates whether the service discovery isolation is enabled
          default: false
        isHoldApplicationUntilProxyStarts:
          type: boolean
          description: indicates whether the controller should hold the application
            until the proxy starts
          default: false
        isIstioIngressEnabled:
          type: boolean
          description: indicates whether Istio ingress is enabled
          default: false
        tokenInjectionEnabled:
          type: boolean
          description: indicates whether token injection is enabled
          default: false
        supportExternalTraceSource:
          type: boolean
          description: indicates whether external trace sources are supported
          default: false
        installEnvoyTracingSupport:
          type: boolean
          description: indicates whether envoy/istio will be used as a trace source
          default: false
        automatedPolicyRequiresDeployer:
          type: boolean
          description: indicates whether deployer is required for the automated policy
          default: false
        autoLabelEnabled:
          type: boolean
          description: indicates whether auto label is enabled
          default: false
        istioIngressAnnotations:
          type: array
          description: annotations for load balancers
          items:
            $ref: '#/components/schemas/KubernetesAnnotation'
        tlsInspectionEnabled:
          type: boolean
          description: indicates whether TLS inspection is enabled
          default: false
        installTracingSupport:
          type: boolean
          description: indicates whether to install tracing support, enable for apiSecurity
            accounts
          default: false
        sidecarsResources:
          $ref: '#/components/schemas/sidecarsResource'
        istioInstallationParameters:
          $ref: '#/components/schemas/IstioInstallationParameters'
        internalRegistryParameters:
          $ref: '#/components/schemas/internalRegistryParameters'
        apiIntelligenceDAST:
          type: boolean
          description: indicates whether apiIntelligenceDAST is enabled
          default: false
        autoUpgradeControllerVersion:
          type: boolean
          description: indicates whether upgrade the controller automatically
          default: true
        orchestrationType:
          type: string
          default: GKE
          enum:
          - GKE
          - OPENSHIFT
          - RANCHER
          - AKS
          - EKS
          - KUBERNETES
          - IKS
        kubernetesSecurity:
          type: boolean
          description: indicates whether kubernetes security is enabled
          default: false
        k8sEventsEnabled:
          type: boolean
          description: indicates whether kubernetes events sending is enabled
          default: false
        minimalNumberOfControllerReplicas:
          maximum: 5
          minimum: 1
          type: integer
        accountName:
          type: string
        useExternalCA:
          type: boolean
          description: indicates whether kubernetes should use external CA
          default: false
        sshMonitorDisabled:
          type: boolean
          description: indicates whether SSH monitoring is disabled
          default: true
        installationSource:
          $ref: '#/components/schemas/installationSource'
        controllerDataResponse:
          $ref: '#/components/schemas/ControllerDataResponse'
        controllerStatus:
          $ref: '#/components/schemas/ControllerStatus'
        helmCommandsInstallation:
          $ref: '#/components/schemas/HelmCommandsInstallation'
        scanConfiguration:
          $ref: '#/components/schemas/ScanConfiguration'
    ProxyConfiguration:
      type: object
      properties:
        enableProxy:
          type: boolean
          description: Specifies if the proxy configuration should be used
          default: false
        httpsProxy:
          type: string
    DeployerDeleteDependencies:
      type: object
      properties:
        cdPolicies:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
    KubernetesClusterDeleteDependencies:
      type: object
      properties:
        registries:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        trustedSigners:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        environments:
          $ref: '#/components/schemas/DeleteDependencyElementEnvironments'
        expansions:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        connectionRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        deploymentRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        clusterEventRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        deployers:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        gateways:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
    CloudAccountDeleteDependencies:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
    ApiServiceDeleteDependencies:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        connectionRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
    ApiSecurityPolicyDeleteDependencies:
      type: object
      properties:
        connectionRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        appRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        cdPolicy:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
    DeleteDependencyElementEnvironments:
      type: object
      properties:
        environments:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        connectionRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyEnvironmentRuleElement'
        deploymentRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyEnvironmentRuleElement'
        clusterEventRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyEnvironmentRuleElement'
    DeleteDependencyElementUser:
      type: object
      properties:
        deployers:
          $ref: '#/components/schemas/DeleteDependencyDeployerElement'
    DeleteDependencyDeployerElement:
      type: object
      properties:
        deployers:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
        cdPolicies:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
    deleteDependencyEnvironmentRuleElement:
      allOf:
      - $ref: '#/components/schemas/deleteDependencyElement'
      - type: object
        properties:
          relatedEnvironments:
            type: array
            items:
              type: string
    deleteDependencyElement:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
    ExternalCaDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    Namespace:
      allOf:
      - $ref: '#/components/schemas/KubernetesNamespace'
      - required:
        - clusterName
        - runningPods
        type: object
        properties:
          clusterName:
            type: string
          runningPods:
            type: integer
          protectionStatus:
            $ref: '#/components/schemas/NamespaceProtectionStatus'
          systemNamespace:
            type: boolean
            readOnly: true
    NamespaceProtectionStatus:
      type: string
      enum:
      - FULL
      - DEPLOYMENT_ONLY
      - CONNECTION_ONLY
      - DISABLED
    Agents:
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        latestAgentVersion:
          type: string
        latestIstioVersion:
          type: string
    Agent:
      type: object
      properties:
        id:
          type: string
          description: sha2 of the content of the public key pem. The fingerprint
            format is xx:xx:xx...
          format: fingerprint
          readOnly: true
        sharedSecret:
          type: string
        type:
          $ref: '#/components/schemas/AgentType'
        info:
          $ref: '#/components/schemas/AgentInfo'
        instance:
          $ref: '#/components/schemas/AgentInstance'
        environments:
          type: array
          items:
            $ref: '#/components/schemas/AgentEnvironment'
        statusCodes:
          type: array
          items:
            type: string
        kubernetesVersion:
          type: string
        isUpdateEnabled:
          type: boolean
        nodes:
          type: integer
        vcpus:
          type: string
        gatherInformationState:
          type: string
          enum:
          - NEW
          - PROCESSING
          - DONE
          - FAILED
          - NONE
    AgentType:
      type: string
      description: The type of agent. Possible values are instance agent or k8s agent.
      enum:
      - AWS_INSTANCE
      - KUBERNETES
      - EXPANSION
    ControllerStatus:
      type: string
      description: The current controller state.
      enum:
      - PENDING_INSTALL
      - ACTIVE
      - INACTIVE
      - STOPPED
      - TERMINATED
      - UNKNOWN
      - WAITING_FOR_USER_UPDATE
      - AUTO_UPGRADE_IN_PROGRESS
    AgentInfo:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ControllerStatus'
        enabled:
          type: boolean
        version:
          type: string
        lastActive:
          type: string
          description: The last time that the agent sent telemetries
          format: date-time
    AgentInstance:
      type: object
      properties:
        id:
          type: string
          description: The id of the instance on which the agent is running
        name:
          type: string
          description: The name of the instance on which the agent is running
    AgentEnvironment:
      type: object
      properties:
        id:
          type: string
          description: The id of the environment on which the agent is running
          format: uuid
        name:
          type: string
          description: The name of the environment on which the agent is running
    AgentStatusUpdate:
      type: object
      properties:
        active:
          type: boolean
    ApisecController:
      required:
      - accountId
      - name
      type: object
      properties:
        accountId:
          type: string
          format: uuid
        name:
          type: string
    AgentShouldSendMetrics:
      type: object
      properties:
        shouldSendMetrics:
          type: boolean
    Settings:
      type: object
      properties:
        agentSendStatusIntervalInSeconds:
          maximum: 3.6E+3
          minimum: 1
          type: integer
          example: 300
        agentSendTelemetriesIntervalInSeconds:
          maximum: 3.6E+3
          minimum: 1
          type: integer
          example: 300
      description: Configuration for the Secure Application account
    EventsForwardingDetailsTypeEnum:
      type: string
      enum:
      - SplunkEventsForwardingDetails
      - OpsGenieEventsForwardingDetails
      - SlackEventsForwardingDetails
      - SlackVulnerabilityEventsForwardingDetails
      - SumoLogicEventsForwardingDetails
      - SumoLogicVulnerabilityEventsForwardingDetails
      - WebexEventsForwardingDetails
      - WebexVulnerabilityEventsForwardingDetails
      - SecureXEventsForwardingDetails
      - SecureXVulnerabilityEventsForwardingDetails
      - TeamsEventsForwardingDetails
      - TeamsVulnerabilityEventsForwardingDetails
    EventForwardingVendorEnum:
      type: string
      enum:
      - Splunk
      - OpsGenie
      - Slack
      - SumoLogic
      - Webex
      - SecureX
      - Teams
    AdminAddConnectionTelemetry:
      type: object
      properties:
        sourceAgentId:
          type: string
        sourcePid:
          type: integer
        targetAgentId:
          type: string
        targetPid:
          type: integer
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
      description: Configuration for the forcefully created Secure Application connection
        telemetry
    SetAccountFeatures:
      type: object
      properties:
        isDashboardDemo:
          type: boolean
          example: false
          default: false
      description: Features configuration for the Secure Application account
    VPC:
      required:
      - awsAccountId
      - regionId
      - vpcId
      type: object
      properties:
        vpcId:
          $ref: '#/components/schemas/vpcId'
        regionId:
          type: string
        awsAccountId:
          type: string
        awsAccountName:
          type: string
          readOnly: true
      description: Describes an AWS VPC.
    vpcId:
      type: string
      description: AWS VPC ID
    vpcResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/vpcId'
        name:
          type: string
    VPCDescription:
      description: Like VPC but also includes the name
      allOf:
      - type: object
        properties:
          name:
            type: string
            description: |
              The "Name" tag of the VPC.
      - $ref: '#/components/schemas/VPC'
    Tag:
      required:
      - key
      - value
      type: object
      properties:
        key:
          maxLength: 128
          type: string
        value:
          maxLength: 256
          type: string
      description: Tag
    EnvironmentRulesRecommendationPeriod:
      type: object
      properties:
        environmentRulesRecommendations:
          $ref: '#/components/schemas/EnvironmentRulesRecommendations'
        timePeriod:
          $ref: '#/components/schemas/RecommendationTimePeriod'
        totalWorkloads:
          type: integer
    EnvironmentRulesRecommendations:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentRuleRecommendation'
    EnvironmentRuleRecommendation:
      type: object
      properties:
        environemntRule:
          $ref: '#/components/schemas/AppRule'
        numberOfAffectedWorkloads:
          type: integer
        id:
          type: string
          format: uuid
    EnvironmentRecommendationPeriod:
      type: object
      properties:
        environmentRecommendations:
          $ref: '#/components/schemas/EnvironmentRecommendations'
        timePeriod:
          $ref: '#/components/schemas/RecommendationTimePeriod'
        totalWorkloads:
          type: integer
    PodSecurityPolicyRecommendationPeriod:
      type: object
      properties:
        podSecurityPolicyRecommendations:
          $ref: '#/components/schemas/PodSecurityPolicyRecommendations'
        timePeriod:
          $ref: '#/components/schemas/RecommendationTimePeriod'
        totalWorkloads:
          type: integer
    EnvironmentRecommendations:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentRecommendation'
    EnvironmentRecommendation:
      type: object
      properties:
        environemnt:
          $ref: '#/components/schemas/Environment'
        numberOfAffectedWorkloads:
          type: integer
        id:
          type: string
          format: uuid
    PodSecurityPolicyRecommendations:
      type: array
      items:
        $ref: '#/components/schemas/PodSecurityPolicyRecommendation'
    PodSecurityPolicyRecommendation:
      type: object
      properties:
        podSecurityPolicy:
          $ref: '#/components/schemas/PodSecurityPolicy'
        numberOfAffectedWorkloads:
          type: integer
        id:
          type: string
          format: uuid
    Environment:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: Environment name. Must be unique.
          example: Prod
        isSystemEnv:
          type: boolean
          description: indicates if this environment represents system namespaces
            that usually will be filtered out from some screens
        description:
          type: string
          description: The environment description.
        awsEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/AwsEnvironment'
        kubernetesEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesEnvironment'
      description: 'Secure Application environment definition. #also must be included
        for at least one of the env details but Swagger does not support parameter
        dependencies and mutually exclusive parameters.'
    virtualNetwork:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    AwsEnvironment:
      required:
      - vpc
      type: object
      properties:
        id:
          type: string
          format: uuid
        vpc:
          $ref: '#/components/schemas/VPCDescription'
        tags:
          maxItems: 50
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    KubernetesEnvironment:
      required:
      - kubernetesCluster
      type: object
      properties:
        id:
          type: string
          format: uuid
        kubernetesCluster:
          type: string
          format: uuid
        kubernetesClusterName:
          type: string
        namespaces:
          type: array
          items:
            type: string
        namespaceLabels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        preserveOriginalSourceIp:
          type: boolean
          readOnly: true
    Risk:
      type: string
      description: The attack risk level of the environment
      enum:
      - LOW
      - MEDIUM
      - HIGH
    IdentifierArray:
      type: array
      items:
        type: string
        format: uuid
    ProcessDesc:
      required:
      - executable
      type: object
      properties:
        executable:
          pattern: '[^/]*'
          type: string
          description: The name of the executable.
          example: java
        executablePath:
          type: string
          description: The directory of the executable.
          example: /usr/bin
        processName:
          type: string
          description: The process name.
          example: accounting_app
        args:
          type: array
          description: The command line arguments of the executable.
          example:
          - -cp
          - -jar
          - ./*
          items:
            type: string
        cwd:
          type: string
          description: The working directory of the executable.
          example: /usr/local/bin/corp
    TruncationStatus:
      required:
      - isTruncationEnabled
      - truncateTimeInDays
      type: object
      properties:
        truncateTimeInDays:
          type: integer
          description: truncation interval, in days.
        isTruncationEnabled:
          type: boolean
          description: is truncation enabled.
    Token:
      required:
      - name
      - vaultSecretPath
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        apis:
          type: array
          items:
            type: string
            format: uuid
        httpPath:
          type: string
        expirationDate:
          type: string
          format: date-time
        attributeType:
          type: string
          enum:
          - REQUEST_HEADER
          - QUERY_PARAM
        attributeName:
          type: string
        vaultSecretPath:
          type: string
    Gateway:
      required:
      - clusterName
      - name
      - type
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        clusterName:
          type: string
        type:
          $ref: '#/components/schemas/GatewayType'
    GatewayClusterInfo:
      required:
      - id
      - isEligible
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        isEligible:
          type: boolean
        reason:
          type: string
    TokenDeleteDependencies:
      type: object
      properties:
        deploymentRules:
          type: array
          items:
            $ref: '#/components/schemas/deleteDependencyElement'
    App:
      allOf:
      - $ref: '#/components/schemas/ProcessDesc'
      - required:
        - name
        - type
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
            description: The unique name of the App (as it will appear in the Secure
              Application UI).
            example: AccountingApp
          type:
            type: string
            description: Type of the App.
            example: frontend
          labels:
            $ref: '#/components/schemas/AppLabels'
    TelemetryAppEnvInfo:
      type: object
      properties:
        securecnId:
          type: string
          format: uuid
        app:
          $ref: '#/components/schemas/AppProcessInfo'
        instance:
          type: object
          properties:
            id:
              type: string
            agentId:
              type: string
            name:
              type: string
            cloudAccountId:
              type: string
            region:
              type: string
        environment:
          type: object
          properties:
            name:
              type: string
        network:
          type: object
          properties:
            name:
              type: string
            id:
              type: string
        pod:
          $ref: '#/components/schemas/PodTelemetryInfo'
        cluster:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
        namespace:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            labels:
              type: array
              items:
                type: string
        workloadType:
          $ref: '#/components/schemas/WorkloadType'
        expansion:
          $ref: '#/components/schemas/ExpansionTelemetryInfo'
    AppEnvInfo:
      type: object
      properties:
        ip:
          type: string
        fqdn:
          type: string
        app:
          $ref: '#/components/schemas/AppProcessInfo'
        pod:
          $ref: '#/components/schemas/PodTelemetryInfo'
        expansion:
          $ref: '#/components/schemas/ExpansionTelemetryInfo'
        podRuntimeInfo:
          $ref: '#/components/schemas/PodRuntimeInfo'
        appRuntimeInfo:
          $ref: '#/components/schemas/AppRuntimeInfo'
        instance:
          type: object
          properties:
            id:
              type: string
            agentId:
              type: string
            name:
              type: string
            network:
              type: string
            cloudAccountId:
              type: string
            region:
              type: string
            namespace:
              type: string
            namespaceId:
              type: string
              format: uuid
            networkName:
              type: string
        environment:
          type: object
          properties:
            name:
              type: string
        workloadType:
          $ref: '#/components/schemas/WorkloadType'
    Layer7Attribute:
      required:
      - key
      - values
      type: object
      properties:
        key:
          type: string
        values:
          minItems: 1
          type: array
          items:
            type: string
      description: Collection of layer 7 attributes
    ViolationInfo:
      type: object
      properties:
        userRule:
          $ref: '#/components/schemas/UserRule'
        mutateRule:
          $ref: '#/components/schemas/UserRule'
        defaultRule:
          $ref: '#/components/schemas/DefaultRule'
        unidentifiedPodsRule:
          $ref: '#/components/schemas/UnidentifiedPodsRule'
        unidentifiedPodReasons:
          type: array
          items:
            type: string
        violationReasons:
          type: array
          items:
            $ref: '#/components/schemas/ViolationReason'
        pspViolationReasons:
          type: array
          items:
            type: string
        lastViolation:
          type: string
          format: date-time
        action:
          $ref: '#/components/schemas/AppRuleAction'
        comment:
          type: string
      description: If the the App is running on an environment on which it is not
        allowed to run, this object contains the rule it violated.
    ServerlessViolationInfo:
      type: object
      properties:
        userRule:
          $ref: '#/components/schemas/ServerlessUserRule'
        defaultRule:
          $ref: '#/components/schemas/ServerlessDefaultRule'
        unidentifiedServerlessRule:
          $ref: '#/components/schemas/UnidentifiedServerlessRule'
        violationReasons:
          type: array
          items:
            $ref: '#/components/schemas/ServerlessViolationReason'
        ruleAction:
          $ref: '#/components/schemas/ServerlessRuleAction'
    ViolationReason:
      type: string
      enum:
      - VULNERABILITY
      - PSP
      - API
      - SIDECAR
    ServerlessViolationReason:
      type: string
      enum:
      - RISK
      - VULNERABILITY
      - SECRETS
      - FUNCTION_PERMISSION
      - DATA_ACCESS
      - PUBLICLY_ACCESSIBLE
      - UNUSED_FUNCTION
      - UNIDENTIFIED
    ReportStatus:
      type: object
      properties:
        status:
          type: string
          enum:
          - IN_PROGRESS
          - READY
          - FAILED
    UserRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        action:
          $ref: '#/components/schemas/AppRuleAction'
        isDeleted:
          type: boolean
    ServerlessUserRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        action:
          $ref: '#/components/schemas/ServerlessRuleAction'
        isDeleted:
          type: boolean
      description: used for violation in ServerlessFunction
    ConnectionViolation:
      type: object
      properties:
        userRule:
          $ref: '#/components/schemas/ConnectionsRule'
        encryptRule:
          $ref: '#/components/schemas/ConnectionsRule'
        interceptionRule:
          type: string
          format: uuid
        encryptionReason:
          $ref: '#/components/schemas/EncryptionReason'
        defaultRule:
          $ref: '#/components/schemas/DefaultConnectionRule'
        directPodRule:
          $ref: '#/components/schemas/DirectPodIpConnectionRule'
        lastViolation:
          type: string
          format: date-time
      description: If there is a connection violation according to the policy - this
        object will hold the violation info
    TelemetryState:
      description: Status of a telemetry entry
      allOf:
      - $ref: '#/components/schemas/TelemetryAvailabilityState'
      - type: object
        properties:
          startTime:
            type: string
            format: date-time
          lastSeen:
            type: string
            format: date-time
    CDPipelineResult:
      description: Pipeline result for a scanned CD resource
      allOf:
      - $ref: '#/components/schemas/CDDeploymentInfo'
      - type: object
        properties:
          id:
            type: string
            format: uuid
            readOnly: true
    CdPipelineResourceResult:
      type: object
      properties:
        deploymentInfo:
          $ref: '#/components/schemas/CDDeploymentInfo'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/CDDeploymentResource'
      description: CD resource results
    CDDeploymentResource:
      type: object
      properties:
        resourceName:
          type: string
        type:
          $ref: '#/components/schemas/CDPipelineFindingType'
        risk:
          $ref: '#/components/schemas/CDPipelineFindingRisk'
        reasons:
          type: array
          items:
            type: string
    CDDeploymentInfo:
      type: object
      properties:
        time:
          type: string
          format: date-time
        deploymentName:
          type: string
        deploymentVersion:
          type: string
        policyName:
          type: string
        policyId:
          type: string
          format: uuid
        deploymentSource:
          $ref: '#/components/schemas/DeploymentSource'
        status:
          $ref: '#/components/schemas/CDPipelineResultStatus'
        result:
          $ref: '#/components/schemas/CDResult'
        securityFinding:
          type: array
          items:
            $ref: '#/components/schemas/CDPipelineSecurityFinding'
    CDPipelineSecurityFinding:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CDPipelineFindingType'
        value:
          $ref: '#/components/schemas/CDPipelineSecurityFindingValue'
    CDPipelineSecurityFindingValue:
      type: object
      properties:
        risk:
          $ref: '#/components/schemas/CDPipelineFindingRisk'
        count:
          type: integer
    CDPipelineFindingRisk:
      type: string
      enum:
      - NO_RISK
      - MEDIUM
      - HIGH
    CDPipelineSecretsFindingRisk:
      type: string
      enum:
      - NO_KNOWN_RISK
      - RISK_IDENTIFIED
    CDPipelineFindingType:
      type: string
      enum:
      - PERMISSIONS
      - SECURITY_CONTEXT
      - SECRETS
    CDPipelineResultStatus:
      type: string
      enum:
      - SUCCESS
      - FAILURE
    GatewayStatus:
      type: string
      enum:
      - ENABLED
      - DELETED
      - PENDING_INSTALL
    DeploymentSource:
      type: string
      enum:
      - HELM
      - DEPLOYER
    TrustedSigner:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        keys:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/TrustedSignerKey'
        trustedSignerClusters:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/TrustedSignerCluster'
        trustedSignerCloudAccounts:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/TrustedSignerCloudAccount'
      description: Trusted signers profile
    TrustedSignerCluster:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          readOnly: true
        validation:
          $ref: '#/components/schemas/TrustedSignerClusterValidation'
        status:
          $ref: '#/components/schemas/TrustedSignerClusterStatus'
    TrustedSignerCloudAccount:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          readOnly: true
        validation:
          $ref: '#/components/schemas/TrustedSignerClusterValidation'
        status:
          $ref: '#/components/schemas/TrustedSignerClusterStatus'
    TrustedSignerClusterStatus:
      type: string
      enum:
      - VALID
      - WARNING
    TrustedSignerClusterValidation:
      type: string
      enum:
      - SIGNATURE
      - HASH
      - NONE
    TrustedSignerKey:
      required:
      - key
      - name
      type: object
      properties:
        name:
          type: string
        key:
          type: string
    Registry:
      required:
      - type
      - url
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
        type:
          type: string
          enum:
          - AWS
          - GCP
          - AZURE
          - JFROG
          - OTHER
        clusterIds:
          type: array
          items:
            type: string
            format: uuid
        credentials:
          $ref: '#/components/schemas/RegistryCredentials'
      description: image registry
    RegistryCredentials:
      required:
      - registryCredentialsType
      type: object
      properties:
        registryCredentialsType:
          type: string
          enum:
          - AwsRegistryCredentials
          - StandardRegistryCredentials
          - JfrogRegistryCredentials
      discriminator:
        propertyName: registryCredentialsType
    StandardRegistryCredentials:
      allOf:
      - $ref: '#/components/schemas/RegistryCredentials'
      - required:
        - username
        type: object
        properties:
          username:
            type: string
          password:
            type: string
    AwsRegistryCredentials:
      allOf:
      - $ref: '#/components/schemas/RegistryCredentials'
      - required:
        - accessKeyId
        - region
        type: object
        properties:
          accessKeyId:
            type: string
          secretAccessKey:
            type: string
          region:
            type: string
    JfrogRegistryCredentials:
      allOf:
      - $ref: '#/components/schemas/StandardRegistryCredentials'
      - type: object
        properties:
          xrayToken:
            type: string
    AuditLog:
      type: object
      properties:
        time:
          type: string
          format: date-time
        user:
          type: string
        action:
          type: string
        objectType:
          type: string
        objectName:
          type: string
        module:
          type: string
      description: Single telemetry entry
    AdminAuditLog:
      description: Single telemetry entry
      allOf:
      - $ref: '#/components/schemas/AuditLog'
      - type: object
        properties:
          account:
            type: string
    KubernetesAuditLog:
      type: object
      properties:
        resourceKind:
          type: string
        resourceName:
          type: string
        resourceGroup:
          type: string
        action:
          $ref: '#/components/schemas/KubernetesAuditLogAction'
        user:
          type: string
        userType:
          $ref: '#/components/schemas/KubernetesAuditLogUserType'
        userNamespace:
          type: string
        userGroups:
          type: array
          items:
            type: string
        namespace:
          type: string
        clusterName:
          type: string
        clusterId:
          type: string
          format: uuid
        environmentName:
          type: string
        environmentId:
          type: string
          format: uuid
        firstSeen:
          type: string
          format: date-time
        lastSeen:
          type: string
          format: date-time
        violation:
          $ref: '#/components/schemas/KubernetesApiViolation'
        total:
          type: integer
          format: int64
      description: Single kubernetes audit log
    KubernetesApiViolation:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/KubernetesApiRuleAction'
        matchedRecommendedRule:
          $ref: '#/components/schemas/MatchedRecommendedRule'
        userRule:
          $ref: '#/components/schemas/KubernetesApiViolationUserRule'
        isDefaultRule:
          type: boolean
    KubernetesApiViolationUserRule:
      type: object
      properties:
        ruleName:
          type: string
        ruleId:
          type: string
          format: uuid
        isDeleted:
          type: boolean
    MatchedRecommendedRule:
      type: object
      properties:
        ruleId:
          type: string
          format: uuid
        potentialRiskDescription:
          type: string
      description: recommended rule that might reduce potential risk
    RecommendedKubernetesApiRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        isClusterScopeOnly:
          type: boolean
    KubernetesResource:
      type: object
      properties:
        kind:
          type: string
        groups:
          type: array
          items:
            type: string
    KubernetesUsersByType:
      type: object
      properties:
        userType:
          $ref: '#/components/schemas/KubernetesAuditLogUserType'
        users:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesUserDetails'
    KubernetesUserDetails:
      type: object
      properties:
        userName:
          type: string
        userNamespace:
          type: string
    KubernetesAuditLogAction:
      type: string
      enum:
      - CREATE
      - UPDATE
      - DELETE
      - CONNECT
    KubernetesAuditLogUserType:
      type: string
      enum:
      - USER
      - SERVICEACCOUNT
      - GROUP
    PodRuntimeInfo:
      type: object
      properties:
        labels:
          type: array
          description: runtime pod labels
          items:
            $ref: '#/components/schemas/Label'
        containers:
          type: array
          description: runtime pod containers
          items:
            $ref: '#/components/schemas/Container'
        initContainers:
          type: array
          description: runtime pod init containers
          items:
            $ref: '#/components/schemas/Container'
      description: runtime info of the pod (if is a pod)
    TokenInjectionInfo:
      type: object
      properties:
        tokenName:
          type: string
        tokenId:
          type: string
          format: uuid
        isTokenDeleted:
          type: boolean
        envVariable:
          type: string
        ruleId:
          type: string
          format: uuid
        ruleName:
          type: string
        isRuleDeleted:
          type: boolean
        error:
          type: string
    ApiRiskInfo:
      type: object
      properties:
        serviceType:
          $ref: '#/components/schemas/ApiServiceType'
        serviceName:
          type: string
        serviceId:
          type: string
          format: uuid
        serviceRisk:
          type: string
          enum:
          - CRITICAL
          - HIGH
          - MEDIUM
          - LOW
    TokenInjectionStatus:
      type: string
      enum:
      - NO_INJECTION
      - SUCCESS
      - ERROR
    UnprotectedPodReason:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        type:
          type: string
          enum:
          - NAMESPACE_UNPROTECTED
          - MISSING_SIDECARS
          - HOST_NETWORK
          - ISTIO_INJECT_FALSE_ANNOTATION
          - ISTIO_INJECT_FALSE_LABEL
          - PORTSHIFT_INJECT_FALSE_ANNOTATION
          - PORTSHIFT_INJECT_FALSE_LABEL
    PodSpecInfo:
      type: object
      properties:
        containers:
          type: array
          items:
            $ref: '#/components/schemas/ContainerSecurityContext'
        initContainers:
          type: array
          items:
            $ref: '#/components/schemas/ContainerSecurityContext'
        podSecurityContext:
          $ref: '#/components/schemas/PodSecurityContext'
        volumes:
          type: array
          items:
            type: string
        hostPID:
          type: boolean
        hostIPC:
          type: boolean
        hostNetwork:
          type: boolean
        shareProcessNamespace:
          type: boolean
      description: 'pod spec attributes which are potentially risky '
    PodSecurityContext:
      type: object
      properties:
        fsGroup:
          type: integer
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        runAsNonRoot:
          type: boolean
        supplementalGroups:
          type: array
          items:
            type: integer
    ContainerSecurityContext:
      type: object
      properties:
        name:
          type: string
        allowPrivilegeEscalation:
          type: boolean
        privileged:
          type: boolean
        readOnlyRootFilesystem:
          type: boolean
        runAsNonRoot:
          type: boolean
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        procMount:
          type: string
        capabilitiesAdd:
          type: array
          items:
            type: string
        capabilitiesDrop:
          type: array
          items:
            type: string
    AppRuntimeInfo:
      type: object
      properties:
        executable:
          type: string
        executablePath:
          type: string
        args:
          type: array
          items:
            type: string
        processName:
          type: string
        cwd:
          type: string
      description: runtime info of the App (if it is an App)
    AppTelemetry:
      description: Single telemetry entry
      allOf:
      - $ref: '#/components/schemas/TelemetryAppEnvInfo'
      - type: object
        properties:
          id:
            type: string
            format: uuid
          telemetryUid:
            type: string
            description: the kubernetes uid
          telemetryUids:
            type: array
            items:
              type: string
          violation:
            $ref: '#/components/schemas/ViolationInfo'
          state:
            $ref: '#/components/schemas/TelemetryState'
          podRuntimeInfo:
            $ref: '#/components/schemas/PodRuntimeInfo'
          appRuntimeInfo:
            $ref: '#/components/schemas/AppRuntimeInfo'
          podSpecInfo:
            $ref: '#/components/schemas/PodSpecInfo'
          tokenInjectionStatus:
            $ref: '#/components/schemas/TokenInjectionStatus'
          isPodProtected:
            type: boolean
            default: false
          unprotectedReasons:
            type: array
            items:
              $ref: '#/components/schemas/UnprotectedPodReason'
          highestVulnerability:
            $ref: '#/components/schemas/VulnerabilitySeverity'
          highestSecurityContextRisk:
            $ref: '#/components/schemas/WorkloadRiskLevel'
          highestDockerfileScanResult:
            $ref: '#/components/schemas/DockerfileScanSeverity'
          podIdentification:
            $ref: '#/components/schemas/PodIdentification'
          isPublicFacing:
            type: boolean
          risk:
            $ref: '#/components/schemas/WorkloadRisk'
          podsLicenses:
            type: array
            description: Licenses in use by the docker images. this field will be
              populated only in the drill down api
            items:
              type: string
    RiskAssessmentClusterScanConfig:
      required:
      - maxParallelism
      - minimumSeverity
      type: object
      properties:
        namespaces:
          type: array
          items:
            type: string
        maxParallelism:
          maximum: 1E+2
          minimum: 1
          type: integer
        minimumSeverity:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        periodicJobExpression:
          $ref: '#/components/schemas/PeriodicJobExpression'
        runDockerfileScan:
          type: boolean
          default: false
      description: Single cluster risk assessment scan config
    ServerlessInstallationDetails:
      type: object
      properties:
        externalId:
          type: string
          format: uuid
        installationUrl:
          type: string
    ServerlessAzureInstallationDetails:
      type: object
      properties:
        serviceAccountId:
          type: string
        accessKey:
          type: string
          format: uuid
        secretAccessKey:
          type: string
        templateUrl:
          type: string
    ServerlessScanConfig:
      required:
      - cloudAccounts
      type: object
      properties:
        cloudAccounts:
          type: array
          items:
            type: string
            format: uuid
      description: Single serverless functions scan config
    ServerlessFunction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: name with version
        version:
          type: string
        arn:
          type: string
        cloudAccount:
          $ref: '#/components/schemas/CloudAccountBase'
        runtime:
          type: string
        region:
          type: string
        isUnusedFunction:
          type: boolean
        secretsRisk:
          $ref: '#/components/schemas/ServerlessSecretsRisk'
        policyRisk:
          $ref: '#/components/schemas/ServerlessPolicyRisk'
        publiclyAccessibleRisk:
          $ref: '#/components/schemas/ServerlessPubliclyAccessibleRisk'
        dataAccessRisk:
          $ref: '#/components/schemas/ServerlessDataAccessRisk'
        risk:
          $ref: '#/components/schemas/ServerlessFunctionRisk'
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
        roleDetails:
          $ref: '#/components/schemas/ServerlessRoleDetails'
        violation:
          $ref: '#/components/schemas/ServerlessViolationInfo'
      description: Single serverless function
    ServerlessRoleDetails:
      type: object
      properties:
        roleName:
          type: string
        roleArn:
          type: string
        policies:
          type: array
          items:
            $ref: '#/components/schemas/ServerlessRolePolicy'
    ServerlessRolePolicy:
      type: object
      properties:
        policyName:
          type: string
        policyArn:
          type: string
        policyRisk:
          $ref: '#/components/schemas/ServerlessPolicyRisk'
        riskReasons:
          type: array
          items:
            $ref: '#/components/schemas/ServerlessPolicyRiskReasons'
    ServerlessPolicyRiskReasons:
      type: object
      properties:
        reason:
          type: string
        risk:
          $ref: '#/components/schemas/ServerlessPolicyRisk'
    PeriodicJobExpression:
      required:
      - PeriodicJobType
      type: object
      properties:
        PeriodicJobType:
          type: string
          enum:
          - NonPeriodicJobExpression
          - SinglePeriodicJobExpression
          - ByHoursPeriodicJobExpression
          - ByDaysPeriodicJobExpression
          - WeeklyPeriodicJobExpression
      discriminator:
        propertyName: PeriodicJobType
    ServerlessPeriodicJobExpression:
      required:
      - PeriodicJobType
      type: object
      properties:
        PeriodicJobType:
          type: string
          enum:
          - ServerlessByHoursPeriodicJobExpression
          - ServerlessByDaysPeriodicJobExpression
      discriminator:
        propertyName: PeriodicJobType
    CloudAccountSecurityThreats:
      type: object
      properties:
        publiclyAccessibleRisk:
          $ref: '#/components/schemas/ServerlessPubliclyAccessibleRisk'
        publiclyAccessibleRiskCount:
          type: integer
          format: int64
        policyRisk:
          $ref: '#/components/schemas/ServerlessPolicyRisk'
        policyRiskCount:
          type: integer
          format: int64
        secretsRisk:
          $ref: '#/components/schemas/ServerlessSecretsRisk'
        secretsRiskCount:
          type: integer
          format: int64
        isUnusedFunction:
          type: boolean
        unusedFunctionCount:
          type: integer
          format: int64
        dataAccessRisk:
          $ref: '#/components/schemas/ServerlessDataAccessRisk'
        dataAccessRiskCount:
          type: integer
          format: int64
    NonPeriodicJobExpression:
      allOf:
      - $ref: '#/components/schemas/PeriodicJobExpression'
    SinglePeriodicJobExpression:
      allOf:
      - $ref: '#/components/schemas/PeriodicJobExpression'
      - required:
        - operationTime
        type: object
        properties:
          operationTime:
            type: string
            format: date-time
    ByHoursPeriodicJobExpression:
      allOf:
      - $ref: '#/components/schemas/PeriodicJobExpression'
      - type: object
        properties:
          hoursInterval:
            minimum: 1
            type: integer
    ServerlessByHoursPeriodicJobExpression:
      allOf:
      - $ref: '#/components/schemas/ServerlessPeriodicJobExpression'
      - required:
        - hoursInterval
        type: object
        properties:
          hoursInterval:
            minimum: 1
            type: integer
    ByDaysPeriodicJobExpression:
      allOf:
      - $ref: '#/components/schemas/PeriodicJobExpression'
      - type: object
        properties:
          daysInterval:
            minimum: 1
            type: integer
          timeOfDay:
            $ref: '#/components/schemas/TimeOfDay'
    ServerlessByDaysPeriodicJobExpression:
      allOf:
      - $ref: '#/components/schemas/ServerlessPeriodicJobExpression'
      - required:
        - daysInterval
        - timeOfDay
        type: object
        properties:
          daysInterval:
            minimum: 1
            type: integer
          timeOfDay:
            $ref: '#/components/schemas/TimeOfDay'
    WeeklyPeriodicJobExpression:
      allOf:
      - $ref: '#/components/schemas/PeriodicJobExpression'
      - type: object
        properties:
          dayInWeek:
            maximum: 7
            minimum: 1
            type: integer
            description: 1 - 7 which represents sun- sat
          timeOfDay:
            $ref: '#/components/schemas/TimeOfDay'
    TimeOfDay:
      type: object
      properties:
        hour:
          maximum: 23
          minimum: 0
          type: integer
        minute:
          maximum: 59
          minimum: 0
          type: integer
    RiskAssessmentCluster:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        time:
          type: string
          format: date-time
          readOnly: true
        total:
          minimum: 0
          type: integer
          readOnly: true
        scanned:
          minimum: 0
          type: integer
          readOnly: true
        clusterId:
          type: string
          format: uuid
          readOnly: true
        clusterName:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/RiskAssessmentScanStatus'
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
        dockerfileScanResultsSummary:
          $ref: '#/components/schemas/DockerfileScanResultsSummary'
        scanConfig:
          $ref: '#/components/schemas/RiskAssessmentClusterScanConfig'
        hasFailed:
          type: boolean
          readOnly: true
          default: false
      description: Single cluster risk assessment
    DockerfileScanResultsSummary:
      type: object
      properties:
        total:
          minimum: 0
          type: integer
          readOnly: true
        info:
          minimum: 0
          type: integer
          readOnly: true
        warn:
          minimum: 0
          type: integer
          readOnly: true
        fatal:
          minimum: 0
          type: integer
          readOnly: true
      description: dockerfile scan results summary by severity
    RiskAssessmentPod:
      type: object
      properties:
        id:
          type: string
          description: kubernetes pod uid
          readOnly: true
        name:
          type: string
          readOnly: true
        namespace:
          type: string
          readOnly: true
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
        dockerfileScanResultsSummary:
          $ref: '#/components/schemas/DockerfileScanResultsSummary'
        images:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RiskAssessmentImage'
        labels:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Label'
      description: Single pod risk assessment
    VulnerabilitiesSummary:
      type: object
      properties:
        total:
          minimum: 0
          type: integer
        unknown:
          minimum: 0
          type: integer
        low:
          minimum: 0
          type: integer
        medium:
          minimum: 0
          type: integer
        high:
          minimum: 0
          type: integer
        critical:
          minimum: 0
          type: integer
      description: Vulnerabilities summary by severity
    RiskAssessmentScanFailureType:
      type: string
      enum:
      - DOCKERFILE_SCAN
      - VULNERABILITIES_SCAN
      - INITIALIZE_SCAN
    RiskAssessmentScanFailureSource:
      type: string
      enum:
      - JOB_TIMEOUT
      - JOB_CREATION
      - UNAUTHORIZED
      - CLAIR_SERVER_INTERNAL
      - ANALYZE
    RiskAssessmentScanFailure:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RiskAssessmentScanFailureType'
        source:
          $ref: '#/components/schemas/RiskAssessmentScanFailureSource'
        message:
          type: string
    RiskAssessmentScanFailures:
      type: object
      properties:
        failures:
          type: array
          items:
            $ref: '#/components/schemas/RiskAssessmentScanFailure'
    RiskAssessmentImage:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        success:
          type: boolean
          readOnly: true
        name:
          type: string
        failures:
          $ref: '#/components/schemas/RiskAssessmentScanFailures'
      description: Single image risk assessment
    RiskAssessmentVulnerability:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        severity:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        link:
          type: string
      description: Single risk assessment vulnerability
    ExpansionPut:
      required:
      - name
      - workloadAddresses
      type: object
      properties:
        name:
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        workloadAddresses:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/WorkloadAddress'
      description: represent expansion object used in put method
    WorkloadAddress:
      required:
      - address
      type: object
      properties:
        address:
          pattern: ^.*:()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$
          type: string
        networkProtocol:
          $ref: '#/components/schemas/NetworkProtocol'
    NetworkProtocol:
      type: string
      default: TCP
      enum:
      - TCP
      - HTTP
    RiskAssessmentScanStatus:
      type: string
      description: Status of a risk assessment scan
      enum:
      - AGENT_NOT_READY
      - NOT_SCANNED
      - IN_PROGRESS
      - DONE
    Expansion:
      description: represent expansion object
      allOf:
      - $ref: '#/components/schemas/ExpansionPut'
      - required:
        - clusterId
        - namespaceId
        type: object
        properties:
          id:
            type: string
            description: unique Id
            format: uuid
            readOnly: true
          clusterId:
            type: string
            format: uuid
          clusterName:
            type: string
            readOnly: true
          namespaceId:
            type: string
            format: uuid
          instanceId:
            type: string
            readOnly: true
          controllerVersion:
            type: string
            readOnly: true
          controllerStatus:
            type: string
            readOnly: true
          accountName:
            type: string
            readOnly: true
          controllerId:
            type: string
            readOnly: true
          controllerIsUpdateEnabled:
            type: boolean
            readOnly: true
          controllerEnabled:
            type: boolean
            readOnly: true
          controllerLastActive:
            type: string
            description: The last time that the agent sent telemetries
            format: date-time
          shouldSendMetrics:
            type: boolean
    PodTemplateDiff:
      type: object
      properties:
        diffType:
          $ref: '#/components/schemas/PodTemplateDiffType'
        path:
          type: string
          description: 'The path of the added/deleted/modified object in the pod (example:
            spec.volumes.0.name)'
        oldValue:
          type: string
          description: The old value in the path. Will only be populated with MODIFIED
            type
        value:
          type: string
          description: The current value in the path
    PodTemplateDiffType:
      type: string
      enum:
      - ADDED
      - DELETED
      - MODIFIED
    PodSecurityPolicyInfo:
      required:
      - fsGroup
      - runAsUser
      - supplementalGroups
      type: object
      properties:
        privileged:
          type: boolean
        readOnlyRootFileSystem:
          type: boolean
        allowPrivilegeEscalation:
          type: boolean
        defaultAllowPrivilegeEscalation:
          type: boolean
        hostPorts:
          type: array
          items:
            $ref: '#/components/schemas/HostPortRange'
        volumes:
          type: array
          items:
            $ref: '#/components/schemas/PSPVolumeTypes'
        allowedCapabilities:
          type: array
          items:
            type: string
        runAsUser:
          $ref: '#/components/schemas/RunAsUserStrategyOptions'
        fsGroup:
          $ref: '#/components/schemas/RunAsGroupStrategyOptions'
        runAsGroup:
          $ref: '#/components/schemas/RunAsGroupStrategyOptions'
        supplementalGroups:
          $ref: '#/components/schemas/RunAsGroupStrategyOptions'
        allowedProcMountTypes:
          type: array
          items:
            $ref: '#/components/schemas/AllowedProcMountType'
        requiredDropCapabilities:
          type: array
          items:
            type: string
        hostNetwork:
          type: boolean
        hostPID:
          type: boolean
        hostIPC:
          type: boolean
        allowedHostPaths:
          type: array
          items:
            $ref: '#/components/schemas/AllowedHostPath'
        forbiddenSysctls:
          type: array
          items:
            type: string
        allowedUnsafeSysctls:
          type: array
          items:
            type: string
    SeccompProfileData:
      type: object
      properties:
        data:
          type: string
          format: json
    SeccompProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          pattern: ^([a-z_\d]){1,64}$
          type: string
        data:
          type: string
          format: json
        podSecurityPolicies:
          type: array
          items:
            type: string
    PodSecurityPolicy:
      allOf:
      - $ref: '#/components/schemas/PodSecurityPolicyInfo'
      - required:
        - name
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          isSecurecnDefaultProfile:
            type: boolean
          description:
            type: string
          seccompProfile:
            type: string
            format: uuid
    AllowedProcMountType:
      type: string
      enum:
      - Default
      - Unmasked
    RunAsGroupStrategy:
      type: string
      enum:
      - MustRunAs
      - MayRunAs
      - RunAsAny
    RunAsUserStrategy:
      type: string
      enum:
      - MustRunAs
      - MustRunAsNonRoot
      - RunAsAny
    PSPVolumeTypes:
      type: string
      enum:
      - awsElasticBlockStore
      - azureDisk
      - azureFile
      - cephfs
      - cinder
      - configMap
      - csi
      - downwardAPI
      - emptyDir
      - fc
      - flexVolume
      - flocker
      - gcePersistentDisk
      - glusterfs
      - hostPath
      - iscsi
      - local
      - nfs
      - persistentVolumeClaim
      - projected
      - portworxVolume
      - quobyte
      - rbd
      - scaleIO
      - secret
      - storageos
      - vsphereVolume
      - all
    HostPortRange:
      type: object
      properties:
        min:
          maximum: 65535
          minimum: 0
          type: integer
          format: int32
        max:
          maximum: 65535
          minimum: 0
          type: integer
          format: int32
    RunAsGroupStrategyOptions:
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/RunAsGroupStrategy'
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/IDRange'
    RunAsUserStrategyOptions:
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/RunAsUserStrategy'
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/IDRange'
    IDRange:
      type: object
      properties:
        min:
          minimum: 0
          type: integer
          format: int64
        max:
          maximum: 65535
          type: integer
          format: int64
    PodDefinition:
      required:
      - clusterId
      - containers
      - name
      type: object
      properties:
        name:
          type: string
          description: |
            in pod template, this is the normalized name (for example, get it from pod -> replicaset -> deployment).
        kind:
          $ref: '#/components/schemas/PodTemplateKind'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        containers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
        initContainers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
        podDefinitionSource:
          $ref: '#/components/schemas/PodDefinitionSource'
        id:
          type: string
          description: unique Id
          format: uuid
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        clusterId:
          type: string
          format: uuid
    PodTemplateKind:
      type: string
      enum:
      - ReplicaSet
      - Deployment
      - Job
      - CronJob
      - DaemonSet
      - StatefulSet
      - Pod
      - Other
    EncryptionReason:
      type: string
      enum:
      - POLICY
      - CLUSTER_OUTBOUND
    Container:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/Image'
    Image:
      type: object
      properties:
        repository:
          type: string
        tag:
          type: string
        hash:
          type: string
        vulnerabilitySeverityLevel:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        dockerfileScanSeverity:
          $ref: '#/components/schemas/DockerfileScanSeverity'
    KubernetesNamespace:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        uid:
          type: string
          format: uuid
        name:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    KubernetesNamespaceResponse:
      description: Single telemetry entry
      allOf:
      - $ref: '#/components/schemas/KubernetesNamespace'
    KubernetesService:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        namespace:
          $ref: '#/components/schemas/KubernetesNamespaceResponse'
    Label:
      required:
      - key
      - value
      type: object
      properties:
        key:
          pattern: '[^:]*'
          type: string
        value:
          pattern: '[^:]*'
          type: string
    AppLabels:
      maxItems: 10
      type: array
      description: pods that match one of the given labels
      items:
        $ref: '#/components/schemas/Label'
      x-uniqueField: key
    AppLabelsNotEmpty:
      maxItems: 10
      minItems: 1
      type: array
      description: pods that match one of the given labels
      items:
        $ref: '#/components/schemas/Label'
      x-uniqueField: key
    Property:
      type: object
      properties:
        key:
          type: string
        values:
          type: array
          items:
            type: string
    ConnectionTelemetry:
      type: object
      properties:
        id:
          type: string
          format: uuid
        source:
          $ref: '#/components/schemas/AppEnvInfo'
        target:
          $ref: '#/components/schemas/AppEnvInfo'
        state:
          type: object
          properties:
            count:
              type: integer
            startTime:
              type: string
              format: date-time
            lastSeen:
              type: string
              format: date-time
            isOpen:
              type: boolean
            layer7Attributes:
              type: array
              items:
                $ref: '#/components/schemas/Layer7Attribute'
            protocol:
              type: string
        violation:
          $ref: '#/components/schemas/ConnectionViolation'
        apiTokens:
          type: array
          items:
            type: string
            format: uuid
    ApiTokenInfo:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
    AppRule:
      required:
      - name
      - ruleTypeProperties
      - status
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        status:
          $ref: '#/components/schemas/AppRuleStatus'
        app:
          $ref: '#/components/schemas/WorkloadRuleType'
        scope:
          $ref: '#/components/schemas/WorkloadRuleScopeType'
        groupName:
          type: string
        ruleOrigin:
          $ref: '#/components/schemas/AppRuleOrigin'
        ruleTypeProperties:
          $ref: '#/components/schemas/AppRuleType'
      description: A rule that states what Apps are allowed to run on what environments.
    AppRuleType:
      required:
      - ruleType
      type: object
      properties:
        ruleType:
          type: string
          enum:
          - InjectionRuleType
          - ViolationRuleType
      description: identify the app rule type. Only one of the below should be not
        null, and  used.
      discriminator:
        propertyName: ruleType
    ViolationRuleType:
      allOf:
      - $ref: '#/components/schemas/AppRuleType'
      - required:
        - action
        type: object
        properties:
          action:
            $ref: '#/components/schemas/AppRuleAction'
    InjectionRuleType:
      allOf:
      - $ref: '#/components/schemas/AppRuleType'
      - required:
        - tokens
        type: object
        properties:
          tokens:
            type: array
            items:
              $ref: '#/components/schemas/TokenDetails'
    TokenDetails:
      required:
      - envVariable
      - tokenId
      type: object
      properties:
        tokenId:
          type: string
          format: uuid
        envVariable:
          type: string
    EnvironmentRuleType:
      required:
      - environmentRuleType
      type: object
      properties:
        environmentRuleType:
          $ref: '#/components/schemas/EnvironmentRuleTypeEnum'
      description: identify the environment type. Only one of the below should be
        not null, and  used.
      discriminator:
        propertyName: environmentRuleType
    AnyEnvironmentRuleType:
      allOf:
      - $ref: '#/components/schemas/EnvironmentRuleType'
    NameEnvironmentRuleType:
      allOf:
      - $ref: '#/components/schemas/EnvironmentRuleType'
      - type: object
        properties:
          names:
            type: array
            description: envs that match one of the given names
            items:
              type: string
    WorkloadRuleScopeType:
      required:
      - workloadRuleScopeType
      type: object
      properties:
        workloadRuleScopeType:
          $ref: '#/components/schemas/WorkloadRuleScopeTypeEnum'
      description: identify the scope type. Only one of the below should be not null,
        and  used.
      discriminator:
        propertyName: workloadRuleScopeType
    AnyRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleScopeType'
    ClusterNameRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleScopeType'
      - type: object
        properties:
          names:
            minItems: 1
            type: array
            description: clusters that match one of the given names
            items:
              type: string
    EnvironmentNameRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleScopeType'
      - type: object
        properties:
          names:
            type: array
            description: envs that match one of the given names
            items:
              type: string
    WorkloadRuleType:
      required:
      - workloadRuleType
      type: object
      properties:
        workloadRuleType:
          type: string
          enum:
          - AppNameWorkloadRuleType
          - AppTypeWorkloadRuleType
          - AppLabelWorkloadRuleType
          - AppAnyWorkloadRuleType
          - PodNameWorkloadRuleType
          - PodLabelWorkloadRuleType
          - PodAnyWorkloadRuleType
      description: identify the workload type. Only one of the below should be not
        null, and  used.
      discriminator:
        propertyName: workloadRuleType
    AppNameWorkloadRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleType'
      - type: object
        properties:
          names:
            type: array
            description: apps that match one of the given types
            items:
              type: string
    AppTypeWorkloadRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleType'
      - type: object
        properties:
          types:
            type: array
            description: apps that match one of the given types
            items:
              type: string
    AppAnyWorkloadRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleType'
    AppLabelWorkloadRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleType'
      - type: object
        properties:
          labels:
            $ref: '#/components/schemas/AppLabelsNotEmpty'
    PodNameWorkloadRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleType'
      - type: object
        properties:
          names:
            type: array
            description: pods that match one of the given names
            items:
              type: string
          podValidation:
            $ref: '#/components/schemas/PodValidation'
    PodLabelWorkloadRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleType'
      - type: object
        properties:
          labels:
            type: array
            description: pods that match one of the given labels
            items:
              $ref: '#/components/schemas/Label'
          podValidation:
            $ref: '#/components/schemas/PodValidation'
    PodAnyWorkloadRuleType:
      allOf:
      - $ref: '#/components/schemas/WorkloadRuleType'
      - type: object
        properties:
          podValidation:
            $ref: '#/components/schemas/PodValidation'
    PodValidation:
      type: object
      properties:
        vulnerability:
          $ref: '#/components/schemas/VulnerabilityValidation'
        podSecurityPolicy:
          $ref: '#/components/schemas/PodSecurityPolicyValidation'
        apiSecurityPolicy:
          $ref: '#/components/schemas/ApiSecurityValidation'
        allowedInjectedSidecars:
          $ref: '#/components/schemas/AllowedInjectedSidecars'
    ServerlessFunctionValidation:
      type: object
      properties:
        risk:
          $ref: '#/components/schemas/ServerlessFunctionRiskLevel'
        vulnerability:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        secretsRisk:
          $ref: '#/components/schemas/ServerlessSecretsRisk'
        functionPermissionRisk:
          $ref: '#/components/schemas/ServerlessPolicyRisk'
        publiclyAccessibleRisk:
          $ref: '#/components/schemas/ServerlessPubliclyAccessibleRisk'
        dataAccessRisk:
          $ref: '#/components/schemas/ServerlessDataAccessRisk'
        isUnusedFunction:
          type: boolean
    VulnerabilityValidation:
      required:
      - highestVulnerabilityAllowed
      - onViolationAction
      type: object
      properties:
        highestVulnerabilityAllowed:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        onViolationAction:
          $ref: '#/components/schemas/OnViolationAction'
      description: When the rule action is ALLOW, onViolationAction is mandatory
    PodSecurityPolicyValidation:
      required:
      - onViolationAction
      - podSecurityPolicyId
      type: object
      properties:
        podSecurityPolicyId:
          type: string
          format: uuid
        onViolationAction:
          $ref: '#/components/schemas/OnViolationAction'
        shouldMutate:
          type: boolean
          default: false
      description: When the rule action is ALLOW, onViolationAction is mandatory
    AllowedInjectedSidecars:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AllowedInjectedSidecarsType'
        images:
          type: array
          items:
            type: string
    AllowedInjectedSidecarsType:
      type: string
      enum:
      - ALLOW_ALL
      - NONE
      - ALLOW_SPECIFIC
    ApiSecurityValidation:
      required:
      - apiSecurityPolicyId
      - onViolationAction
      type: object
      properties:
        apiSecurityPolicyId:
          type: string
          format: uuid
        onViolationAction:
          $ref: '#/components/schemas/OnViolationAction'
      description: When the rule action is ALLOW, onViolationAction is mandatory
    OnViolationAction:
      type: string
      enum:
      - DETECT
      - BLOCK
    EnvironmentRuleTypeEnum:
      type: string
      enum:
      - AnyEnvironmentRuleType
      - NameEnvironmentRuleType
    WorkloadRuleScopeTypeEnum:
      type: string
      enum:
      - AnyRuleType
      - ClusterNameRuleType
      - EnvironmentNameRuleType
    KubernetesApiRuleAction:
      type: string
      enum:
      - ALLOW
      - DETECT
      - BLOCK
      - IGNORE
    AppRuleStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - DELETED
    ServerlessRuleStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - DELETED
    KubernetesApiRuleStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - DELETED
    UnidentifiedPodsRule:
      required:
      - action
      type: object
      properties:
        name:
          type: string
        action:
          $ref: '#/components/schemas/UnidentifiedPodsRuleAction'
    UnidentifiedPodsRuleAction:
      type: string
      enum:
      - DETECT
      - BLOCK
    UnidentifiedServerlessRule:
      required:
      - action
      type: object
      properties:
        name:
          type: string
        action:
          $ref: '#/components/schemas/UnidentifiedServerlessRuleAction'
    UnidentifiedServerlessRuleAction:
      type: string
      enum:
      - DETECT
      - BLOCK
    DirectPodIpConnectionRule:
      required:
      - action
      type: object
      properties:
        name:
          type: string
        action:
          $ref: '#/components/schemas/DirectPodIpConnectionRuleAction'
        isDisabled:
          type: boolean
          default: false
    DirectPodIpConnectionRuleAction:
      type: string
      enum:
      - DETECT
      - BLOCK
    AppPolicyHistory:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/AppPolicy'
        editor:
          type: string
        updateTime:
          type: string
          format: date-time
    ServerlessPolicyHistory:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/ServerlessPolicy'
        editor:
          type: string
        updateTime:
          type: string
          format: date-time
    PolicyFilterSearchResponse:
      type: object
      properties:
        envs:
          type: array
          items:
            type: string
        pods:
          type: array
          items:
            $ref: '#/components/schemas/PolicyFilterSearchResponsePod'
    PolicyFilterSearchResponsePod:
      type: object
      properties:
        name:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    CiPolicy:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        vulnerabilityCiPolicy:
          $ref: '#/components/schemas/VulnerabilityCiPolicy'
        dockerfileScanCiPolicy:
          $ref: '#/components/schemas/DockerfileScanCiPolicy'
    VulnerabilityCiPolicy:
      required:
      - enforcementOption
      - permissibleVulnerabilityLevel
      type: object
      properties:
        permissibleVulnerabilityLevel:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        enforcementOption:
          $ref: '#/components/schemas/EnforcementOption'
    DockerfileScanCiPolicy:
      required:
      - enforcementOption
      - permissibleDockerfileScanSeverity
      type: object
      properties:
        permissibleDockerfileScanSeverity:
          $ref: '#/components/schemas/DockerfileScanSeverity'
        enforcementOption:
          $ref: '#/components/schemas/EnforcementOption'
    CdPolicy:
      required:
      - deployers
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        deployers:
          maxItems: 10
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        permissionCDPolicy:
          $ref: '#/components/schemas/CdPolicyElement'
        securityContextCDPolicy:
          $ref: '#/components/schemas/CdPolicyElement'
        secretCDPolicy:
          $ref: '#/components/schemas/SecretsCdPolicyElement'
        apiSecurityCdPolicy:
          $ref: '#/components/schemas/ApiSecurityCdPolicyElement'
    ApiSecurityCdPolicyElement:
      required:
      - apiSecurityProfile
      - enforcementOption
      type: object
      properties:
        apiSecurityProfile:
          type: string
          description: The allowed api security profile for the pipeline
          format: uuid
        enforcementOption:
          $ref: '#/components/schemas/EnforcementOption'
    CdPolicyElement:
      required:
      - enforcementOption
      - permissibleVulnerabilityLevel
      type: object
      properties:
        permissibleVulnerabilityLevel:
          $ref: '#/components/schemas/CDPipelineFindingRisk'
        enforcementOption:
          $ref: '#/components/schemas/EnforcementOption'
    SecretsCdPolicyElement:
      required:
      - enforcementOption
      - permissibleVulnerabilityLevel
      type: object
      properties:
        permissibleVulnerabilityLevel:
          $ref: '#/components/schemas/CDPipelineSecretsFindingRisk'
        enforcementOption:
          $ref: '#/components/schemas/EnforcementOption'
    EnforcementOption:
      type: string
      enum:
      - FAIL
      - IGNORE
    AppPolicy:
      type: object
      properties:
        defaultRule:
          $ref: '#/components/schemas/DefaultRule'
        unidentifiedPodsRule:
          $ref: '#/components/schemas/UnidentifiedPodsRule'
        userRules:
          type: array
          items:
            $ref: '#/components/schemas/AppRule'
    NamespaceFilter:
      required:
      - clusterId
      type: object
      properties:
        clusterId:
          type: string
          format: uuid
        namespaceIds:
          type: array
          items:
            type: string
            format: uuid
    PolicyFilter:
      required:
      - filterType
      type: object
      properties:
        filterType:
          type: string
          enum:
          - EnvPolicyFilter
          - PodPolicyFilter
        name:
          type: string
      discriminator:
        propertyName: filterType
    EnvPolicyFilter:
      allOf:
      - $ref: '#/components/schemas/PolicyFilter'
    PodPolicyFilter:
      allOf:
      - $ref: '#/components/schemas/PolicyFilter'
      - type: object
      - type: object
        properties:
          labels:
            type: array
            items:
              $ref: '#/components/schemas/Label'
    DefaultRule:
      type: string
      enum:
      - ALLOW_ALL
      - DETECT_ALL
      - BLOCK_ALL
    ConnectionPolicyHistory:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/ConnectionsPolicy'
        editor:
          type: string
        updateTime:
          type: string
          format: date-time
    ConnectionsPolicy:
      required:
      - directPodRule
      type: object
      properties:
        userRules:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionsRule'
        defaultRule:
          $ref: '#/components/schemas/DefaultConnectionRule'
        directPodRule:
          $ref: '#/components/schemas/DirectPodIpConnectionRule'
    ServerlessPolicy:
      required:
      - defaultRule
      - unidentifiedServerlessRule
      type: object
      properties:
        userRules:
          type: array
          items:
            $ref: '#/components/schemas/ServerlessRule'
        defaultRule:
          $ref: '#/components/schemas/ServerlessDefaultRule'
        unidentifiedServerlessRule:
          $ref: '#/components/schemas/UnidentifiedServerlessRule'
    ApiSecurityPolicyListParam:
      required:
      - operator
      - values
      type: object
      properties:
        operator:
          $ref: '#/components/schemas/ApiSecurityPolicyListOperator'
        values:
          type: array
          items:
            type: string
    ApiSecurityPolicyGradeParam:
      required:
      - operator
      - value
      type: object
      properties:
        operator:
          $ref: '#/components/schemas/ApiSecurityPolicyNumericOperator'
        value:
          $ref: '#/components/schemas/ApiSecurityPolicyGrade'
    ApiSecurityPolicyNumericParam:
      required:
      - operator
      - value
      type: object
      properties:
        operator:
          $ref: '#/components/schemas/ApiSecurityPolicyNumericOperator'
        value:
          type: integer
    ApiSecurityPolicyListOperator:
      type: string
      enum:
      - IN
    ApiSecurityPolicyGrade:
      type: string
      enum:
      - A
      - B
      - C
      - D
      - E
      - F
    ApiSecurityPolicyNumericOperator:
      type: string
      enum:
      - EQUAL
      - GREATER_THAN
      - GREATER_EQUAL_THAN
      - LESS_THAN
      - LESS_EQUAL_THAN
    GatewayType:
      type: string
      enum:
      - APIGEE_X
      - KONG_INTERNAL
      - TYK_INTERNAL
      - F5_BIG_IP
    KubernetesApiPolicy:
      type: object
      properties:
        defaultRule:
          $ref: '#/components/schemas/DefaultKubernetesApiRule'
        userRules:
          type: array
          items:
            $ref: '#/components/schemas/KubernetesApiRule'
    DefaultKubernetesApiRule:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/KubernetesApiRuleAction'
    KubernetesApiRule:
      required:
      - kubernetesApiRuleType
      type: object
      properties:
        kubernetesApiRuleType:
          type: string
          enum:
          - KubernetesApiCustomRule
          - KubernetesApiRecommendedRule
        ruleOrigin:
          $ref: '#/components/schemas/KubernetesApiRuleOrigin'
      discriminator:
        propertyName: kubernetesApiRuleType
    KubernetesApiCustomRule:
      allOf:
      - $ref: '#/components/schemas/KubernetesApiRule'
      - required:
        - action
        - name
        - ruleScope
        - status
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          action:
            $ref: '#/components/schemas/KubernetesApiRuleAction'
          status:
            $ref: '#/components/schemas/KubernetesApiRuleStatus'
          groupName:
            type: string
          users:
            type: array
            items:
              $ref: '#/components/schemas/KubernetesApiRuleUser'
          resources:
            type: array
            items:
              $ref: '#/components/schemas/KubernetesApiResources'
          apiActions:
            type: array
            items:
              $ref: '#/components/schemas/KubernetesAuditLogAction'
          ruleScope:
            $ref: '#/components/schemas/KubernetesApiRuleScope'
    KubernetesApiRecommendedRule:
      allOf:
      - $ref: '#/components/schemas/KubernetesApiRule'
      - required:
        - action
        - name
        - recommendedRuleId
        - ruleScope
        - status
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          action:
            $ref: '#/components/schemas/KubernetesApiRuleAction'
          status:
            $ref: '#/components/schemas/KubernetesApiRuleStatus'
          groupName:
            type: string
          excludedUsers:
            type: array
            items:
              $ref: '#/components/schemas/KubernetesApiRuleUser'
          recommendedRuleId:
            type: string
            format: uuid
          ruleScope:
            $ref: '#/components/schemas/KubernetesApiRuleScope'
    KubernetesApiResources:
      type: object
      properties:
        kind:
          type: string
        group:
          type: string
    KubernetesApiRuleUser:
      type: object
      properties:
        userName:
          type: string
        userType:
          $ref: '#/components/schemas/KubernetesAuditLogUserType'
    KubernetesApiPolicyHistory:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/KubernetesApiPolicy'
        editor:
          type: string
        updateTime:
          type: string
          format: date-time
    KubernetesApiRuleScope:
      required:
      - scopePartType
      type: object
      properties:
        scopePartType:
          type: string
          enum:
          - KubernetesApiEnvironmentScope
          - KubernetesApiClustersScope
          - KubernetesApiAnyScope
      discriminator:
        propertyName: scopePartType
    KubernetesApiAnyScope:
      allOf:
      - $ref: '#/components/schemas/KubernetesApiRuleScope'
    KubernetesApiClustersScope:
      allOf:
      - $ref: '#/components/schemas/KubernetesApiRuleScope'
      - required:
        - clusters
        type: object
        properties:
          clusters:
            type: array
            items:
              type: string
              format: uuid
    KubernetesApiEnvironmentScope:
      allOf:
      - $ref: '#/components/schemas/KubernetesApiRuleScope'
      - type: object
      - required:
        - environment
        type: object
        properties:
          environment:
            $ref: '#/components/schemas/EnvironmentRuleType'
    NetworkMap:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/NetworkApp'
        environments:
          type: array
          items:
            $ref: '#/components/schemas/NetworkEnvironment'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/NetworkConnection'
    PerformanceMetrics:
      type: object
      properties:
        connectionProtocol:
          type: string
          enum:
          - TcpPerformanceMetrics
          - HttpPerformanceMetrics
        totalReceivedBytes:
          $ref: '#/components/schemas/TotalReceivedBytesGraph'
        totalSentBytes:
          $ref: '#/components/schemas/TotalSentBytesGraph'
      discriminator:
        propertyName: connectionProtocol
    TcpPerformanceMetrics:
      allOf:
      - $ref: '#/components/schemas/PerformanceMetrics'
    HttpPerformanceMetrics:
      allOf:
      - $ref: '#/components/schemas/PerformanceMetrics'
      - type: object
        properties:
          ops:
            $ref: '#/components/schemas/OpsGraph'
          errorRate:
            $ref: '#/components/schemas/ErrorRateGraph'
          averageResponseTime:
            $ref: '#/components/schemas/AverageResponseTimeGraph'
    TotalReceivedBytesGraph:
      type: array
      description: Return a list of total received bytes per connection
      items:
        $ref: '#/components/schemas/PerformanceMetricsGraphPoint'
    ApiServiceSpecPathHitCountGraph:
      type: array
      description: Return a list of total hit count per spec path
      items:
        $ref: '#/components/schemas/ApiServiceSpecPathHitCountGraphPoint'
    TotalSentBytesGraph:
      type: array
      description: Return a list of total sent bytes per connection
      items:
        $ref: '#/components/schemas/PerformanceMetricsGraphPoint'
    OpsGraph:
      type: array
      description: Return a list of operation per second per connection
      items:
        $ref: '#/components/schemas/PerformanceMetricsGraphPoint'
    ErrorRateGraph:
      type: array
      description: Return a list of the percentage of an errors out of the total connections
      items:
        $ref: '#/components/schemas/PerformanceMetricsGraphPoint'
    AverageResponseTimeGraph:
      type: array
      description: Return a list of average response time in milliseconds per connection
      items:
        $ref: '#/components/schemas/PerformanceMetricsGraphPoint'
    PerformanceMetricsGraphPoint:
      type: object
      properties:
        date:
          type: string
          format: date-time
        graph:
          type: number
          format: double
    ApiServiceSpecPathHitCountGraphPoint:
      type: object
      properties:
        date:
          type: string
          format: date-time
        graph:
          type: number
          format: double
    ViolationsMapNode:
      type: object
      properties:
        id:
          type: string
          format: uuid
        data:
          $ref: '#/components/schemas/ViolationsMapNodeEntity'
    GroupIdentifier:
      type: object
      properties:
        groupName:
          type: string
        groupId:
          type: string
    InstanceState:
      type: object
      properties:
        code:
          type: integer
        name:
          type: string
    ViolationsMapNodeType:
      type: string
      enum:
      - SECURITY_GROUP
      - SUBNET
      - INSTANCE
    ViolationsMapNodeEntity:
      required:
      - violationsMapNodeType
      type: object
      properties:
        violationsMapNodeType:
          $ref: '#/components/schemas/ViolationsMapNodeType'
      description: 'the interface that represents the node''s entity type. Possible
        types are: PortshiftAwsInstance, PortshiftAwsSecurityGroupViolationInfo, PortshiftAwsSubnet'
      discriminator:
        propertyName: violationsMapNodeType
    PortshiftAwsSubnet:
      allOf:
      - $ref: '#/components/schemas/ViolationsMapNodeEntity'
      - type: object
        properties:
          cidrBlock:
            type: string
          state:
            type: string
          subnetId:
            type: string
          vpcId:
            type: string
    Ipv6Range:
      type: object
      properties:
        cidrIp:
          type: string
        description:
          type: string
    PrefixListId:
      type: object
      properties:
        prefixListId:
          type: string
        description:
          type: string
    UserIdGroupPair:
      type: object
      properties:
        groupId:
          type: string
        description:
          type: string
        groupName:
          type: string
        peeringStatus:
          type: string
        userId:
          type: string
        vpcId:
          type: string
        vpcPeeringConnectionId:
          type: string
    IpRange:
      type: object
      properties:
        cidrIp:
          type: string
        description:
          type: string
    IpPermission:
      type: object
      properties:
        fromPort:
          type: integer
        ipProtocol:
          type: string
        ipv6Ranges:
          type: array
          items:
            $ref: '#/components/schemas/Ipv6Range'
        prefixListIds:
          type: array
          items:
            $ref: '#/components/schemas/PrefixListId'
        toPort:
          type: integer
        vpcId:
          type: string
        userIdGroupPairs:
          type: array
          items:
            $ref: '#/components/schemas/UserIdGroupPair'
        ipv4Ranges:
          type: array
          items:
            $ref: '#/components/schemas/IpRange'
    PortshiftAwsSecurityGroupEntity:
      type: object
      properties:
        description:
          type: string
        groupName:
          type: string
        ipPermissions:
          type: array
          items:
            $ref: '#/components/schemas/IpPermission'
        ownerId:
          type: string
        groupId:
          type: string
        ipPermissionsEgress:
          type: array
          items:
            $ref: '#/components/schemas/IpPermission'
        vpcId:
          type: string
    ViolationsMapEdge:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sourceNode:
          type: string
          format: uuid
        targetNode:
          type: string
          format: uuid
    ViolationsGridLinePanelRulesInfo:
      type: object
      properties:
        protocol:
          type: string
        portRange:
          type: string
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/RuleRange'
    RuleRange:
      type: object
      properties:
        range:
          type: string
        isCulprit:
          type: boolean
    ViolationsGridLinePanelHostsInfo:
      type: object
      properties:
        name:
          type: string
        instanceId:
          type: string
        instanceType:
          type: integer
        vpc:
          type: string
        region:
          type: string
    UuidList:
      type: object
      properties:
        uuidList:
          type: array
          items:
            type: string
            format: uuid
    ViolationsGridLinePanelSecurityGroupInfo:
      type: object
      properties:
        showInboundFirst:
          type: boolean
        inboundRulesInfo:
          type: array
          items:
            $ref: '#/components/schemas/ViolationsGridLinePanelRulesInfo'
        outboundRulesInfo:
          type: array
          items:
            $ref: '#/components/schemas/ViolationsGridLinePanelRulesInfo'
        hostsInfo:
          type: array
          items:
            $ref: '#/components/schemas/ViolationsGridLinePanelHostsInfo'
    NetworkApp:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        processName:
          type: string
        executablePath:
          type: string
        args:
          type: array
          items:
            type: string
        cwd:
          type: string
        state:
          $ref: '#/components/schemas/TelemetryAvailabilityState'
        startTime:
          type: string
          format: date-time
        lastSeen:
          type: string
          format: date-time
        port:
          type: string
        appId:
          type: string
          format: uuid
        environmentId:
          type: string
          format: uuid
        hostsId:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        hostsName:
          uniqueItems: true
          type: array
          items:
            type: string
        hostsIp:
          uniqueItems: true
          type: array
          items:
            type: string
        lastViolation:
          type: string
          format: date-time
        pod:
          $ref: '#/components/schemas/NetworkPod'
        expansion:
          $ref: '#/components/schemas/NetworkExpansion'
        apiSecurity:
          $ref: '#/components/schemas/NetworkApiSecurityService'
        labels:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/Label'
        rule:
          $ref: '#/components/schemas/EnvironmentRuleBasic'
        appRisk:
          $ref: '#/components/schemas/RiskSeverity'
    NetworkPod:
      type: object
      properties:
        name:
          type: string
          description: |
            in pod template, this is the normalized name (for example, get it from pod -> replicaset -> deployment).
        kind:
          $ref: '#/components/schemas/PodTemplateKind'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        containers:
          type: array
          items:
            $ref: '#/components/schemas/NetworkContainer'
        hosts:
          type: array
          items:
            type: string
        isIdentified:
          type: boolean
        cluster:
          type: string
        clusterId:
          type: string
          format: uuid
        namespace:
          type: string
        namespaceId:
          type: string
          format: uuid
        id:
          uniqueItems: true
          type: array
          items:
            type: string
        podTemplateId:
          type: string
          format: uuid
        highestVulnerabilitySeverityLevel:
          $ref: '#/components/schemas/VulnerabilitySeverity'
    NetworkExpansion:
      type: object
      properties:
        ids:
          uniqueItems: true
          type: array
          items:
            type: string
        name:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        cluster:
          type: string
        namespace:
          type: string
        namespaceId:
          type: string
          format: uuid
        instanceId:
          type: string
    NetworkApiSecurityService:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        risk:
          $ref: '#/components/schemas/RiskSeverity'
    NetworkEnvironment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    NetworkConnection:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sourceId:
          type: string
          description: Source App id
          format: uuid
        destinationId:
          type: string
          description: Destination App id
          format: uuid
        startTime:
          type: string
          format: date-time
        numberOfConnections:
          type: integer
        violation:
          type: object
          properties:
            lastViolation:
              type: string
              format: date-time
            rule:
              $ref: '#/components/schemas/ConnectionRuleBasic'
            encryptRule:
              $ref: '#/components/schemas/ConnectionRuleBasic'
            encryptionReason:
              $ref: '#/components/schemas/EncryptionReason'
        protocol:
          type: string
        destinationPortNumber:
          type: integer
    NetworkContainer:
      type: object
      properties:
        image:
          $ref: '#/components/schemas/NetworkImage'
    NetworkImage:
      type: object
      properties:
        repository:
          type: string
        tag:
          type: string
        jfrogProperties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
        vulnerabilitySeverityLevel:
          $ref: '#/components/schemas/VulnerabilitySeverity'
    CdConnectionRule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        groupName:
          type: string
        action:
          $ref: '#/components/schemas/ConnectionRuleAction'
        status:
          type: string
          enum:
          - ENABLED
          - DISABLED
          - DELETED
        source:
          $ref: '#/components/schemas/ConnectionRulePart'
        destination:
          $ref: '#/components/schemas/ConnectionRulePart'
      description: A rule that states what apps are allowed to communicate with each
        other.
    CdServerlessRule:
      required:
      - action
      - name
      - rule
      - status
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        groupName:
          type: string
        status:
          $ref: '#/components/schemas/ServerlessRuleStatus'
        action:
          $ref: '#/components/schemas/ServerlessRuleAction'
        rule:
          $ref: '#/components/schemas/ServerlessRuleType'
        scope:
          type: array
          items:
            $ref: '#/components/schemas/ServerlessRuleScope'
      description: A CD rule that states what serverless function are allowed and
        where.
    ConnectionRuleBasic:
      required:
      - action
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        groupName:
          type: string
        name:
          type: string
        action:
          $ref: '#/components/schemas/ConnectionRuleAction'
        ruleType:
          $ref: '#/components/schemas/NetworkConnectionRuleType'
        isRuleActive:
          type: boolean
        ruleOrigin:
          $ref: '#/components/schemas/ConnectionRuleOrigin'
    EnvironmentRuleBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        action:
          $ref: '#/components/schemas/AppRuleAction'
        comment:
          type: string
        ruleType:
          $ref: '#/components/schemas/NetworkAppRuleType'
        isRuleActive:
          type: boolean
        violationReasons:
          type: array
          items:
            $ref: '#/components/schemas/ViolationReason'
    ConnectionsRuleRecommendationPeriod:
      type: object
      properties:
        connectionsRuleRecommendations:
          $ref: '#/components/schemas/ConnectionsRuleRecommendations'
        timePeriod:
          $ref: '#/components/schemas/RecommendationTimePeriod'
        totalConnections:
          type: integer
    ConnectionsRuleRecommendations:
      type: array
      items:
        $ref: '#/components/schemas/ConnectionsRuleRecommendation'
    ConnectionsRuleRecommendation:
      type: object
      properties:
        connectionRule:
          $ref: '#/components/schemas/RecommendationConnectionRule'
        numberOfAffectedConnections:
          type: integer
        id:
          type: string
          format: uuid
    ClusterEventRuleRecommendation:
      type: object
      properties:
        clusterEventRule:
          $ref: '#/components/schemas/KubernetesApiRule'
        id:
          type: string
          format: uuid
        numberOfAffectedEvents:
          type: integer
    ClusterEventRuleRecommendationPeriod:
      type: object
      properties:
        clusterEventRuleRecommendations:
          type: array
          items:
            $ref: '#/components/schemas/ClusterEventRuleRecommendation'
        timePeriod:
          $ref: '#/components/schemas/RecommendationTimePeriod'
        totalEvents:
          type: integer
    ServerlessRuleScope:
      required:
      - cloudAccount
      type: object
      properties:
        cloudAccount:
          type: string
          description: cloud account name
        regions:
          type: array
          description: empty for any
          items:
            type: string
    RecommendationTimePeriod:
      type: string
      enum:
      - LAST_DAY
      - LAST_WEEK
    NetworkAppRuleType:
      type: string
      enum:
      - USER_RULE
      - DEFAULT_RULE
      - UNIDENTIFIED_PODS_RULE
    NetworkConnectionRuleType:
      type: string
      enum:
      - USER_RULE
      - DEFAULT_RULE
      - DIRECT_POD_RULE
    ConnectionRuleOrigin:
      type: string
      default: USER
      enum:
      - USER
      - AUTOMATED_POLICY
      - SYSTEM
    AppRuleOrigin:
      type: string
      default: USER
      enum:
      - USER
      - AUTOMATED_POLICY
      - SYSTEM
    ServerlessRuleOrigin:
      type: string
      default: USER
      enum:
      - USER
      - AUTOMATED_POLICY
      - SYSTEM
    KubernetesApiRuleOrigin:
      type: string
      default: USER
      enum:
      - USER
      - AUTOMATED_POLICY
      - SYSTEM
    RecommendationConnectionRule:
      type: object
      properties:
        name:
          type: string
        action:
          $ref: '#/components/schemas/ConnectionRuleAction'
        source:
          $ref: '#/components/schemas/ConnectionRulePart'
        destination:
          $ref: '#/components/schemas/ConnectionRulePart'
    ServerlessRule:
      required:
      - action
      - name
      - rule
      - status
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        groupName:
          type: string
        status:
          $ref: '#/components/schemas/ServerlessRuleStatus'
        action:
          $ref: '#/components/schemas/ServerlessRuleAction'
        rule:
          $ref: '#/components/schemas/ServerlessRuleType'
        scope:
          type: array
          items:
            $ref: '#/components/schemas/ServerlessRuleScope'
        ruleOrigin:
          $ref: '#/components/schemas/ServerlessRuleOrigin'
      description: A rule that states what serverless function are allowed and where.
    ConnectionsRule:
      description: A rule that states what Apps are allowed to communicate with each
        other.
      allOf:
      - $ref: '#/components/schemas/ConnectionRuleBasic'
      - type: object
        properties:
          status:
            type: string
            enum:
            - ENABLED
            - DISABLED
            - DELETED
          source:
            $ref: '#/components/schemas/ConnectionRulePart'
          destination:
            $ref: '#/components/schemas/ConnectionRulePart'
          layer7Settings:
            $ref: '#/components/schemas/Layer7SettingsPart'
    DefaultConnectionRule:
      type: object
      properties:
        type:
          type: string
          enum:
          - ALLOW_ALL
          - ENVIRONMENT_ONLY
          - DENY_ALL
        action:
          $ref: '#/components/schemas/ConnectionRuleAction'
    ServerlessDefaultRule:
      type: string
      enum:
      - ALLOW_ALL
      - DETECT_ALL
      - BLOCK_ALL
    ConnectionRuleAction:
      type: string
      description: ENCRYPT is not allowed in default rule
      enum:
      - DETECT
      - BLOCK
      - ALLOW
      - ENCRYPT
      - ENCRYPT_DIRECT
    ConnectionRulePart:
      required:
      - connectionRulePartType
      type: object
      properties:
        connectionRulePartType:
          type: string
          enum:
          - AppNameConnectionRulePart
          - AppTypeConnectionRulePart
          - AppLabelConnectionRulePart
          - AppAnyConnectionRulePart
          - PodNameConnectionRulePart
          - PodLablesConnectionRulePart
          - PodAnyConnectionRulePart
          - EnvironmentNameConnectionRulePart
          - EnvironmentAnyConnectionRulePart
          - IpRangeConnectionRulePart
          - ExternalConnectionRulePart
          - FqdnConnectionRulePart
          - ServiceNameConnectionRulePart
          - AnyConnectionRulePart
          - ExpansionNameConnectionRulePart
          - ExpansionLabelsConnectionRulePart
          - ExpansionAnyConnectionRulePart
          - KafkaConnectionRulePart
          - ApiServiceConnectionRulePart
      discriminator:
        propertyName: connectionRulePartType
    ServerlessRuleType:
      required:
      - serverlessRuleType
      type: object
      properties:
        serverlessRuleType:
          type: string
          enum:
          - FunctionAnyServerlessRuleType
          - FunctionNameServerlessRuleType
          - FunctionArnServerlessRuleType
        serverlessFunctionValidation:
          $ref: '#/components/schemas/ServerlessFunctionValidation'
      description: identify the serverless functions matching type. Only one of the
        below should be not null, and  used.
      discriminator:
        propertyName: serverlessRuleType
    FunctionAnyServerlessRuleType:
      allOf:
      - $ref: '#/components/schemas/ServerlessRuleType'
    FunctionNameServerlessRuleType:
      allOf:
      - $ref: '#/components/schemas/ServerlessRuleType'
      - type: object
        properties:
          names:
            type: array
            description: functions that match one of the given ARNs
            items:
              type: string
    FunctionArnServerlessRuleType:
      allOf:
      - $ref: '#/components/schemas/ServerlessRuleType'
      - type: object
        properties:
          arns:
            type: array
            description: function that match one of the given arns
            items:
              type: string
    AnyConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
    AppNameConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          names:
            type: array
            items:
              type: string
          environments:
            type: array
            items:
              type: string
    AppTypeConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          types:
            type: array
            items:
              type: string
          environments:
            type: array
            items:
              type: string
    AppLabelConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          labels:
            $ref: '#/components/schemas/AppLabelsNotEmpty'
          environments:
            type: array
            items:
              type: string
    AppAnyConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          environments:
            type: array
            items:
              type: string
    PodNameConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          names:
            type: array
            items:
              type: string
          environments:
            type: array
            items:
              type: string
          vulnerabilitySeverityLevel:
            $ref: '#/components/schemas/VulnerabilitySeverity'
          apiSecurityProfile:
            type: string
    PodLablesConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          labels:
            type: array
            items:
              $ref: '#/components/schemas/Label'
          environments:
            type: array
            items:
              type: string
          vulnerabilitySeverityLevel:
            $ref: '#/components/schemas/VulnerabilitySeverity'
          apiSecurityProfile:
            type: string
    PodAnyConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          environments:
            type: array
            items:
              type: string
          vulnerabilitySeverityLevel:
            $ref: '#/components/schemas/VulnerabilitySeverity'
          apiSecurityProfile:
            type: string
    EnvironmentNameConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          environments:
            type: array
            items:
              type: string
    EnvironmentAnyConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
    IpRangeConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          networks:
            type: array
            items:
              type: string
    FqdnConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          fqdnAddresses:
            type: array
            items:
              type: string
    ApiServiceConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - required:
        - api
        - type
        type: object
        properties:
          type:
            $ref: '#/components/schemas/ApiServiceType'
          api:
            type: string
            format: uuid
    ServiceNameConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          clusterId:
            type: string
            format: uuid
          environments:
            type: array
            items:
              type: string
          services:
            type: array
            items:
              type: string
    ExternalConnectionRulePart:
      description: object to identify external connections. Does not need to have
        any properties
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
    ExpansionNameConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          names:
            type: array
            items:
              type: string
          environments:
            type: array
            items:
              type: string
    ExpansionLabelsConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          labels:
            type: array
            items:
              $ref: '#/components/schemas/Label'
          environments:
            type: array
            items:
              type: string
    ExpansionAnyConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          environments:
            type: array
            items:
              type: string
    KafkaConnectionRulePart:
      allOf:
      - $ref: '#/components/schemas/ConnectionRulePart'
      - type: object
        properties:
          clusterId:
            type: string
            format: uuid
          brokers:
            type: array
            items:
              type: string
    KafkaAction:
      type: string
      enum:
      - Write
      - Read
    Layer7SettingsPart:
      type: object
      properties:
        layer7Protocol:
          type: string
          enum:
          - HttpLayer7Part
          - KafkaLayerPart
          - ApiServiceLayerPart
      discriminator:
        propertyName: layer7Protocol
    HttpLayer7Part:
      allOf:
      - $ref: '#/components/schemas/Layer7SettingsPart'
      - type: object
        properties:
          isIntercept:
            type: boolean
            default: false
          methods:
            type: array
            items:
              $ref: '#/components/schemas/HttpMethod'
          paths:
            type: array
            items:
              type: string
          headers:
            type: array
            items:
              $ref: '#/components/schemas/Layer7Attribute'
          queryParameters:
            type: array
            items:
              $ref: '#/components/schemas/Layer7Attribute'
    ApiServiceLayerPart:
      allOf:
      - $ref: '#/components/schemas/Layer7SettingsPart'
      - required:
        - methods
        type: object
        properties:
          isIntercept:
            type: boolean
            default: false
          methods:
            type: array
            items:
              $ref: '#/components/schemas/ConnectionsPolicyApiMethod'
          headers:
            type: array
            items:
              $ref: '#/components/schemas/Layer7Attribute'
          queryParameters:
            type: array
            items:
              $ref: '#/components/schemas/Layer7Attribute'
    HttpMethod:
      type: string
      enum:
      - GET
      - POST
      - PUT
      - DELETE
      - HEAD
      - CONNECT
      - OPTIONS
      - TRACE
      - PATCH
    KafkaLayerPart:
      allOf:
      - $ref: '#/components/schemas/Layer7SettingsPart'
      - type: object
        properties:
          topics:
            type: array
            items:
              type: string
          actions:
            type: array
            items:
              $ref: '#/components/schemas/KafkaAction'
    ChangePasswordInfo:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      description: an object that contains a change password request data
    IpAndPort:
      type: object
      properties:
        ip:
          type: string
        port:
          type: integer
      description: An object contains ip and port
    AWSRoleDetails:
      required:
      - name
      type: object
      properties:
        name:
          pattern: ^[a-zA-Z 0-9.-/]*$
          type: string
        description:
          type: string
      description: A given name for the AWS role that Secure Application can connect
        to.
    AWSRolePost:
      description: Defines a role ARN that Secure Application can connect to.
      allOf:
      - $ref: '#/components/schemas/AWSRoleDetails'
      - required:
        - arn
        type: object
        properties:
          arn:
            type: string
    AWSRole:
      description: Defines a role ARN that Secure Application can connect to.
      allOf:
      - $ref: '#/components/schemas/AWSRolePost'
      - type: object
        properties:
          id:
            type: string
            format: uuid
    AWSAccount:
      type: object
      properties:
        name:
          type: string
        accountId:
          type: string
      description: Defines an AWS account
    AssignedAccount:
      required:
      - assignedAccountId
      type: object
      properties:
        assignedAccountId:
          type: string
          description: This is null if there is no assigned account.
          format: uuid
    AssignedAccountResponse:
      allOf:
      - $ref: '#/components/schemas/AssignedAccount'
      - required:
        - accountTier
        - apiSecurity
        - permissionsMode
        - pricingUnitType
        - serverlessSecurity
        type: object
        properties:
          permissionsMode:
            $ref: '#/components/schemas/PermissionsMode'
          accountTier:
            $ref: '#/components/schemas/AccountTier'
          apiSecurity:
            $ref: '#/components/schemas/ApiSecurity'
          serverlessSecurity:
            $ref: '#/components/schemas/ServerlessSecurity'
          pricingUnitType:
            $ref: '#/components/schemas/pricingUnitType'
          usageStatus:
            $ref: '#/components/schemas/UsageStatus'
    PricingData:
      required:
      - contractStartDate
      - minimumPricePerMonth
      - numOfUnitsPerMonth
      - pricePerMonth
      - pricingUnitType
      type: object
      properties:
        pricingUnitType:
          $ref: '#/components/schemas/pricingUnitType'
        numOfUnitsPerMonth:
          type: integer
        pricePerMonth:
          minimum: 0
          type: integer
        minimumPricePerMonth:
          minimum: 0
          type: integer
        contractStartDate:
          type: string
          format: date-time
    IdentityVerGamma:
      required:
      - identityType
      type: object
      properties:
        identityType:
          type: string
          enum:
          - ProcessIdentityVerGamma
          - PodIdentityVerGamma
      discriminator:
        propertyName: identityType
    ProcessIdentityVerGamma:
      allOf:
      - $ref: '#/components/schemas/IdentityVerGamma'
      - required:
        - agentId
        - processId
        - timestamp
        type: object
        properties:
          agentId:
            pattern: ^([0-9a-f]{2}:){31}[0-9a-f]{2}$
            type: string
          processId:
            type: integer
          timestamp:
            type: integer
            format: int64
    PodIdentityVerGamma:
      allOf:
      - $ref: '#/components/schemas/IdentityVerGamma'
      - required:
        - agentId
        - podId
        type: object
        properties:
          agentId:
            type: string
            format: uuid
          podId:
            type: string
            description: |
              'The k8s uid of the pod. We dont write uuid since the doc does not specifically states that the uid is UUID4'
    IdentityVerBeta:
      required:
      - agentId
      - processId
      - timestamp
      type: object
      properties:
        agentId:
          pattern: ^([0-9a-f]{2}:){31}[0-9a-f]{2}$
          type: string
        processId:
          type: integer
        timestamp:
          type: integer
          format: int64
    ManagementParameters:
      type: object
      properties:
        clientId:
          type: string
        authServer:
          type: string
        iamUrl:
          type: string
        captchaSiteKey:
          type: string
        segmentFrontendWriteKey:
          type: string
        upgradeUrl:
          type: string
        latestAgentVersion:
          type: string
        latestIstioVersion:
          type: string
        minK8sVersion:
          type: string
        minControllerAutoUpdateVersion:
          type: string
    ApiResponse:
      type: object
      properties:
        message:
          type: string
      description: An object that is return in all cases of failures.
    TelemetryThresholds:
      type: object
      properties:
        connectionTelemetriesThreshold:
          type: integer
          description: defines how many max connections telemetries to send to the
            management in each bulk
        podTelemetriesThreshold:
          type: integer
          description: defines how many max pods telemetries to send to the management
            in each bulk
        k8sTelemetriesThreshold:
          type: integer
          description: defines how many max k8s telemetries to send to the management
            in each bulk
        deployerPolicyThreshold:
          type: integer
          description: defines how many max deployer policy to send to the management
            in each bulk
    CertificateResponse:
      type: object
      properties:
        rootCaPublicKey:
          type: string
        certificateJwtStr:
          type: string
          format: jwt
    ClusterPermission:
      type: object
      properties:
        cluster:
          type: string
        clusterId:
          type: string
          format: uuid
        permissionInfo:
          type: array
          items:
            $ref: '#/components/schemas/PermissionInfo'
    PermissionInfo:
      type: object
      properties:
        risk:
          $ref: '#/components/schemas/PermissionRisk'
        count:
          type: integer
    OwnerResponse:
      type: object
      properties:
        clusterName:
          type: string
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Owner'
    Owner:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        owner:
          type: string
        ownerType:
          $ref: '#/components/schemas/PermissionOwnerType'
        namespace:
          type: string
        permissionInfo:
          type: array
          items:
            $ref: '#/components/schemas/PermissionInfo'
        systemDefaultOwnerType:
          $ref: '#/components/schemas/SystemDefaultOwnerType'
    PermissionOwnerType:
      type: string
      enum:
      - USER
      - GROUP
      - SERVICEACCOUNT
    SystemDefaultOwnerType:
      type: string
      enum:
      - SYSTEM
      - USER
      - HYBRID
    PermissionResponse:
      type: object
      properties:
        clusterName:
          type: string
        ownerName:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionOwner'
    PermissionOwner:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        scope:
          type: string
        namespace:
          type: string
        risk:
          $ref: '#/components/schemas/PermissionRisk'
        isApproved:
          type: boolean
        isSystemPermission:
          type: boolean
    PermissionRoleResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        clusterName:
          type: string
        ownerName:
          type: string
        roleName:
          type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/PermissionRoleResources'
    PermissionRoleResources:
      type: object
      properties:
        resources:
          type: array
          items:
            type: string
        resourceNames:
          type: array
          items:
            type: string
        apiGroups:
          type: array
          items:
            type: string
        verbs:
          type: array
          items:
            type: string
        risk:
          $ref: '#/components/schemas/PermissionRisk'
        riskReason:
          type: array
          items:
            type: string
    PermissionRisk:
      type: string
      enum:
      - NO_RISK
      - MEDIUM
      - HIGH
      - APPROVED
    SecurityContextRisk:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
    eventsToForward:
      type: string
      enum:
      - NOTIFICATION
      - ADMINISTRATIVE
      - ALERT
      - VULNERABILITY
      - ATTACK_PATH
      - MALWARE
      - KUBERNETES_RUNTIME
      - SECURITY_FINDINGS
      - ATTACK_SURFACE_DISCOVERY
    pricingUnitType:
      type: string
      enum:
      - POD
      - VCPUS
    AgentsUpdateSettings:
      type: object
      properties:
        isManualUpdate:
          type: boolean
        isUpdateNowEnabled:
          type: boolean
        latestAgentVersion:
          type: string
          readOnly: true
        latestIstioVersion:
          type: string
          readOnly: true
    EventsForwardingDetailsList:
      type: object
      properties:
        details:
          type: array
          items:
            $ref: '#/components/schemas/EventsForwardingDetails'
    EventsForwardingDetails:
      required:
      - eventsForwardingDetailsType
      - eventsToForward
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        eventsForwardingDetailsType:
          $ref: '#/components/schemas/EventsForwardingDetailsTypeEnum'
        name:
          type: string
        url:
          type: string
          format: uri
        eventsToForward:
          type: array
          items:
            $ref: '#/components/schemas/eventsToForward'
      discriminator:
        propertyName: eventsForwardingDetailsType
    SplunkEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/EventsForwardingDetails'
      - type: object
      - required:
        - sourceName
        - token
        type: object
        properties:
          sourceName:
            type: string
            default: Secure Application management
          token:
            type: string
          isCloud:
            type: boolean
            default: false
          port:
            type: integer
    OpsGenieEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/EventsForwardingDetails'
      - type: object
      - required:
        - token
        type: object
        properties:
          token:
            type: string
    WebexEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/EventsForwardingDetails'
      - type: object
    WebexVulnerabilityEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/WebexEventsForwardingDetails'
      - type: object
      - required:
        - vulnerabilitySeverity
        type: object
        properties:
          vulnerabilitySeverity:
            $ref: '#/components/schemas/VulnerabilitySeverity'
    SecureXEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/EventsForwardingDetails'
      - type: object
    SecureXVulnerabilityEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/SecureXEventsForwardingDetails'
      - type: object
      - required:
        - vulnerabilitySeverity
        type: object
        properties:
          vulnerabilitySeverity:
            $ref: '#/components/schemas/VulnerabilitySeverity'
    SlackEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/EventsForwardingDetails'
      - type: object
    SlackVulnerabilityEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/SlackEventsForwardingDetails'
      - type: object
      - required:
        - vulnerabilitySeverity
        type: object
        properties:
          vulnerabilitySeverity:
            $ref: '#/components/schemas/VulnerabilitySeverity'
    SumoLogicEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/EventsForwardingDetails'
      - type: object
    SumoLogicVulnerabilityEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/SumoLogicEventsForwardingDetails'
      - type: object
      - required:
        - vulnerabilitySeverity
        type: object
        properties:
          vulnerabilitySeverity:
            $ref: '#/components/schemas/VulnerabilitySeverity'
    TeamsEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/EventsForwardingDetails'
      - type: object
    TeamsVulnerabilityEventsForwardingDetails:
      allOf:
      - $ref: '#/components/schemas/TeamsEventsForwardingDetails'
      - type: object
      - required:
        - vulnerabilitySeverity
        type: object
        properties:
          vulnerabilitySeverity:
            $ref: '#/components/schemas/VulnerabilitySeverity'
    TestWebexIntegrationRequest:
      required:
      - url
      type: object
      properties:
        url:
          type: string
    TestSecureXIntegrationRequest:
      required:
      - url
      type: object
      properties:
        url:
          type: string
    TestSlackIntegrationRequest:
      required:
      - url
      type: object
      properties:
        url:
          type: string
    TestTeamsIntegrationRequest:
      required:
      - url
      type: object
      properties:
        url:
          type: string
    TestSumoLogicIntegrationRequest:
      required:
      - url
      type: object
      properties:
        url:
          type: string
    TestOpsgenieConnectionRequest:
      required:
      - token
      type: object
      properties:
        token:
          type: string
    TestSplunkConnectionRequest:
      required:
      - token
      - url
      type: object
      properties:
        url:
          type: string
        token:
          type: string
        port:
          type: integer
        isCloud:
          type: boolean
          default: false
    CaIntegrationRequest:
      allOf:
      - $ref: '#/components/schemas/CaIntegrationResponse'
      - type: object
    CaIntegrationResponse:
      required:
      - certificate
      - issuerName
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        issuerName:
          type: string
        issuerNamespace:
          type: string
        certificate:
          type: string
    ApiSecurityApi:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: API name, usually an FQDN as determined by crankshaft, it can
            be logical or can correspond to one of the endpoints where the API is
            reachable, i.e. api.webex.com
    PodDefinitionSource:
      type: string
      description: The source type of the pod definition
      enum:
      - KUBERNETES
      - HELM
      - MANUAL
      - CLI
    ClusterPodDefinitionSource:
      type: string
      description: The source type of the pod definitions of the cluster
      default: KUBERNETES
      enum:
      - KUBERNETES
      - CD
    IstioInstallationParameters:
      type: object
      properties:
        isIstioAlreadyInstalled:
          type: boolean
          description: indicates whether Istio is already installed on this cluster
            (which means Secure Application should not install it)
          default: false
        istioVersion:
          type: string
          description: 'when istio already installed, choose the version from supported
            istio versions list: /istio/supportedVersions'
      description: istio related information
    ScanConfiguration:
      type: object
      properties:
        scanTypes:
          type: array
          description: Cluster scan types
          items:
            $ref: '#/components/schemas/ScanType'
        numberOfScanners:
          minimum: 1
          type: integer
          description: Number of available scanners in cluster
      description: scan configuration information
    ScanType:
      type: string
      enum:
      - VULNERABILITIES
      - DOCKER_CIS_BENCHMARK
    internalRegistryParameters:
      type: object
      properties:
        internalRegistryEnabled:
          type: boolean
          description: indicates whether internal registry is enabled
          default: false
        internalRegistry:
          type: string
          description: when internal registry enabled, specify the registry URL
      description: internal registry information
    AppProcessInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        executable:
          type: string
        executablePath:
          type: string
        args:
          type: array
          items:
            type: string
        deleted:
          type: boolean
      description: app info and process info for connection and App telemetries
    PodTelemetryInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        containers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
        initContainers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
        isIdentified:
          type: boolean
        isProtected:
          type: boolean
        kind:
          $ref: '#/components/schemas/PodTemplateKind'
        podDefinitionSource:
          $ref: '#/components/schemas/PodDefinitionSource'
        permissionOwnerName:
          type: string
    ExpansionTelemetryInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        isIdentified:
          type: boolean
        isProtected:
          type: boolean
    AppRuleAction:
      type: string
      description: App rule action
      enum:
      - DETECT
      - ALLOW
      - BLOCK
    ServerlessRuleAction:
      type: string
      description: serverless rule action
      enum:
      - DETECT
      - ALLOW
      - BLOCK
    ImageDef:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        imageName:
          type: string
        imageTags:
          type: array
          items:
            type: string
        imageHash:
          type: string
          description: Valid hash for the image. * will authorize image name without
            validating hash
        timeAdded:
          type: string
          format: date-time
      description: Authorized image hash
    DockerPushInfo:
      required:
      - command
      - commandOutput
      type: object
      properties:
        command:
          type: string
          description: the docker push command
        commandOutput:
          type: string
          description: the docker push command output
    imageSortKey:
      type: string
      enum:
      - IMAGE_NAME
      - TIME
      - RISK
    ImageDefPut:
      required:
      - imageHash
      type: object
      properties:
        imageHash:
          type: string
          description: images and vulnerabilities
    ImageLayers:
      type: object
      properties:
        vulnerableLayers:
          type: array
          items:
            $ref: '#/components/schemas/ImageLayer'
        safeLayers:
          type: array
          items:
            $ref: '#/components/schemas/ImageLayer'
      description: image layers
    ImageLayer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        command:
          type: string
          readOnly: true
        vulnerabilities:
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
      description: image layer
    ServerlessZip:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: zip name that was given by the user to the cli
        sha256:
          type: string
          description: the zip file's sha256 identifier
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
        timeUpdated:
          type: string
          format: date-time
        sourceType:
          $ref: '#/components/schemas/ZipSourceType'
        isIdentified:
          type: boolean
    ZipSourceType:
      type: string
      enum:
      - RUNTIME
      - CI_PLUGIN
    ImageDefGet:
      allOf:
      - $ref: '#/components/schemas/ImageDef'
      - type: object
        properties:
          vulnerabilitiesSummary:
            $ref: '#/components/schemas/VulnerabilitiesSummary'
          isScanned:
            type: boolean
            description: Specify if the image has been scanned during CI
          isIdentified:
            type: boolean
            description: Specify if the image is identified
          imageSourceType:
            $ref: '#/components/schemas/ImageSourceType'
          dockerfileScanResultsSummary:
            $ref: '#/components/schemas/DockerfileScanResultsSummary'
          licenses:
            type: array
            items:
              type: string
    ImageDefPostForAdmin:
      allOf:
      - $ref: '#/components/schemas/ImageDefGet'
      - type: object
        properties:
          numOfVulnerabilities:
            type: integer
            description: num of vulnerabilities detected on image
          highestSeverity:
            $ref: '#/components/schemas/VulnerabilitySeverity'
    ImageSbomPathResponse:
      type: object
      properties:
        sbomPath:
          type: string
    Vulnerability:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        link:
          type: string
        severity:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        cvss:
          $ref: '#/components/schemas/Cvss'
        cvssInfo:
          type: array
          items:
            $ref: '#/components/schemas/CvssInfo'
        vulnerabilitySources:
          $ref: '#/components/schemas/VulnerabilitySources'
        layerName:
          type: string
        snoozedUntil:
          type: string
          format: date-time
    CvssInfo:
      required:
      - score
      - source
      - type
      - vector
      - version
      type: object
      properties:
        score:
          type: number
          format: float
        vector:
          type: string
        type:
          type: string
        source:
          type: string
        version:
          type: string
    Cvss:
      type: object
      properties:
        score:
          maximum: 1E+1
          minimum: 0
          type: number
          format: float
        attackVector:
          $ref: '#/components/schemas/AttackVector'
        attackComplexity:
          $ref: '#/components/schemas/CvssRiskLevel'
        privilegesRequired:
          $ref: '#/components/schemas/CvssRiskLevel'
        userInteraction:
          $ref: '#/components/schemas/UserInteraction'
        scope:
          $ref: '#/components/schemas/Scope'
        confidentialityImpact:
          $ref: '#/components/schemas/CvssRiskLevel'
        integrityImpact:
          $ref: '#/components/schemas/CvssRiskLevel'
        availabilityImpact:
          $ref: '#/components/schemas/CvssRiskLevel'
    AttackVector:
      type: string
      enum:
      - NETWORK
      - ADJACENT_NETWORK
      - LOCAL
      - PHYSICAL
    CvssRiskLevel:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - NONE
    UserInteraction:
      type: string
      enum:
      - NONE
      - REQUIRED
    Scope:
      type: string
      enum:
      - UNCHANGED
      - CHANGED
    DockerfileScanSeverity:
      type: string
      enum:
      - INFO
      - WARN
      - FATAL
    DockerfileScanResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        title:
          type: string
        severity:
          $ref: '#/components/schemas/DockerfileScanSeverity'
    VulnerabilitySeverity:
      type: string
      enum:
      - UNKNOWN
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    VulnerabilitySources:
      type: object
      properties:
        fixAvailability:
          $ref: '#/components/schemas/VulnerabilityFixAvailability'
        sources:
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilitySource'
    VulnerabilityFixAvailability:
      type: string
      default: NO_FIX
      enum:
      - NO_FIX
      - PARTIAL_FIX
      - FIX_AVILABLE
    VulnerabilitySource:
      required:
      - packageName
      - packageVersion
      type: object
      properties:
        packageName:
          type: string
        packageVersion:
          type: string
        fixVersion:
          type: string
    ImageSourceType:
      type: string
      default: DOCKER_PLUGIN_CI
      enum:
      - JENKINS_PLUGIN_CI
      - DOCKER_PLUGIN_CI
      - RISK_ASSESSMENT
      - JFROG_XRAY
      - RUNTIME
    PermissionsMode:
      type: string
      default: NORMAL
      enum:
      - NORMAL
      - MANAGED
    AccountTier:
      type: string
      description: K8s security product tier
      enum:
      - REVEAL
      - CONNECT
      - TRIAL
      - PRO
    ApiSecurity:
      type: string
      description: Mode of the API security
      enum:
      - ENABLED
      - DISABLED
    ServerlessSecurity:
      type: string
      description: Mode of the Serverless security
      enum:
      - ENABLED
      - DISABLED
    AccountUsageLimits:
      type: object
      properties:
        maxNodes:
          type: integer
        maxClusters:
          type: integer
    UsageStatus:
      type: object
      properties:
        currentNodesUsage:
          type: integer
        maxNodes:
          type: integer
        currentClustersUsage:
          type: integer
        maxClusters:
          type: integer
      description: Account resource usage status
    UserLoginInfo:
      allOf:
      - $ref: '#/components/schemas/User'
      - required:
        - accountTier
        - apiSecurity
        - permissionsMode
        - pricingUnitType
        - serverlessSecurity
        type: object
        properties:
          permissionsMode:
            $ref: '#/components/schemas/PermissionsMode'
          accountTier:
            $ref: '#/components/schemas/AccountTier'
          pricingUnitType:
            $ref: '#/components/schemas/pricingUnitType'
          apiSecurity:
            $ref: '#/components/schemas/ApiSecurity'
          serverlessSecurity:
            $ref: '#/components/schemas/ServerlessSecurity'
          usageStatus:
            $ref: '#/components/schemas/UsageStatus'
    GatherInfoOption:
      type: object
      properties:
        optionName:
          type: string
        prefixes:
          type: array
          items:
            type: string
    WorkloadType:
      type: string
      enum:
      - POD
      - SYSTEM_POD
      - APP
      - EXPANSION
      - EXTERNAL
    TelemetryStateStatus:
      type: string
      enum:
      - INACTIVE
      - UNHEALTHY
      - ACTIVE
    TelemetryAvailabilityState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TelemetryStateStatus'
        statusReason:
          type: string
          description: will be populate only when status is unhealthy
    TimeBasedWidgetInfo:
      type: object
      properties:
        hasRules:
          type: boolean
          readOnly: true
        numOfRecommendedRules:
          minimum: 0
          type: integer
          readOnly: true
    DashboardTimeBasedGraphInfo:
      type: object
      properties:
        policyUpdateTimes:
          type: array
          readOnly: true
          items:
            type: string
            format: date-time
    WorkloadRisk:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/WorkloadRiskLevel'
        reasons:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadRiskReason'
    ServerlessFunctionRisk:
      type: object
      properties:
        functionRisk:
          $ref: '#/components/schemas/ServerlessFunctionRiskLevel'
        reasons:
          type: array
          items:
            $ref: '#/components/schemas/ServerlessFunctionReason'
    ServerlessSecretsRisk:
      type: string
      enum:
      - NO_KNOWN_RISK
      - RISK_IDENTIFIED
    ServerlessDataAccessRisk:
      type: string
      enum:
      - NO_RISK
      - LOW
      - MEDIUM
    ServerlessPubliclyAccessibleRisk:
      type: string
      enum:
      - NO_RISK
      - LOW
      - MEDIUM
    ServerlessPolicyRisk:
      type: string
      enum:
      - NO_RISK
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    PodIdentification:
      type: object
      properties:
        ciSection:
          $ref: '#/components/schemas/CiSection'
        cdSection:
          $ref: '#/components/schemas/CdSection'
        registrySection:
          $ref: '#/components/schemas/registrySection'
        diffSection:
          $ref: '#/components/schemas/DiffSection'
        injectedSidecarSection:
          $ref: '#/components/schemas/InjectedSidecarSection'
    InjectedSidecarSection:
      type: object
      properties:
        injectedSidecars:
          type: array
          items:
            $ref: '#/components/schemas/InjectedSidecar'
    InjectedSidecar:
      type: object
      properties:
        name:
          type: string
        isAllowed:
          type: boolean
    CiSection:
      type: object
      properties:
        isIdentified:
          type: boolean
    CdSection:
      type: object
      properties:
        isIdentified:
          type: boolean
    registrySection:
      type: object
      properties:
        isIdentified:
          type: boolean
    DiffSection:
      type: object
      properties:
        diffs:
          type: array
          items:
            $ref: '#/components/schemas/PodTemplateDiff'
    MitreDashboard:
      type: object
      properties:
        lastUpdate:
          type: string
          format: date-time
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/MitreDashboardNamespace'
        table:
          $ref: '#/components/schemas/MitreTable'
    MitreDashboardNamespace:
      type: object
      properties:
        name:
          type: string
        isCompromised:
          type: boolean
    MitreTable:
      type: object
      properties:
        initialAccess:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
        execution:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
        persistence:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
        privilegeEscalation:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
        defenseEvasion:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
        credentialsAccess:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
        discovery:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
        lateralMovement:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
        impact:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechnique'
    MitreTechnique:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/MitreTechniqueType'
        status:
          $ref: '#/components/schemas/MitreTechniqueStatus'
    MitreTechniqueStatus:
      type: string
      enum:
      - SUCCESS
      - WARNING
      - ERROR
    apiSecSourceFilter:
      type: string
      enum:
      - INTERNAL
      - EXTERNAL
    MitreTechniqueType:
      type: string
      enum:
      - COMPROMISED_IMAGES
      - UNAUTHORISED_REGISTRIES_USAGE
      - SUSPICIOUS_DEPLOYMENT
      - VULNERABLE_APPLICATION
      - EXPOSED_K8S_DASHBOARD
      - EXPLOIT_PUBLIC_FACING_APPLICATION
      - CONTAINER_SERVICE
      - DEPLOY_CONTAINER
      - SSH_CONNECTION
      - WRITEABLE_HOST_PATH
      - CRON_JOBS
      - PRIVILEGED_OR_ROOT_CONTAINER
      - PRIVILEGE_ESCALATION_ENABLED
      - CLUSTER_ADMIN_BINDING
      - UNAUTHORIZED_CLUSTER_ADMIN_BINDING
      - ACCESS_CLUSTER_RESOURCES
      - CLEAR_CONTAINER_LOGS
      - CLEAR_K8S_EVENTS
      - LIST_SECRETS
      - SERVICE_ACCOUNT_ACCESS
      - CONTAINER_RESOURCE_DISCOVERY
      - CLUSTER_INTERNAL_NETWORKING
      - TILLER_ENDPOINT_ACCESS
      - DATA_DESTRUCTION
      - CORE_DNS_POISONING
    MitreTechniqueInfo:
      type: object
      properties:
        explanation:
          type: string
        howToFix:
          type: string
        fixDescription:
          type: string
        affectedTechniques:
          type: array
          items:
            type: string
        affectedElements:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechniqueAffectedElement'
        isFixAvilable:
          type: boolean
    MitreTechniqueFixInfo:
      type: object
      properties:
        affectedElements:
          type: array
          items:
            $ref: '#/components/schemas/MitreTechniqueAffectedElement'
    MitreTechniqueAffectedElement:
      type: object
      properties:
        MitreTechniqueAffectedElementType:
          type: string
          enum:
          - MitreTechniqueAffectedOwner
          - MitreTechniqueAffectedWorkload
          - MitreTechniqueAffectedNamespace
          - MitreTechniqueAffectedCluster
      discriminator:
        propertyName: MitreTechniqueAffectedElementType
    MitreTechniqueAffectedWorkload:
      allOf:
      - $ref: '#/components/schemas/MitreTechniqueAffectedElement'
      - type: object
        properties:
          type:
            type: string
          name:
            type: string
          cluster:
            type: string
          namespaces:
            type: array
            items:
              type: string
    MitreTechniqueAffectedNamespace:
      allOf:
      - $ref: '#/components/schemas/MitreTechniqueAffectedElement'
      - type: object
        properties:
          type:
            type: string
          name:
            type: string
          cluster:
            type: string
    MitreTechniqueAffectedCluster:
      allOf:
      - $ref: '#/components/schemas/MitreTechniqueAffectedElement'
      - type: object
        properties:
          type:
            type: string
          name:
            type: string
    MitreTechniqueAffectedOwner:
      allOf:
      - $ref: '#/components/schemas/MitreTechniqueAffectedElement'
      - type: object
        properties:
          type:
            type: string
          name:
            type: string
          cluster:
            type: string
          namespaces:
            type: array
            items:
              type: string
          isApproved:
            type: boolean
    AllowedHostPath:
      type: object
      properties:
        pathPrefix:
          type: string
        readOnly:
          type: boolean
    ApiCatalogItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        grade:
          $ref: '#/components/schemas/ApiSecurityPolicyGrade'
        compliance:
          type: boolean
        provider:
          type: string
        classification:
          type: array
          items:
            type: string
    ApiCatalogItemInfo:
      type: object
      properties:
        name:
          type: string
        lastUpdated:
          type: string
          format: date-time
        grade:
          $ref: '#/components/schemas/ApiSecurityPolicyGrade'
        compliance:
          type: boolean
        apiPolicyName:
          type: string
        network:
          $ref: '#/components/schemas/ApiCatalogItemNetworkInfo'
        provider:
          $ref: '#/components/schemas/ApiCatalogItemProviderInfo'
        application:
          $ref: '#/components/schemas/ApiCatalogItemApplicationInfo'
        platform:
          $ref: '#/components/schemas/ApiCatalogItemPlatformInfo'
    ApiCatalogItemNetworkInfo:
      type: object
      properties:
        location:
          type: string
        reachability:
          type: integer
    ApiCatalogItemProviderInfo:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
        reputation:
          type: integer
        classification:
          type: array
          items:
            type: string
    ApiCatalogItemApplicationInfo:
      type: object
      properties:
        uptime:
          type: integer
        preformance:
          type: integer
        owaspVulnerabilities:
          type: array
          items:
            type: string
    ApiCatalogItemPlatformInfo:
      type: object
      properties:
        csp:
          type: string
        cves:
          type: array
          items:
            type: string
        tls:
          type: integer
        uptime:
          type: integer
    RiskFindings:
      type: object
      properties:
        riskFindings:
          type: array
          items:
            $ref: '#/components/schemas/RiskFinding'
    RiskFinding:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        risk:
          $ref: '#/components/schemas/ApiSecurityRisk'
        affectedElements:
          $ref: '#/components/schemas/RiskFindingAffectedElements'
        category:
          type: string
        source:
          type: string
        description:
          type: string
        mitigation:
          type: string
    RiskFindingAffectedElements:
      type: object
      properties:
        internalElements:
          $ref: '#/components/schemas/RiskFindingAffectedElementType'
        externalElements:
          $ref: '#/components/schemas/RiskFindingAffectedElementType'
    RiskFindingAffectedElementType:
      type: array
      items:
        $ref: '#/components/schemas/RiskFindingAffectedElementObject'
    RiskFindingAffectedElementObject:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
    RepoToApiAssociation:
      type: object
      properties:
        deployedImages:
          type: array
          items:
            $ref: '#/components/schemas/DeployedImage'
    DeployedImage:
      required:
      - imageInfo
      - lastCommit
      type: object
      properties:
        imageInfo:
          $ref: '#/components/schemas/ImageDefGet'
        componentPath:
          type: string
        lastCommit:
          type: string
        apiInternal:
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceInternal'
        apiExternal:
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceExternal'
    ApiServiceListExternal:
      title: ApiServiceListExternal
      required:
      - items
      type: object
      properties:
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceExternal'
    ApiServiceListInternal:
      title: ApiServiceListInternal
      required:
      - items
      type: object
      properties:
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceInternal'
    ApiServiceTags:
      required:
      - names
      type: object
      properties:
        names:
          type: array
          items:
            type: string
    ApiServiceMethod:
      required:
      - method
      - path
      - risk
      - tag
      type: object
      properties:
        path:
          type: string
        method:
          $ref: '#/components/schemas/HttpMethod'
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        tag:
          type: string
    ConnectionsPolicyApiMethod:
      required:
      - method
      - path
      - tag
      type: object
      properties:
        path:
          type: string
        method:
          $ref: '#/components/schemas/HttpMethod'
        tag:
          type: string
    ApiServiceExternal:
      allOf:
      - $ref: '#/components/schemas/ApiServiceBaseLevel'
      - type: object
        properties:
          classification:
            title: Classification
            type: array
            description: 'API classification label as determined by Crankshaft, e.g.
              [''meetings'', ''messaging''] '
            items:
              type: string
          provider_id:
            title: Provider Id
            type: string
            description: API provider id
            format: uuid
          provider_name:
            title: Provider Name
            type: string
            description: Provider name if provider_id is set.
    ApiServiceInternal:
      allOf:
      - $ref: '#/components/schemas/ApiServiceBaseLevel'
      - type: object
        properties:
          port:
            maximum: 65535
            minimum: 0
            type: integer
          namespace:
            type: string
          cluster:
            type: string
          fuzzingStatus:
            $ref: '#/components/schemas/FuzzingStatus'
          fuzzingStartTime:
            type: string
            format: date-time
          fuzzingEndTime:
            type: string
            format: date-time
          fuzzingStatusMessage:
            type: string
    TraceAnalysisConfiguration:
      required:
      - duration
      - timeUnit
      type: object
      properties:
        duration:
          type: integer
        timeUnit:
          type: string
          enum:
          - MINUTES
          - HOURS
          - DAYS
    TraceAnalysisDetails:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TraceAnalysisStatus'
        endTime:
          type: string
          format: date-time
        findings:
          type: array
          items:
            $ref: '#/components/schemas/TraceAnalysisFinding'
    TraceAnalysisFinding:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        specLocation:
          type: string
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        additionalInfo:
          type: string
    TraceAnalysisStatus:
      type: string
      enum:
      - IN_PROGRESS
      - READY
    ApiServiceFuzzingTest:
      type: object
      properties:
        testDetails:
          $ref: '#/components/schemas/ApiServiceFuzzingProgress'
        tags:
          $ref: '#/components/schemas/FuzzingTestTags'
    ApiFuzzingTestConfiguration:
      required:
      - auth
      - depth
      type: object
      properties:
        auth:
          $ref: '#/components/schemas/AuthorizationScheme'
        depth:
          $ref: '#/components/schemas/TestInputDepthEnum'
    TestInputDepthEnum:
      title: TestInputDepth
      type: string
      description: An enumeration for input depth parameter.
      enum:
      - QUICK
      - DEFAULT
      - DEEP
    AuthorizationScheme:
      required:
      - authorizationSchemeType
      type: object
      properties:
        authorizationSchemeType:
          type: string
          enum:
          - AuthorizationSchemeBasicAuth
          - AuthorizationSchemeApiToken
          - AuthorizationSchemeBearerToken
          - AuthorizationSchemeNone
      discriminator:
        propertyName: authorizationSchemeType
    AuthorizationSchemeBasicAuth:
      allOf:
      - $ref: '#/components/schemas/AuthorizationScheme'
      - required:
        - password
        - username
        type: object
        properties:
          password:
            type: string
          username:
            type: string
    AuthorizationSchemeApiToken:
      allOf:
      - $ref: '#/components/schemas/AuthorizationScheme'
      - required:
        - key
        - value
        type: object
        properties:
          key:
            type: string
          value:
            type: string
    AuthorizationSchemeBearerToken:
      allOf:
      - $ref: '#/components/schemas/AuthorizationScheme'
      - required:
        - token
        type: object
        properties:
          token:
            type: string
    AuthorizationSchemeNone:
      allOf:
      - $ref: '#/components/schemas/AuthorizationScheme'
      - type: object
    ApiServiceFuzzingProgress:
      type: object
      properties:
        testId:
          type: string
          format: uuid
        fuzzingStatus:
          $ref: '#/components/schemas/FuzzingStatus'
        fuzzingStatusMessage:
          type: string
        fuzzingProgress:
          type: integer
        fuzzingStartTime:
          type: string
          format: date-time
        testConfiguration:
          $ref: '#/components/schemas/ApiFuzzingTestConfiguration'
    ApiServiceBaseLevel:
      title: ApiServiceBaseLevel
      required:
      - identifier
      - name
      type: object
      properties:
        compliance:
          $ref: '#/components/schemas/ApiServiceCompliance_Simple'
        description:
          title: Description
          type: string
          description: Textual description of the Service
        identifier:
          title: Identifier
          type: string
          description: Unique identifier of the subject API as assigned by Crankshaft
          format: uuid
        link_doc:
          title: Link Doc
          type: string
          description: Location of the documentation. This can be an URL for example
        name:
          title: Name
          type: string
          description: API name (for external) or destination workload (for internal)
        openapi_spec_availablity:
          $ref: '#/components/schemas/OpenApiSpecAvailability'
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        status:
          $ref: '#/components/schemas/ApiSecurityApiStatus'
        status_description:
          type: string
        creation_timestamp:
          title: Timestamp
          type: string
          format: date-time
        last_update:
          title: Last Update
          type: string
          format: date-time
        clientWorkloads:
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceClientWorkload'
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
        score:
          $ref: '#/components/schemas/ApiServiceScore'
        gatewayInfo:
          $ref: '#/components/schemas/Gateway'
    ApiSecurityRiskSeverity:
      title: RiskSeverity
      type: string
      description: An `enum`eration.
      enum:
      - NO_RISK
      - UNKNOWN
      - NEUTRAL
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    ApiSecurityPolicyRiskSeverity:
      title: ApiSecurityPolicyRiskSeverity
      type: string
      enum:
      - NO_RISK
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    ApiServiceType:
      type: string
      description: An `enum`eration.
      enum:
      - INTERNAL
      - EXTERNAL
    FuzzingStatus:
      title: FuzzingStatus
      type: string
      description: An enumeration.
      enum:
      - READY
      - IN_PROGRESS
      - DONE
      - ERROR
      - UNFUZZABLE
      - STOP_IN_PROGRESS
      - CANCELLED
    ApiSecurityApiStatus:
      title: ApiStatus
      type: string
      description: Api status enumeration.
      enum:
      - PROCESSING
      - VALID
      - INVALID
    ApiServiceCompliance_Simple:
      title: ApiServiceCompliance_Simple
      required:
      - compliant
      - profilescompliance
      type: object
      properties:
        compliant:
          title: Compliant
          type: boolean
        profilescompliance:
          title: Profilescompliance
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceProfileCompliance_Simple'
    ApiServiceProfileCompliance_Simple:
      title: ApiServiceProfileCompliance_Simple
      required:
      - compliant
      - profile
      type: object
      properties:
        compliant:
          title: Compliant
          type: boolean
        profile:
          title: Profile
          type: string
    ApiServiceDrillDownBase:
      title: ApiService
      required:
      - identifier
      - name
      type: object
      properties:
        compliance:
          $ref: '#/components/schemas/ApiServiceCompliance'
        description:
          title: Description
          type: string
          description: Textual description of the Service
        identifier:
          title: Identifier
          type: string
          description: Unique identifier of the subject API as assigned by Crankshaft
          format: uuid
        link_doc:
          title: Link Doc
          type: string
          description: Location of the documentation. This can be an URL for example
        name:
          title: Name
          type: string
          description: API name, usually an FQDN as determined by crankshaft, it can
            be logical or can correspond to one of the endpoints where the API is
            reachable, i.e. api.webex.com
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        score:
          $ref: '#/components/schemas/ApiServiceScore'
        status:
          $ref: '#/components/schemas/ApiSecurityApiStatus'
        status_description:
          type: string
        creation_timestamp:
          title: Timestamp
          type: string
          format: date-time
        openapi_spec_availablity:
          $ref: '#/components/schemas/OpenApiSpecAvailability'
        clientWorkloads:
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceClientWorkload'
        isApiTracingEnabled:
          type: boolean
    ApiReconstructionRequest:
      type: object
      properties:
        learningDuration:
          type: string
          format: iso8601
        clusterId:
          type: string
          format: uuid
    ApiReconstructionResponse:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ApiReconstructionType'
        response:
          type: object
          properties:
            status:
              $ref: '#/components/schemas/ApiReconstructionStatus'
            messages:
              type: array
              items:
                type: string
            learningDurationLeft:
              type: string
              format: iso8601
    ApiReconstructionType:
      type: string
      description: Status of an ongoing API reconstruction.
      enum:
      - LEARN
      - APPROVE
    ApiReconstructionStatus:
      type: string
      description: Status of an ongoing API reconstruction phase.
      enum:
      - NONE
      - IN_PROGRESS
      - ERROR
      - DONE
      - ABORTING
    ApiReconstructedSpec:
      required:
      - OASVersion
      - reviewPathItems
      type: object
      properties:
        reviewId:
          type: string
          readOnly: true
        OASVersion:
          $ref: '#/components/schemas/OASVersion'
        reviewPathItems:
          type: array
          items:
            $ref: '#/components/schemas/ReviewPathItem'
    OASVersion:
      type: string
      description: OpenAPI specification version
      enum:
      - OASv2.0
      - OASv3.0
    ReviewPathItem:
      type: object
      properties:
        suggestedPath:
          type: string
          description: Represents the parameterized path suggested by the engine
        apiEventsPaths:
          type: array
          description: Group of api event paths (original) that suggestedPath is representing
          items:
            $ref: '#/components/schemas/ApiEventPathAndMethods'
    ApiEventPathAndMethods:
      type: object
      properties:
        path:
          type: string
        methods:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    ApiServiceDrillDownExternal:
      allOf:
      - $ref: '#/components/schemas/ApiServiceDrillDownBase'
      - type: object
        properties:
          classification:
            title: Classification
            type: array
            description: 'API classification label as determined by Crankshaft, e.g.
              [''meetings'', ''messaging''] '
            items:
              type: string
          provider:
            $ref: '#/components/schemas/ApiProvider_Base'
    ApiServiceBflaInfo:
      required:
      - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiServiceBflaInfoStatus'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceBflaTagInfo'
        endTime:
          type: string
          format: date-time
    BflaDurationConfiguration:
      required:
      - duration
      type: object
      properties:
        duration:
          type: string
          format: iso8601
    ApiServiceBflaPathInfo:
      required:
      - isLegitimate
      - method
      - path
      type: object
      properties:
        path:
          type: string
        method:
          $ref: '#/components/schemas/HttpMethod'
        clients:
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceBflaClientInfo'
        isLegitimate:
          type: boolean
          default: false
    ApiServiceBflaClientInfo:
      required:
      - isLegitimate
      - name
      type: object
      properties:
        identifier:
          type: string
          format: uuid
        external:
          type: boolean
          default: false
        name:
          type: string
        namespace:
          type: string
        lastObserved:
          type: string
          format: date-time
        lastStatusCode:
          type: integer
        isLegitimate:
          type: boolean
          default: false
        principles:
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceBflaPrincipleInfo'
    ApiServiceBflaPrincipleInfo:
      required:
      - ip
      - name
      - principleType
      type: object
      properties:
        principleType:
          type: string
        name:
          type: string
        ip:
          type: string
    ApiServiceBflaTagInfo:
      required:
      - isLegitimate
      - name
      - paths
      type: object
      properties:
        name:
          type: string
        paths:
          type: array
          items:
            $ref: '#/components/schemas/ApiServiceBflaPathInfo'
        isLegitimate:
          type: boolean
          default: false
    ApiServiceBflaInfoStatus:
      title: ApiServiceBflaInfoStatus
      type: string
      enum:
      - NO_SPEC
      - READY
      - IN_PROGRESS_LEARNING
      - IN_PROGRESS_DETECTION
    ApiServiceDrillDownInternal:
      allOf:
      - $ref: '#/components/schemas/ApiServiceDrillDownBase'
      - type: object
        properties:
          port:
            maximum: 65535
            minimum: 0
            type: integer
          cluster:
            type: string
          clusterId:
            type: string
            format: uuid
          namespace:
            type: string
          isFuzzable:
            type: boolean
          gatewayInfo:
            $ref: '#/components/schemas/Gateway'
    ApiServiceCompliance:
      title: ApiServiceCompliance
      required:
      - compliant
      type: object
      properties:
        compliant:
          title: Compliant
          type: boolean
    ApiServiceProfileCompliance:
      title: ApiServiceProfileCompliance
      required:
      - api_id
      - compliant
      - profile
      type: object
      properties:
        api_id:
          title: Api Id
          type: string
          description: Api Service this compliance refers to
          format: uuid
        compliant:
          title: Compliant
          type: boolean
          description: True if score is compliant with the profile. False otherwise.
        profile:
          $ref: '#/components/schemas/ApiPolicyProfile'
        score_id:
          title: Score Id
          type: string
          description: If existing, score used to compute the compliance
          format: uuid
        violation:
          $ref: '#/components/schemas/ProfileViolation'
    ProfileViolation:
      title: ProfileViolation
      required:
      - condition_index
      - description
      type: object
      properties:
        condition_index:
          title: Condition Index
          type: integer
          description: Index of the condition violated in the API Policy Profile
        description:
          title: Description
          type: string
          description: Human readable description of the violation
    ApiPolicyProfile:
      title: ApiPolicyProfile
      required:
      - compliant_on_missing_score
      - conditions
      - name
      type: object
      properties:
        compliant_on_missing_score:
          title: Compliant On Missing Score
          type: boolean
        conditions:
          title: Conditions
          type: array
          description: List conditions defined in this policy profile. All conditions
            are in AND.
          items:
            $ref: '#/components/schemas/ApiPolicyProfileCondition'
        name:
          title: Name
          type: string
          description: Name of the policy profile
    EndpointOrConditionsBase:
      required:
      - attribute
      type: object
      properties:
        attribute:
          type: string
          enum:
          - EndpointRisk
          - EndpointRiskTrend
          - EndpointRiskTrendIsNone
          - EndpointRiskConfidence
          - EndpointRiskConfidenceIsNone
          - EndpointLocation
          - EndpointLocationIsNone
          - EndpointHostV4
          - EndpointHostV6
          - EndpointHostname
          - EndpointHostnameIsNone
          - EndpointScheme
          - EndpointSchemeIsNone
          - EndpointProtocol
          - EndpointPort
      discriminator:
        propertyName: attribute
    EndpointRisk:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionNumberComparison'
          value:
            $ref: '#/components/schemas/RiskSeverity'
    EndpointRiskTrend:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionEnumComparator'
          value:
            $ref: '#/components/schemas/RiskTrendEnum'
    EndpointRiskTrendIsNone:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    EndpointRiskConfidence:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionEnumComparator'
          value:
            $ref: '#/components/schemas/RiskConfidenceEnum'
    EndpointRiskConfidenceIsNone:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    EndpointLocation:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionListComparison'
          value:
            title: Value
            type: string
    EndpointPort:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionNumberComparison'
          value:
            title: Value
            type: integer
    EndpointLocationIsNone:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    EndpointHostV4:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/IpAddressComparison'
          value:
            title: Value
            type: string
            format: ipv4network
    IpAddressComparison:
      title: IpAddressComparison
      type: string
      description: An enumeration.
      enum:
      - belongs_to
    EndpointHostV6:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/IpAddressComparison'
          value:
            title: Value
            type: string
            format: ipv6network
    EndpointHostname:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionListComparison'
          value:
            title: Value
            type: string
    EndpointHostnameIsNone:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    EndpointProtocol:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionEnumComparator'
          value:
            $ref: '#/components/schemas/IpProtoEnum'
    EndpointScheme:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionEnumComparator'
          value:
            $ref: '#/components/schemas/UrlSchemeEnum'
    EndpointSchemeIsNone:
      allOf:
      - $ref: '#/components/schemas/EndpointOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ApiOrConditionsBase:
      required:
      - attribute
      type: object
      properties:
        attribute:
          type: string
          enum:
          - ApiRisk
          - ApiRiskTrend
          - ApiRiskTrendIsNone
          - ApiRiskConfidence
          - ApiRiskConfidenceIsNone
          - ApiAvgVulnerabilityDuration
          - ApiAvgVulnerabilityDurationIsNone
          - ApiName
          - ApiClassification
          - ApiClassificationIsNone
      discriminator:
        propertyName: attribute
    ApiPolicyProfileCondition:
      title: ApiPolicyProfileCondition
      type: object
      properties:
        api_or_conditions:
          title: Api Or Conditions
          type: array
          items:
            $ref: '#/components/schemas/ApiOrConditionsBase'
        endpoint_or_conditions:
          title: Endpoint Or Conditions
          type: array
          items:
            $ref: '#/components/schemas/EndpointOrConditionsBase'
        provider_or_conditions:
          title: Provider Or Conditions
          type: array
          items:
            $ref: '#/components/schemas/ProviderOrConditionsBase'
    ProviderOrConditionsBase:
      required:
      - attribute
      type: object
      properties:
        attribute:
          type: string
          enum:
          - ProviderRisk
          - ProviderRiskTrend
          - ProviderRiskTrendIsNone
          - ProviderRiskConfidence
          - ProviderRiskConfidenceIsNone
          - ProviderAvgVulnerabilityDuration
          - ProviderAvgVulnerabilityDurationIsNone
          - ProviderName
          - ProviderLocation
          - ProviderLocationIsNone
          - ProviderIndustry
          - ProviderIndustryIsNone
      discriminator:
        propertyName: attribute
    OpenApiSpecScoreStatus:
      title: OpenApiSpecScoreStatus
      type: string
      enum:
      - SCORED
      - NOT_SCORED
    OpenApiSpec:
      type: object
      properties:
        preview:
          $ref: '#/components/schemas/OpenApiSpecPreview'
        scoreElements:
          $ref: '#/components/schemas/OpenApiSpecScoreBase'
    OpenApiSpecPreview:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        basePath:
          type: string
        description:
          type: string
        termsOfService:
          type: string
        contactMail:
          type: string
        licenseName:
          type: string
        licenseUrl:
          type: string
    OpenApiSpecScoreElementsList:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiSpecScoreElement'
        severity:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
    OpenApiSpecScoreComponentsV3ElementsList:
      allOf:
      - $ref: '#/components/schemas/OpenApiSpecScoreElementsList'
      - type: object
        properties:
          name:
            title: Name
            type: string
    OpenApiSpecScoreElement:
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the Object
        specPath:
          type: string
        severity:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        findings:
          $ref: '#/components/schemas/SpecScoreFindings'
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
    OpenApiSpecScoreBase:
      type: object
      properties:
        oapIVersion:
          type: string
          enum:
          - OpenApiSpecScoreV2
          - OpenApiSpecScoreV3
        tags:
          $ref: '#/components/schemas/OpenApiSpecTags'
        security:
          $ref: '#/components/schemas/OpenApiSpecScoreElementsList'
        general:
          $ref: '#/components/schemas/OpenApiSpecScoreElementsList'
      discriminator:
        propertyName: oapIVersion
    OpenApiSpecScoreV2:
      allOf:
      - $ref: '#/components/schemas/OpenApiSpecScoreBase'
      - type: object
        properties:
          definitions:
            $ref: '#/components/schemas/OpenApiSpecScoreElementsList'
          parameters:
            $ref: '#/components/schemas/OpenApiSpecScoreElementsList'
          responses:
            $ref: '#/components/schemas/OpenApiSpecScoreElementsList'
          securityDefinitions:
            $ref: '#/components/schemas/OpenApiSpecScoreElementsList'
    OpenApiSpecScoreV3:
      allOf:
      - $ref: '#/components/schemas/OpenApiSpecScoreBase'
      - type: object
        properties:
          servers:
            $ref: '#/components/schemas/OpenApiSpecScoreElementsList'
          components:
            $ref: '#/components/schemas/OAPIV3Components'
    OAPIV3Components:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        elements:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiSpecScoreComponentsV3ElementsList'
    FuzzingTestTags:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/FuzzingTestTag'
        severity:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
    FuzzingTestTag:
      type: object
      properties:
        name:
          type: string
        severity:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        methods:
          type: array
          items:
            $ref: '#/components/schemas/FuzzingMethod'
    FuzzingMethod:
      type: object
      properties:
        path:
          type: string
        method:
          $ref: '#/components/schemas/HttpMethod'
        severity:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        findings:
          $ref: '#/components/schemas/FuzzingScoreFindings'
        requestCount:
          type: integer
    FuzzingScoreFindings:
      type: object
      properties:
        critical:
          $ref: '#/components/schemas/FuzzingScoreFindingsList'
        high:
          $ref: '#/components/schemas/FuzzingScoreFindingsList'
        medium:
          $ref: '#/components/schemas/FuzzingScoreFindingsList'
        low:
          $ref: '#/components/schemas/FuzzingScoreFindingsList'
        unclassified:
          $ref: '#/components/schemas/FuzzingScoreFindingsList'
    FuzzingScoreFindingsList:
      type: object
      properties:
        count:
          type: integer
        elements:
          type: array
          items:
            $ref: '#/components/schemas/FuzzingScoreElementFinding'
    FuzzingScoreElementFinding:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        specPath:
          type: string
        source:
          type: string
        additionalInfo:
          title: Dictionary entries
          type: object
          additionalProperties:
            type: string
    OpenApiSpecTags:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/OpenApiSpecTag'
        severity:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
    OpenApiSpecTag:
      type: object
      properties:
        name:
          type: string
        severity:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        methods:
          type: array
          items:
            $ref: '#/components/schemas/SpecMethod'
        hasDiffs:
          type: boolean
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
    SpecMethod:
      type: object
      properties:
        path:
          type: string
        method:
          $ref: '#/components/schemas/HttpMethod'
        tag:
          type: string
        description:
          type: string
        severity:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        findings:
          $ref: '#/components/schemas/SpecScoreFindings'
        vulnerabilitiesSummary:
          $ref: '#/components/schemas/VulnerabilitiesSummary'
        diffs:
          $ref: '#/components/schemas/SpecScoreDiffsLists'
    SpecScoreDiffsLists:
      type: object
      properties:
        diffs:
          type: array
          items:
            $ref: '#/components/schemas/SpecScoreDiff'
        zombies:
          type: array
          items:
            $ref: '#/components/schemas/SpecScoreDiff'
        shadows:
          type: array
          items:
            $ref: '#/components/schemas/SpecScoreDiff'
    SpecScoreDiff:
      type: object
      properties:
        documented:
          type: string
        detected:
          type: string
        lastSeen:
          type: string
          format: date-time
    SpecScoreFindings:
      type: object
      properties:
        critical:
          $ref: '#/components/schemas/SpecScoreFindingsList'
        high:
          $ref: '#/components/schemas/SpecScoreFindingsList'
        medium:
          $ref: '#/components/schemas/SpecScoreFindingsList'
        low:
          $ref: '#/components/schemas/SpecScoreFindingsList'
        unclassified:
          $ref: '#/components/schemas/SpecScoreFindingsList'
    SpecScoreFindingsList:
      type: object
      properties:
        count:
          type: integer
        elements:
          type: array
          items:
            $ref: '#/components/schemas/SpecScoreElementFinding'
    SpecScoreElementFinding:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        mitigation:
          type: string
        specPath:
          type: string
        occurrences:
          type: integer
        source:
          type: string
        additional_info:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfo'
    ApiServiceScore:
      title: ApiServiceScore
      required:
      - api
      - identifier
      - provider
      - status
      - timestamp
      type: object
      properties:
        api:
          $ref: '#/components/schemas/ApiServiceScoreGrade'
        identifier:
          title: id
          type: string
          format: uuid
        provider:
          $ref: '#/components/schemas/ApiProviderScoreGrade'
        status:
          $ref: '#/components/schemas/ScoreExitStatusEnum'
        timestamp:
          title: Timestamp
          type: string
          format: date-time
    ApiProviderScoreGrade:
      title: ApiProviderScoreGrade
      required:
      - categories
      - curated
      - provider
      - risk
      - scorer_version
      type: object
      properties:
        additional_info:
          title: Additional Info
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        avg_vulnerability_duration:
          title: Avg Vulnerability Duration
          type: integer
        categories:
          title: Categories
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CategoryScoreGradeNoFindings'
        confidence:
          $ref: '#/components/schemas/RiskConfidenceEnum'
        curated:
          title: Curated
          type: boolean
        last_finding_date:
          title: Last Finding Date
          type: string
          format: date-time
        last_vulnerability_date:
          title: Last Vulnerability Date
          type: string
          format: date-time
        provider:
          $ref: '#/components/schemas/ApiProvider_Base'
        provider_id:
          type: string
          format: uuid
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        scorer_version:
          title: Scorer Version
          type: integer
        trend:
          $ref: '#/components/schemas/RiskTrendEnum'
    ApiProvider_Base:
      title: ApiProvider_Base
      required:
      - identifier
      - name
      type: object
      properties:
        identifier:
          title: id
          type: string
          description: Unique id of the subject API as assigned by Crankshaft
          format: uuid
        industry:
          title: Industry
          type: string
        location:
          title: Location
          type: string
        name:
          title: Name
          type: string
          description: Name of the provider, typically an FQDN
    ScoreExitStatusEnum:
      title: ScoreExitStatusEnum
      type: string
      description: An enumeration.
      enum:
      - SUCCESS
      - NETWORK_FAILURE
      - TOO_LONG
      - PARSE_ERROR
      - GENERIC_FAILURE
    ApiServiceScoreGrade:
      title: ApiServiceScoreGrade
      required:
      - api
      - categories
      - endpoints
      - risk
      - scorer_version
      type: object
      properties:
        additional_info:
          title: Additional Info
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        api:
          $ref: '#/components/schemas/ApiService_Base'
        avg_vulnerability_duration:
          title: Avg Vulnerability Duration
          type: integer
        categories:
          title: Categories
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CategoryScoreGrade'
        confidence:
          $ref: '#/components/schemas/RiskConfidenceEnum'
        counters_history:
          $ref: '#/components/schemas/CountersHistory'
        endpoints:
          title: Endpoints
          type: array
          items:
            $ref: '#/components/schemas/ApiEndpointScoreGrade'
        last_finding_date:
          title: Last Finding Date
          type: string
          format: date-time
        last_vulnerability_date:
          title: Last Vulnerability Date
          type: string
          format: date-time
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        scorer_version:
          title: Scorer Version
          type: integer
        trend:
          $ref: '#/components/schemas/RiskTrendEnum'
    ApiService_Base:
      title: ApiService_Base
      required:
      - identifier
      - name
      type: object
      properties:
        classification:
          title: Classification
          type: array
          description: 'API classification label as determined by Crankshaft, e.g.
            [''meetings'', ''messaging''] '
          items:
            type: string
        description:
          title: Description
          type: string
          description: Textual description of the Service
        identifier:
          title: id
          type: string
          description: Unique id of the subject API as assigned by Crankshaft
          format: uuid
        name:
          title: Name
          type: string
          description: API name, usually an FQDN as determined by crankshaft, it can
            be logical or can correspond to one of the endpoints where the API is
            reachable, i.e. api.webex.com
        provider_id:
          title: Provider Id
          type: string
          description: API provider id
          format: uuid
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        status:
          $ref: '#/components/schemas/ApiSecurityApiStatus'
        status_description:
          type: string
        creation_timestamp:
          title: Timestamp
          type: string
          format: date-time
    CategoryScoreGrade:
      title: CategoryScoreGrade
      required:
      - critical
      - high
      - low
      - medium
      - name
      - risk
      - scorer_version
      - unclassified
      type: object
      properties:
        additional_info:
          title: Additional Info
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        confidence:
          $ref: '#/components/schemas/RiskConfidenceEnum'
        counters_history:
          $ref: '#/components/schemas/CountersHistory'
        critical:
          $ref: '#/components/schemas/ScoreFindingGroup'
        high:
          $ref: '#/components/schemas/ScoreFindingGroup'
        low:
          $ref: '#/components/schemas/ScoreFindingGroup'
        medium:
          $ref: '#/components/schemas/ScoreFindingGroup'
        name:
          title: Name
          type: string
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        scorer_version:
          title: Scorer Version
          type: integer
        trend:
          $ref: '#/components/schemas/RiskTrendEnum'
        unclassified:
          $ref: '#/components/schemas/ScoreFindingGroup'
    RiskConfidenceEnum:
      title: RiskConfidenceEnum
      type: string
      description: An enumeration.
      enum:
      - HIGH
      - MEDIUM
      - LOW
    ScoreFindingGroup:
      title: ScoreFindingGroup
      required:
      - count
      - findings
      type: object
      properties:
        count:
          title: Count
          type: integer
        findings:
          title: Findings
          type: array
          items:
            $ref: '#/components/schemas/ScoreFinding'
    ScoreFinding:
      title: ScoreFinding
      required:
      - name
      - source
      type: object
      properties:
        additional_info:
          title: Additional Info
          type: array
          description: Finding instance additional attributes
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        data:
          title: Data
          type: array
          description: Raw data filled in only for unclassified findings, when allowed
          items:
            type: object
            properties: {}
        description:
          title: Description
          type: string
          description: Finding description if finding has been classified, None otherwise
        mitigation:
          title: Mitigation
          type: string
          description: Finding mitigation if finding has been classified, None otherwise
        name:
          title: Name
          type: string
          description: Finding name
        occurrences:
          title: Occurrences
          type: integer
          description: Number of findings of the same type
        raw_finding_id:
          title: Raw Finding Id
          type: string
          description: Identifier of the raw finding if available
          format: uuid
        source:
          title: Source
          type: string
          description: Finding source or filled in with 'Undisclosed' if source cannot
            be revealed
        type_id:
          title: Type Id
          type: string
          description: Finding type identifier if finding has been classified, None
            otherwise
          format: uuid
    ApiEndpoint:
      title: ApiEndpoint
      required:
      - host
      - identifier
      - port
      - proto
      type: object
      properties:
        api_id:
          title: Api Id
          type: string
          description: API service this endpoint belongs to. Empty if still undetermined.
          format: uuid
        compliance:
          $ref: '#/components/schemas/ApiServiceCompliance_Simple'
        host:
          title: Host
          type: string
          description: IP v4/v6 address of the API endpoint
        hostname:
          title: Hostname
          type: string
          description: Hostname of the API endpoint if known
        identifier:
          title: id
          type: string
          description: Unique id of the Endpoint
          format: uuid
        location:
          title: Location
          type: string
        port:
          title: Port
          maximum: 65535
          minimum: 0
          type: integer
          description: Port of the API endpoint
        proto:
          $ref: '#/components/schemas/IpProtoEnum'
        scheme:
          $ref: '#/components/schemas/UrlSchemeEnum'
    AdditionalInfo:
      title: AdditionalInfo
      type: object
      properties:
        affected_endpoints:
          title: Affected Endpoints
          type: array
          items:
            type: string
        affected_spec_paths:
          title: Affected Spec Paths
          type: array
          items:
            type: string
        entries:
          title: Dictionary entries
          type: object
          additionalProperties:
            type: string
    IpProtoEnum:
      title: IpProtoEnum
      type: string
      description: An enumeration.
      enum:
      - TCP
      - UDP
    UrlSchemeEnum:
      title: UrlSchemeEnum
      type: string
      description: An enumeration.
      enum:
      - HTTP
      - HTTPS
    CategoryScoreGradeNoFindings:
      title: CategoryScoreGradeNoFindings
      required:
      - critical
      - high
      - low
      - medium
      - name
      - risk
      - scorer_version
      - unclassified
      type: object
      properties:
        additional_info:
          title: Additional Info
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        confidence:
          $ref: '#/components/schemas/RiskConfidenceEnum'
        critical:
          title: Critical
          type: integer
        high:
          title: High
          type: integer
        low:
          title: Low
          type: integer
        medium:
          title: Medium
          type: integer
        name:
          title: Name
          type: string
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        scorer_version:
          title: Scorer Version
          type: integer
        trend:
          $ref: '#/components/schemas/RiskTrendEnum'
        unclassified:
          title: Unclassified
          type: integer
    CountersHistory:
      title: History Counters
      type: object
      properties:
        critical:
          title: Critical
          type: array
          items:
            type: integer
        high:
          title: High
          type: array
          items:
            type: integer
        low:
          title: Low
          type: array
          items:
            type: integer
        medium:
          title: Medium
          type: array
          items:
            type: integer
        unclassified:
          title: Unclassified
          type: array
          items:
            type: integer
        timestamp:
          title: Timestamp
          type: array
          items:
            type: string
    RiskTrendEnum:
      title: RiskTrendEnum
      type: string
      description: An enumeration.
      enum:
      - IMPROVING
      - STABLE
      - DEGRADING
    ApiEndpointScoreGrade:
      title: ApiEndpointScoreGrade
      required:
      - categories
      - endpoint
      - risk
      - scorer_version
      type: object
      properties:
        additional_info:
          title: Additional Info
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        categories:
          title: Categories
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CategoryScoreGrade'
        confidence:
          $ref: '#/components/schemas/RiskConfidenceEnum'
        counters_history:
          $ref: '#/components/schemas/CountersHistory'
        endpoint:
          $ref: '#/components/schemas/ApiEndpoint'
        endpoint_id:
          type: string
          format: uuid
        risk:
          $ref: '#/components/schemas/ApiSecurityRiskSeverity'
        scorer_version:
          title: Scorer Version
          type: integer
        trend:
          $ref: '#/components/schemas/RiskTrendEnum'
    ApiSecurityPolicy:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          type: string
        globalCondition:
          $ref: '#/components/schemas/ApiSecurityPolicyGlobalCondition'
        categoryConditions:
          $ref: '#/components/schemas/ApiSecurityPolicyCategoryConditions'
    ApiSecurityPolicyGlobalCondition:
      required:
      - highestAcceptedSeverity
      type: object
      properties:
        highestAcceptedSeverity:
          $ref: '#/components/schemas/ApiSecurityPolicyRiskSeverity'
    ApiSecurityPolicyCategoryConditions:
      required:
      - conditions
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ApiSecurityPolicyCategoryCondition'
    ApiSecurityPolicyCategoryCondition:
      required:
      - category
      - highestAcceptedSeverity
      type: object
      properties:
        category:
          type: string
        highestAcceptedSeverity:
          $ref: '#/components/schemas/ApiSecurityPolicyRiskSeverity'
    ApiSecurityPolicyCondition:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ApiSecurityConditionApiRisk
          - ApiSecurityConditionApiRiskTrend
          - ApiSecurityConditionApiRiskConfidence
          - ApiSecurityConditionApiName
          - ApiSecurityConditionApiClassification
          - ApiSecurityConditionApiAvgVulnerabilityDuration
          - ApiSecurityConditionProviderRisk
          - ApiSecurityConditionProviderRiskTrend
          - ApiSecurityConditionProviderRiskConfidence
          - ApiSecurityConditionProviderName
          - ApiSecurityConditionProviderLocation
          - ApiSecurityConditionProviderIndustry
          - ApiSecurityConditionProviderAvgVulnerabilityDuration
          - ApiSecurityConditionEndpointIpAddress
          - ApiSecurityConditionEndpointProtocol
          - ApiSecurityConditionEndpointPort
          - ApiSecurityConditionEndpointScheme
          - ApiSecurityConditionEndpointHostname
          - ApiSecurityConditionEndpointLocation
          - ApiSecurityConditionEndpointRisk
          - ApiSecurityConditionEndpointRiskTrend
          - ApiSecurityConditionEndpointRiskConfidence
      discriminator:
        propertyName: type
    ApiSecurityConditionApiRisk:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        - values
        type: object
        properties:
          scope:
            type: string
            enum:
            - API
          attribute:
            type: string
            enum:
            - RISK
          operator:
            $ref: '#/components/schemas/ApiSecurityRiskOperator'
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityRisk'
    ApiRisk:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionNumberComparison'
          value:
            $ref: '#/components/schemas/RiskSeverity'
    ConditionNumberComparison:
      title: ConditionNumberComparison
      type: string
      description: An enumeration.
      enum:
      - =
      - '!='
      - <
      - <=
      - '>'
      - '>='
    ProviderRisk:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionNumberComparison'
          value:
            $ref: '#/components/schemas/RiskSeverity'
    ProviderName:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionListComparison'
          value:
            title: Value
            type: string
    ProviderLocation:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionListComparison'
          value:
            title: Value
            type: string
    ProviderLocationIsNone:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ProviderIndustry:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionListComparison'
          value:
            title: Value
            type: string
    ProviderIndustryIsNone:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ProviderAvgVulnerabilityDurationIsNone:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ProviderRiskConfidence:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionEnumComparator'
          value:
            $ref: '#/components/schemas/RiskConfidenceEnum'
    ProviderRiskConfidenceIsNone:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ProviderRiskTrend:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionEnumComparator'
          value:
            $ref: '#/components/schemas/RiskTrendEnum'
    ProviderRiskTrendIsNone:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ProviderAvgVulnerabilityDuration:
      allOf:
      - $ref: '#/components/schemas/ProviderOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionNumberComparison'
          value:
            title: Value
            type: integer
    RiskSeverity:
      title: RiskSeverity
      type: string
      description: An enumeration.
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
      - NEUTRAL
      - UNKNOWN
      - NO_RISK
    ApiRiskTrend:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionEnumComparator'
          value:
            $ref: '#/components/schemas/RiskTrendEnum'
    ConditionEnumComparator:
      title: ConditionEnumComparator
      type: string
      description: An enumeration.
      enum:
      - =
      - '!='
    ApiRiskConfidence:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionEnumComparator'
          value:
            $ref: '#/components/schemas/RiskConfidenceEnum'
    ApiRiskTrendIsNone:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ApiRiskConfidenceIsNone:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ApiAvgVulnerabilityDuration:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionNumberComparison'
          value:
            title: Value
            type: integer
    ApiAvgVulnerabilityDurationIsNone:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ApiName:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionListComparison'
          value:
            title: Value
            type: string
    ConditionListComparison:
      title: ConditionListComparison
      type: string
      description: An enumeration.
      enum:
      - =
      - '!='
      - contains
      - in
    ApiClassification:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
          operator:
            $ref: '#/components/schemas/ConditionListComparison'
          value:
            title: Value
            type: array
            items:
              type: string
    ApiClassificationIsNone:
      allOf:
      - $ref: '#/components/schemas/ApiOrConditionsBase'
      - type: object
        properties:
          not_:
            title: 'Not '
            type: boolean
    ApiSecurityConditionApiRiskTrend:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - API
          attribute:
            type: string
            enum:
            - RISK_TREND
          operator:
            $ref: '#/components/schemas/ApiSecurityRiskTrendOperator'
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityRiskTrend'
    ApiSecurityConditionApiRiskConfidence:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - API
          attribute:
            type: string
            enum:
            - RISK_CONFIDENCE
          operator:
            $ref: '#/components/schemas/ApiSecurityRiskConfidenceOperator'
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityRiskConfidence'
    ApiSecurityConditionApiName:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - API
          attribute:
            type: string
            enum:
            - NAME
          operator:
            type: string
            enum:
            - EQUAL
            - NOT_EQUAL
            - IN
            - CONTAINS
          values:
            type: array
            items:
              pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.){2,}([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9]){2,}$
              type: string
    ApiSecurityConditionApiClassification:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - API
          attribute:
            type: string
            enum:
            - CLASSIFICATION
          operator:
            type: string
            enum:
            - EQUAL
            - NOT_EQUAL
            - IN
            - CONTAINS
            - IS_NONE
          values:
            type: array
            items:
              type: string
    ApiSecurityConditionApiAvgVulnerabilityDuration:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - API
          attribute:
            type: string
            enum:
            - AVG_VULNERABILITY_DURATION
          operator:
            $ref: '#/components/schemas/ApiSecurityAvgVulnerabilityDurationOperator'
          values:
            type: array
            items:
              type: integer
    ApiSecurityConditionProviderRisk:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        - values
        type: object
        properties:
          scope:
            type: string
            enum:
            - PROVIDER
          attribute:
            type: string
            enum:
            - RISK
          operator:
            $ref: '#/components/schemas/ApiSecurityRiskOperator'
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityRisk'
    ApiSecurityConditionProviderRiskTrend:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - PROVIDER
          attribute:
            type: string
            enum:
            - RISK_TREND
          operator:
            $ref: '#/components/schemas/ApiSecurityRiskTrendOperator'
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityRiskTrend'
    ApiSecurityConditionProviderRiskConfidence:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - PROVIDER
          attribute:
            type: string
            enum:
            - RISK_CONFIDENCE
          operator:
            $ref: '#/components/schemas/ApiSecurityRiskConfidenceOperator'
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityRiskConfidence'
    ApiSecurityConditionProviderName:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        - values
        type: object
        properties:
          scope:
            type: string
            enum:
            - PROVIDER
          attribute:
            type: string
            enum:
            - NAME
          operator:
            $ref: '#/components/schemas/ApiSecurityFqdnOperator'
          values:
            type: array
            items:
              pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.){2,}([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9]){2,}$
              type: string
    ApiSecurityConditionProviderLocation:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - PROVIDER
          attribute:
            type: string
            enum:
            - LOCATION
          operator:
            $ref: '#/components/schemas/ApiSecurityStringOperator'
          values:
            type: array
            items:
              type: string
    ApiSecurityConditionProviderIndustry:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - PROVIDER
          attribute:
            type: string
            enum:
            - INDUSTRY
          operator:
            $ref: '#/components/schemas/ApiSecurityStringOperator'
          values:
            type: array
            items:
              type: string
    ApiSecurityConditionProviderAvgVulnerabilityDuration:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - PROVIDER
          attribute:
            type: string
            enum:
            - AVG_VULNERABILITY_DURATION
          operator:
            $ref: '#/components/schemas/ApiSecurityAvgVulnerabilityDurationOperator'
          values:
            type: array
            items:
              type: integer
    ApiSecurityConditionEndpointIpAddress:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        - values
        type: object
        properties:
          scope:
            type: string
            enum:
            - ENDPOINT
          attribute:
            type: string
            enum:
            - IP_ADDRESS
          operator:
            type: string
            enum:
            - BELONGS_TO
          values:
            type: array
            items:
              type: string
    ApiSecurityConditionEndpointProtocol:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        - values
        type: object
        properties:
          scope:
            type: string
            enum:
            - ENDPOINT
          attribute:
            type: string
            enum:
            - PROTOCOL
          operator:
            type: string
            enum:
            - EQUAL
            - NOT_EQUAL
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityProtocol'
    ApiSecurityConditionEndpointPort:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        - values
        type: object
        properties:
          scope:
            type: string
            enum:
            - ENDPOINT
          attribute:
            type: string
            enum:
            - PORT
          operator:
            type: string
            enum:
            - EQUAL
            - NOT_EQUAL
            - LESS_THAN
            - LESS_THAN_EQUAL
            - GREATER_THAN
            - GREATER_THAN_EQUAL
          values:
            type: array
            items:
              maximum: 65535
              minimum: 0
              type: integer
              format: int32
    ApiSecurityConditionEndpointScheme:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - ENDPOINT
          attribute:
            type: string
            enum:
            - SCHEME
          operator:
            type: string
            enum:
            - EQUAL
            - NOT_EQUAL
            - IS_NONE
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityScheme'
    ApiSecurityConditionEndpointHostname:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - ENDPOINT
          attribute:
            type: string
            enum:
            - HOSTNAME
          operator:
            $ref: '#/components/schemas/ApiSecurityFqdnOperator'
          values:
            type: array
            items:
              pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.){2,}([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9]){2,}$
              type: string
    ApiSecurityConditionEndpointLocation:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - ENDPOINT
          attribute:
            type: string
            enum:
            - LOCATION
          operator:
            $ref: '#/components/schemas/ApiSecurityStringOperator'
          values:
            type: array
            items:
              type: string
    ApiSecurityConditionEndpointRisk:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        - values
        type: object
        properties:
          scope:
            type: string
            enum:
            - ENDPOINT
          attribute:
            type: string
            enum:
            - RISK
          operator:
            $ref: '#/components/schemas/ApiSecurityRiskOperator'
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityRisk'
    ApiSecurityConditionEndpointRiskTrend:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - ENDPOINT
          attribute:
            type: string
            enum:
            - RISK_TREND
          operator:
            $ref: '#/components/schemas/ApiSecurityRiskTrendOperator'
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityRiskTrend'
    ApiSecurityConditionEndpointRiskConfidence:
      allOf:
      - $ref: '#/components/schemas/ApiSecurityPolicyCondition'
      - required:
        - attribute
        - operator
        - scope
        type: object
        properties:
          scope:
            type: string
            enum:
            - ENDPOINT
          attribute:
            type: string
            enum:
            - RISK_CONFIDENCE
          operator:
            $ref: '#/components/schemas/ApiSecurityRiskConfidenceOperator'
          values:
            type: array
            items:
              $ref: '#/components/schemas/ApiSecurityRiskConfidence'
    sidecarsResource:
      type: object
      properties:
        proxyInitLimitsCpu:
          type: string
        proxyInitLimitsMemory:
          pattern: ^\d+(\.\d+)?(E|P|T|G|M|K)i?$
          type: string
        proxyInitRequestsCpu:
          type: string
        proxyInitRequestsMemory:
          pattern: ^\d+(\.\d+)?(E|P|T|G|M|K)i?$
          type: string
        proxyLimitsCpu:
          type: string
        proxyLimitsMemory:
          pattern: ^\d+(\.\d+)?(E|P|T|G|M|K)i?$
          type: string
        proxyRequestCpu:
          type: string
        proxyRequestMemory:
          pattern: ^\d+(\.\d+)?(E|P|T|G|M|K)i?$
          type: string
    KubernetesAnnotation:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    CloudAccountBase:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        cloudProvider:
          $ref: '#/components/schemas/CloudProviderType'
        cloudAccountId:
          type: string
          description: the identifier id from the cloud account provider. account
            ID for AWS and subscription ID in Azure
          readOnly: true
        regions:
          type: array
          items:
            type: string
        lastScanned:
          type: string
          format: date-time
          readOnly: true
        installVulnerabilityScanner:
          type: boolean
          default: false
        validateFunction:
          type: string
          enum:
          - HASH_VALIDATION
          - SIGNATURE_VALIDATION
          - NONE
      description: represent cloud account object
    CloudAccount:
      allOf:
      - $ref: '#/components/schemas/CloudAccountBase'
      - required:
        - periodicJobExpression
        type: object
        properties:
          installationStatus:
            type: string
            readOnly: true
            enum:
            - INSTALLED
            - PENDING_INSTALLATION
            - FAILED
          periodicJobExpression:
            $ref: '#/components/schemas/ServerlessPeriodicJobExpression'
          securityThreats:
            $ref: '#/components/schemas/CloudAccountSecurityThreats'
          vulnerabilitiesSummary:
            $ref: '#/components/schemas/VulnerabilitiesSummary'
    CloudProviderType:
      type: string
      enum:
      - AWS
      - AZURE
    AwsRegion:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    Deployer:
      required:
      - deployerId
      - deployerType
      type: object
      properties:
        deployerType:
          type: string
          enum:
          - OperatorDeployer
          - SecureCnDeployer
        id:
          type: string
          format: uuid
          readOnly: true
        deployer:
          type: string
        deployerId:
          type: string
          format: uuid
      description: represent deployer object
      discriminator:
        propertyName: deployerType
    SecureCnDeployer:
      allOf:
      - $ref: '#/components/schemas/Deployer'
      - type: object
    OperatorDeployer:
      allOf:
      - $ref: '#/components/schemas/Deployer'
      - required:
        - clusterId
        - namespaceId
        type: object
        properties:
          namespace:
            type: string
            readOnly: true
          namespaceId:
            type: string
            format: uuid
          cluster:
            type: string
            readOnly: true
          clusterId:
            type: string
            format: uuid
          securityCheck:
            type: boolean
            default: true
          ruleCreation:
            type: boolean
            default: true
    ServiceAccountInfo:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
    ApiServiceClientWorkload:
      type: object
      properties:
        workloadName:
          type: string
        namespace:
          type: string
        cluster:
          type: string
    IgnoredRisk:
      required:
      - ignoredRiskType
      - workloadRisksType
      type: object
      properties:
        ignoredRiskType:
          type: string
          enum:
          - ClusterIgnoredRisk
          - AnyClusterIgnoredRisk
          - AnyEnvironmentIgnoredRisk
          - EnvironmentIgnoredRisk
          - WorkloadIgnoredRisk
        id:
          type: string
          format: uuid
          readOnly: true
        workloadRisksType:
          type: array
          items:
            $ref: '#/components/schemas/WorkloadRiskReasonType'
      description: represent ignore risk object
      discriminator:
        propertyName: ignoredRiskType
    AnyClusterIgnoredRisk:
      allOf:
      - $ref: '#/components/schemas/IgnoredRisk'
      - type: object
    AnyEnvironmentIgnoredRisk:
      allOf:
      - $ref: '#/components/schemas/IgnoredRisk'
      - type: object
    ClusterIgnoredRisk:
      allOf:
      - $ref: '#/components/schemas/IgnoredRisk'
      - required:
        - clusterIds
        type: object
        properties:
          clusterIds:
            type: array
            items:
              type: string
              format: uuid
    EnvironmentIgnoredRisk:
      allOf:
      - $ref: '#/components/schemas/IgnoredRisk'
      - required:
        - environmentIds
        type: object
        properties:
          environmentIds:
            type: array
            items:
              type: string
              format: uuid
    WorkloadIgnoredRisk:
      allOf:
      - $ref: '#/components/schemas/IgnoredRisk'
      - required:
        - workloadNames
        type: object
        properties:
          workloadNames:
            type: array
            items:
              type: string
          clusterName:
            type: string
          clusterId:
            type: string
            format: uuid
          namespaceName:
            type: string
          namespaceId:
            type: string
            format: uuid
          currentWorkloadId:
            type: string
            format: uuid
    CDResult:
      type: string
      enum:
      - ALLOW
      - DETECT
      - BLOCK
    PolicyAdvisorState:
      type: string
      enum:
      - RUNNING
      - STOPPED
    SecureAppExpirationInfo:
      required:
      - email
      - subscriptionNumber
      - tenantId
      type: object
      properties:
        tenantId:
          type: string
          format: uuid
        email:
          type: string
        subscriptionNumber:
          type: string
        cancelEffectiveDate:
          type: string
          format: date-time
      description: info for provisioning a subscription in SecureApp
    SecureAppProvisionInfo:
      required:
      - accountNumber
      - email
      - sku
      - subscriptionNumber
      - tenantId
      type: object
      properties:
        tenantId:
          type: string
          format: uuid
        email:
          type: string
        accountNumber:
          type: string
        subscriptionNumber:
          type: string
        sku:
          type: array
          items:
            $ref: '#/components/schemas/SecureAppProvisionSku'
      description: info for provisioning a subscription in SecureApp
    SecureAppProvisionSku:
      required:
      - quantity
      - sku
      type: object
      properties:
        sku:
          type: string
        quantity:
          minimum: 1
          type: integer
      description: secureapp provisioning info
    imagePackageDetails:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        licenses:
          type: array
          items:
            type: string
    ImagesWithLicenses:
      type: object
      properties:
        imageName:
          type: string
        imageId:
          type: string
          format: uuid
        licenses:
          type: array
          items:
            type: string
    ActionDuration:
      required:
      - duration
      - timeUnit
      type: object
      properties:
        duration:
          type: integer
        timeUnit:
          type: string
          enum:
          - MINUTES
          - HOURS
          - DAYS
    DiffDetectionStatus:
      type: object
      properties:
        status:
          type: string
          enum:
          - READY
          - IN_PROGRESS
        endtime:
          type: string
          format: date-time
      description: diff detection status. in case of in progress, will reveal the
        detection end time
    OpenApiSpecAvailability:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/OpenApiSpecAvailabilityStatus'
        message:
          type: string
    OpenApiSpecAvailabilityStatus:
      type: string
      enum:
      - NOT_AVAILABLE
      - AVAILABLE
      - COLLECTING_DATA
      - REVIEW_REQUIRED
      - APPROVING
      - ABORTING
      - ERROR
    K8sCISBenchmarkAccountSummary:
      type: object
      properties:
        compliance:
          type: integer
          format: int32
          default: 0
        numberOfClusters:
          type: integer
          format: int32
          default: 0
        numberOfScannedClusters:
          type: integer
          format: int32
          default: 0
        numberOfClustersWithActionItems:
          type: integer
          format: int32
          default: 0
    K8sCISBenchmarkClustersSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        scanTime:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        numberOfScannedNodes:
          type: integer
          format: int32
          default: 0
        numberOfNodes:
          type: integer
          format: int32
          default: 0
        compliance:
          type: integer
          format: int32
          default: 0
        numberOfItemsPassed:
          type: integer
          format: int32
          default: 0
        numberOfItemsFailed:
          type: integer
          format: int32
          default: 0
        numberOfActionItems:
          type: integer
          format: int32
          default: 0
        numberOfInfoItems:
          type: integer
          format: int32
          default: 0
        orchestration:
          type: string
        scanState:
          $ref: '#/components/schemas/K8sCisBenchmarkScanState'
        agentActive:
          type: boolean
    K8sCISBenchmarkClusterSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        scanTime:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        compliance:
          type: integer
          format: int32
          default: 0
        numberOfItemsPassed:
          type: integer
          format: int32
          default: 0
        numberOfItemsFailed:
          type: integer
          format: int32
          default: 0
        numberOfActionItems:
          type: integer
          format: int32
          default: 0
        numberOfInfoItems:
          type: integer
          format: int32
          default: 0
        entries:
          type: array
          items:
            $ref: '#/components/schemas/K8sCISBenchmarkResultGroup'
        nodesWithErrors:
          type: array
          items:
            $ref: '#/components/schemas/K8sCISBenchmarkNodeWithError'
        incompleteTests:
          type: boolean
        orchestration:
          type: string
        scanState:
          $ref: '#/components/schemas/K8sCisBenchmarkScanState'
        numberOfNodes:
          type: integer
          format: int32
          default: 0
        numberOfScannedNodes:
          type: integer
          format: int32
          default: 0
        kubernetesVersion:
          type: string
    K8sCISBenchmarkNodeWithError:
      type: object
      properties:
        id:
          type: string
          format: uuid
        ip:
          type: string
        name:
          type: string
        error:
          type: string
    K8sCISBenchmarkResultGroup:
      type: object
      properties:
        index:
          type: string
        description:
          type: string
        compliance:
          type: integer
          format: int32
          default: 0
        numberOfItemsPassed:
          type: integer
          format: int32
          default: 0
        numberOfItemsFailed:
          type: integer
          format: int32
          default: 0
        numberOfActionItems:
          type: integer
          format: int32
          default: 0
        numberOfInfoItems:
          type: integer
          format: int32
          default: 0
        subGroups:
          type: array
          items:
            $ref: '#/components/schemas/K8sCISBenchmarkResultGroup'
        tests:
          type: array
          items:
            $ref: '#/components/schemas/K8sCISBenchmarkResultTest'
    K8sCISBenchmarkResultTest:
      type: object
      properties:
        index:
          type: string
        status:
          $ref: '#/components/schemas/K8sCisBenchmarkTestStatus'
        description:
          type: string
        compliance:
          type: integer
          format: int32
          default: 0
        type:
          type: string
          enum:
          - Automated
          - Manual
          - NA
        remediation:
          type: string
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/K8sCISBenchmarkResultTestNode'
    K8sCISBenchmarkResultTestNode:
      type: object
      properties:
        id:
          type: string
          format: uuid
        ip:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/K8sCisBenchmarkTestStatus'
    K8sCISBenchmarkUpdateNodes:
      required:
      - clusterId
      - index
      - nodes
      - status
      type: object
      properties:
        clusterId:
          type: string
          format: uuid
        index:
          type: string
        status:
          $ref: '#/components/schemas/K8sCISBenchmarkUpdateNodeStatus'
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/K8sCISBenchmarkUpdateNode'
    K8sCISBenchmarkUpdateNode:
      type: object
      properties:
        id:
          type: string
          format: uuid
    K8sCISBenchmarkUpdateNodeStatus:
      type: string
      enum:
      - FAIL
      - PASS
    K8sCisBenchmarkTestStatus:
      type: string
      enum:
      - FAIL
      - PASS
      - WARN
      - INFO
    K8sCisBenchmarkScanState:
      type: string
      enum:
      - READY
      - IN_PROGRESS
      - STARTING
      - ERROR
    CaIntegrationResponseWithClusters:
      required:
      - certificate
      - issuerName
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        issuerName:
          type: string
        issuerNamespace:
          type: string
        certificate:
          type: string
        clusters:
          type: array
          items:
            $ref: '#/components/schemas/CAClusterIdAndName'
    CAClusterIdAndName:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ApiSecTraceSource:
      required:
      - clusterName
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        accountId:
          type: string
          format: uuid
          readOnly: true
        clusterId:
          type: string
          format: uuid
          readOnly: true
        clusterName:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        apiKey:
          type: string
    ControllerDataResponse:
      type: object
      properties:
        agentId:
          type: string
          format: uuid
        sharedKey:
          type: string
    installationSource:
      type: string
      default: SCRIPT
      enum:
      - SCRIPT
      - HELM
  responses:
    UnknownError:
      description: unknown error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
  parameters:
    mitreTechniqueType:
      name: mitreTechniqueType
      in: query
      description: MITRE technique type
      required: true
      schema:
        type: string
        enum:
        - COMPROMISED_IMAGES
        - UNAUTHORISED_REGISTRIES_USAGE
        - SUSPICIOUS_DEPLOYMENT
        - VULNERABLE_APPLICATION
        - EXPOSED_K8S_DASHBOARD
        - EXPLOIT_PUBLIC_FACING_APPLICATION
        - CONTAINER_SERVICE
        - DEPLOY_CONTAINER
        - SSH_CONNECTION
        - WRITEABLE_HOST_PATH
        - CRON_JOBS
        - PRIVILEGED_OR_ROOT_CONTAINER
        - PRIVILEGE_ESCALATION_ENABLED
        - CLUSTER_ADMIN_BINDING
        - UNAUTHORIZED_CLUSTER_ADMIN_BINDING
        - ACCESS_CLUSTER_RESOURCES
        - CLEAR_CONTAINER_LOGS
        - CLEAR_K8S_EVENTS
        - LIST_SECRETS
        - SERVICE_ACCOUNT_ACCESS
        - CONTAINER_RESOURCE_DISCOVERY
        - CLUSTER_INTERNAL_NETWORKING
        - TILLER_ENDPOINT_ACCESS
        - DATA_DESTRUCTION
    kubernetesClusterId:
      name: kubernetesClusterId
      in: path
      description: Secure Application Kubernetes cluster ID
      required: true
      schema:
        type: string
        format: uuid
    tokenId:
      name: tokenId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    gatewayId:
      name: gatewayId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    appTelemetryId:
      name: appTelemetryId
      in: path
      description: App telemetry ID
      required: true
      schema:
        type: string
        format: uuid
    connectionTelemetryId:
      name: connectionTelemetryId
      in: path
      description: connection telemetry ID
      required: true
      schema:
        type: string
        format: uuid
    functionId:
      name: functionId
      in: path
      description: Function ID
      required: true
      schema:
        type: string
        format: uuid
    topRiskyWorkloadsSize:
      name: size
      in: query
      description: Amount of top risky workloads to return
      schema:
        minimum: 1
        type: integer
        default: 5
    agentId:
      name: agentId
      in: path
      description: Secure Application agent ID
      required: true
      schema:
        type: string
        format: uuid
    cloudAccountId:
      name: cloudAccountId
      in: path
      description: cloud account ID
      required: true
      schema:
        type: string
        format: uuid
    offset:
      name: offset
      in: query
      description: Return entries from this offset (pagination)
      schema:
        type: number
        default: 0.0
    namespacesFilter:
      name: namespacesFilter
      in: query
      description: namespace filter. a base 64 representation of a list of NamespacesFilter
        definition object
      schema:
        type: string
        format: base64
    apiSecSourceFilter:
      name: apiSecSource
      in: query
      description: source filter. an enum representing the source of the APIs service
        in scope
      required: true
      schema:
        type: string
        default: INTERNAL
        enum:
        - INTERNAL
        - EXTERNAL
    gatewayType:
      name: gatewayType
      in: query
      required: true
      schema:
        type: string
        enum:
        - APIGEE_X
        - KONG_INTERNAL
        - TYK_INTERNAL
        - F5_BIG_IP
    apiSecDashboardNumOfDays:
      name: numOfDays
      in: query
      description: the desired number of days in graph
      schema:
        type: integer
        default: 30
    namespacesNamesFilter:
      name: namespacesNamesFilter
      in: query
      description: namespace names filter. a base 64 representation of a list of namespace
        names definition object
      schema:
        type: string
        format: base64
    sourceNamespacesFilter:
      name: sourceNamespacesFilter
      in: query
      description: namespace filter for source in connection telemetries, a base 64
        representation of a NamespacesFilter definition object
      schema:
        type: string
        format: base64
    targetNamespacesFilter:
      name: targetNamespacesFilter
      in: query
      description: namespace filter for target in connection telemetries. a base 64
        representation of a NamespacesFilter definition object
      schema:
        type: string
        format: base64
    maxResults:
      name: maxResults
      in: query
      description: The number of entries to return (pagination)
      schema:
        maximum: 200
        type: number
        default: 100.0
    isIgnored:
      name: isIgnored
      in: query
      description: Return ignored / not ignored entries
      schema:
        type: boolean
        default: false
    showOnlyVulnerabilitiesWithFix:
      name: showOnlyVulnerabilitiesWithFix
      in: query
      schema:
        type: boolean
        default: false
    isApproved:
      name: isApproved
      in: query
      description: Return approved / not approved entries
      schema:
        type: boolean
        default: false
    includeScannable:
      name: includeScannable
      in: query
      description: If true - return all scannable namespaces
      schema:
        type: boolean
        default: false
    sendTelemetriesIntervalSec:
      name: sendTelemetriesIntervalSec
      in: query
      description: The time interval for sending telemetries
      schema:
        type: integer
        default: 30
    ignoreAction:
      name: actionType
      in: query
      description: The ignore action type (ADD/REMOVE)
      required: true
      schema:
        type: string
        enum:
        - ADD
        - REMOVE
    snoozeTime:
      name: snoozeTime
      in: query
      description: The time to snooze the vulnerability
      schema:
        type: string
        enum:
        - ALWAYS
        - YEAR
        - MONTH
        - WEEK
    approveAction:
      name: actionType
      in: query
      description: The approve action type (ADD/REMOVE)
      required: true
      schema:
        type: string
        enum:
        - ADD
        - REMOVE
    isImageApproved:
      name: isImageApproved
      in: query
      description: Is image approved
      required: true
      schema:
        type: boolean
    connectionSortKey:
      name: sortKey
      in: query
      description: sort key
      required: true
      schema:
        type: string
        enum:
        - sourceAppName
        - sourceAppType
        - sourceEnvironmentName
        - sourceExecutable
        - sourceRisk
        - sourceHostName
        - targetAppName
        - targetAppType
        - targetEnvironmentName
        - targetExecutable
        - targetRisk
        - targetHostName
        - firstSeen
        - lastSeen
        - total
    accountsSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: name
        enum:
        - name
        - createdTime
    ownerNameFilter:
      name: owner
      in: query
      description: owner name
      schema:
        type: string
    ownerTypeFilter:
      name: ownerType
      in: query
      description: owner type
      schema:
        type: string
        enum:
        - SERVICEACCOUNT
        - USER
        - GROUP
    appNameFilter:
      name: appName
      in: query
      description: Defined App name
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    hostFilter:
      name: host
      in: query
      description: Defined host name
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    funcNameFilter:
      name: funcName
      in: query
      description: Defined function name
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    cloudAccountsIdsFilter:
      name: cloudAccountsIdsFilter
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
    funcArnFilter:
      name: funcArn
      in: query
      description: Defined function ARN
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    tokenName:
      name: tokenName
      in: query
      description: Defined token name
      schema:
        type: string
    appTypeFilter:
      name: appType
      in: query
      description: Empty string means no filtering. "UNDEFINED" means telemetries
        with no App type
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    statusFilter:
      name: status
      in: query
      description: App status
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    userFilter:
      name: user
      in: query
      description: User name
      schema:
        type: string
    resourceKindFilter:
      name: resourceKind
      in: query
      description: Resource kind
      schema:
        type: string
    resourceNameFilter:
      name: resourceName
      in: query
      description: Resource name
      schema:
        type: string
    kubernetesAuditActionFilter:
      name: kubernetesAuditAction
      in: query
      description: Kubernetes audit action
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    resultFilter:
      name: result
      in: query
      description: event result filter
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - ALLOW
          - DETECT
          - BLOCK
          - RISKY
    actionFilter:
      name: actions
      in: query
      description: Actions
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    tokensIdsFilter:
      name: tokensIds
      in: query
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
    objectTypeFilter:
      name: objectType
      in: query
      description: Object Type
      schema:
        type: string
    highestVulnerabilityFilter:
      name: vulnerabilityLevelsFilter
      in: query
      description: Highest vulnerability
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: enum - UNKNOWN - LOW - MEDIUM - HIGH - CRITICAL
    highestDockerfileScanResultFilter:
      name: highestDockerfileScanResult
      in: query
      description: Highest DockerfileScan Result
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: enum - INFO - WARN - FATAL
    accountFilter:
      name: account
      in: query
      description: Account
      schema:
        type: string
    environmentNameFilter:
      name: environmentName
      in: query
      description: Empty string means no filtering. "UNDEFINED" means telemetries
        with no App type
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    imagesIdFilter:
      name: imagesId
      in: query
      description: Array of images id
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
    executableFilter:
      name: executable
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    violationsFilter:
      name: showOnlyViolations
      in: query
      description: When true, the API will only return entries that violate the active
        policy
      schema:
        type: boolean
    appResultFilter:
      name: result
      in: query
      description: app result filter
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - ALLOW
          - DETECT
          - BLOCK
    serverlessFunctionResultFilter:
      name: result
      in: query
      description: serverless function result filter
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - ALLOW
          - DETECT
          - BLOCK
    isIdentifiedFilter:
      name: isIdentified
      in: query
      description: app is identified filter
      schema:
        type: boolean
    workloadRiskFilter:
      name: workloadRisks
      in: query
      description: workloadRisk filter
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - CRITICAL
    connectionResultFilter:
      name: result
      in: query
      description: connection result filter
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - DETECT
          - BLOCK
          - ALLOW
          - ENCRYPT
    hideInternals:
      name: hideInternals
      in: query
      description: When true, the API will filter out "OS Internal" and "User OS Internal"
        App types
      schema:
        type: boolean
        default: false
    downloadAsXlsx:
      name: downloadAsXlsx
      in: query
      description: When true, the API will return an xlsx file, and pagination will
        be ignored
      schema:
        type: boolean
    downloadAsJson:
      name: downloadAsJson
      in: query
      description: When true, the API will return an json file, and pagination will
        be ignored
      schema:
        type: boolean
    protectionStatusFilter:
      name: protectionStatus
      in: query
      description: When true, the API will return only protected pods
      schema:
        type: string
        default: ALL
        enum:
        - FULL
        - DEPLOYMENT_ONLY
        - CONNECTION_ONLY
        - DISABLED
        - ALL
    showOnlyAppsWithViolations:
      name: showOnlyAppsWithViolations
      in: query
      description: When true, the API will only return Apps that violated the active
        policy
      schema:
        type: boolean
        default: false
    showOnlyConnectionsBetweenEnvironments:
      name: showOnlyConnectionsBetweenEnvironments
      in: query
      description: When true, the API will only return connections between environments
      schema:
        type: boolean
        default: false
    showOnlyConnectionsWithViolations:
      name: showOnlyConnectionsWithViolations
      in: query
      description: When true, the API will only return connections that violate the
        active policy
      schema:
        type: boolean
        default: false
    showOnlyAppsWithConnections:
      name: showOnlyAppsWithConnections
      in: query
      description: When true, the API will only return Apps with connections
      schema:
        type: boolean
        default: false
    groupAppsOnTheSameEnvironment:
      name: groupAppsOnTheSameEnvironment
      in: query
      description: When true, the API will aggregate Apps that are on the same environment
      schema:
        type: boolean
        default: false
    labels:
      name: labels
      in: query
      description: Array of labels. Each label is a string with format key:value
      style: form
      explode: false
      schema:
        maxItems: 10
        type: array
        items:
          type: string
    ignoreExternalConnection:
      name: ignoreExternalConnection
      in: query
      description: When true, the API will ignore connections coming from external
        IP addresses
      schema:
        type: boolean
        default: false
    apiRisk:
      name: apiRisk
      in: query
      description: minimum api risk level
      schema:
        type: string
        enum:
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
        - NEUTRAL
        - UNKNOWN
    apps:
      name: apps
      in: query
      description: Array of App names
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    excludeApps:
      name: excludeApps
      in: query
      description: Array of App/pod names to exclude
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    isBackgroundJob:
      name: isBackgroundJob
      in: query
      description: should run as background job or not
      schema:
        type: boolean
        default: true
    environments:
      name: environments
      in: query
      description: Array of environments names
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    namespaceIds:
      name: namespaces
      in: query
      description: Array of namespaces ids
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
    protocol:
      name: protocol
      in: query
      description: protocol
      required: true
      schema:
        type: string
    sourceNamespaceId:
      name: sourceNamespace
      in: query
      description: namespace id
      required: true
      schema:
        type: string
        format: uuid
    targetNamespaceId:
      name: targetNamespace
      in: query
      description: namespace id
      required: true
      schema:
        type: string
        format: uuid
    sourcePodTemplateId:
      name: sourcePodTemplate
      in: query
      description: pod template id
      required: true
      schema:
        type: string
        format: uuid
    targetPodTemplateId:
      name: targetPodTemplate
      in: query
      description: pod template id
      required: true
      schema:
        type: string
        format: uuid
    riskFilter:
      name: risk
      in: query
      description: The risk of the environment for attack
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - HIGH
          - MEDIUM
          - LOW
          - UNDEFINED
    serverlessRiskFilter:
      name: risk
      in: query
      description: The risk of the serverless function
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - CRITICAL
    serverlessSecretsRiskFilter:
      name: secretsRisk
      in: query
      description: The risk of the serverless function secrets
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - NO_KNOWN_RISK
          - RISK_IDENTIFIED
    serverlessPolicyRiskFilter:
      name: policyRisk
      in: query
      description: The risk of the serverless functioriskFindingsn policy
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - CRITICAL
    imageSortKey:
      name: sortKey
      in: query
      description: image sort key. enum description in image sort key definition
      required: true
      schema:
        type: string
        default: RISK
        enum:
        - IMAGE_NAME
        - TIME
        - RISK
    riskAssessmentPodSortKey:
      name: sortKey
      in: query
      description: risk assessment pod sort key.
      required: true
      schema:
        type: string
        default: RISK
        enum:
        - NAME
        - RISK
    vulnerabilitySortKey:
      name: sortKey
      in: query
      description: risk assessment image sort key.
      required: true
      schema:
        type: string
        default: SEVERITY
        enum:
        - SEVERITY
    sortKey:
      name: sortKey
      in: query
      description: sort key
      required: true
      schema:
        type: string
        enum:
        - appName
        - appType
        - executable
        - environmentName
        - risk
        - status
        - startTime
        - finishTime
        - workloadRisk
    auditLogSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: time
        enum:
        - time
        - action
        - objectType
    permissionOwnerSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: owner
        enum:
        - owner
        - ownerType
    permissionSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: risk
        enum:
        - risk
    clustersPermissionSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: permissionRisk
        enum:
        - permissionRisk
    adminAuditLogSortKey:
      name: sortKey
      in: query
      description: sort key
      required: true
      schema:
        type: string
        enum:
        - time
        - action
        - objectType
        - account
    kubernetesAuditLogSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: lastSeen
        enum:
        - firstSeen
        - lastSeen
        - action
        - user
        - total
    CdSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: time
        enum:
        - time
        - status
    TrustedSignerSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: name
        enum:
        - name
    ListNamespaceSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: name
        enum:
        - name
        - status
    RegistrySortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: url
        enum:
        - url
    K8sCisBenchmarkClusterIds:
      name: clusterIds
      in: query
      description: cluster ids to filter
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    ResourceSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: risk
        enum:
        - risk
    expansionSortKey:
      name: sortKey
      in: query
      description: sort key
      required: true
      schema:
        type: string
        enum:
        - name
    sortDir:
      name: sortDir
      in: query
      description: sorting direction
      schema:
        type: string
        default: ASC
        enum:
        - ASC
        - DESC
    sortDirDesc:
      name: sortDir
      in: query
      description: sorting direction
      schema:
        type: string
        default: DESC
        enum:
        - ASC
        - DESC
    agentSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: hostName
        enum:
        - hostName
        - environmentName
        - risk
        - status
        - lastActive
    appSortKey:
      name: sortKey
      in: query
      description: App sort key
      schema:
        type: string
        enum:
        - name
        - type
    agentStatusFilter:
      name: status
      in: query
      description: Agent status
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
          - STOPPED
          - TERMINATED
    appName:
      name: name
      in: query
      description: Filter Apps by name
      schema:
        type: string
    gwName:
      name: name
      in: query
      description: Filter gateways by name
      schema:
        type: string
    imageNameFilter:
      name: IMAGE_NAME
      in: query
      description: Filter images by name
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    imageTagFilter:
      name: IMAGE_TAG
      in: query
      description: Filter images by tags
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    imageHashFilter:
      name: IMAGE_HASH
      in: query
      description: Filter images by HASH
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    vulnerabilityNameFilter:
      name: vulnerabilityName
      in: query
      description: Filter images by vulnerability name
      schema:
        type: string
    layerId:
      name: layerId
      in: query
      schema:
        type: string
        format: uuid
    appTypes:
      name: type
      in: query
      description: Filter Apps by type
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    envSortKey:
      name: sortKey
      in: query
      description: Environment sort key
      schema:
        type: string
        enum:
        - name
    envName:
      name: name
      in: query
      description: Filter environments by name
      schema:
        type: string
    startTime:
      name: startTime
      in: query
      description: Start date of the query
      required: true
      schema:
        type: string
        format: date-time
    updatedAfter:
      name: updatedAfter
      in: query
      description: Only Apis updated since this date
      schema:
        type: string
        format: date-time
    expirationDate:
      name: expirationDate
      in: query
      description: Expiration date of the token
      schema:
        type: string
        format: date-time
    endTime:
      name: endTime
      in: query
      description: End date of the query
      required: true
      schema:
        type: string
        format: date-time
    drillDownScore:
      name: drillDownScore
      in: query
      description: Return associated score
      schema:
        type: boolean
        default: false
    showOnlyEntriesWithAppName:
      name: showOnlyEntriesWithAppName
      in: query
      description: When true, the telemetries API will only return entries with the
        App name
      schema:
        type: boolean
        default: false
    showSystemPods:
      name: showSystemPods
      in: query
      description: When true, the telemetries API will also return workloads that
        are part of the Kubernetes system
      schema:
        type: boolean
        default: false
    sourceAppNameFilter:
      name: sourceAppName
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    sourceEnvironmentNameFilter:
      name: sourceEnvironmentName
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    sourceExecutableFilter:
      name: sourceExecutable
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    sourceRiskFilter:
      name: sourceRisk
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - HIGH
          - MEDIUM
          - LOW
    targetAppNameFilter:
      name: targetAppName
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    targetEnvironmentNameFilter:
      name: targetEnvironmentName
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    targetExecutableFilter:
      name: targetExecutable
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    targetRiskFilter:
      name: targetRisk
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - HIGH
          - MEDIUM
          - LOW
    sourceHostNameFilter:
      name: sourceHostName
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    targetHostNameFilter:
      name: targetHostName
      in: query
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    logicalOperatorFilter:
      name: logicalOperator
      in: query
      description: Logical operator between the source group and the target group
        filters
      schema:
        type: string
        default: and
        enum:
        - and
        - or
    hostNameFilter:
      name: hostName
      in: query
      description: The name of the host
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    podDefinitionNameFilter:
      name: name
      in: query
      description: Filter pod definitions by name
      schema:
        type: string
    podDefinitionClusterNameFilter:
      name: clusterName
      in: query
      description: Filter pod definitions by cluster name
      schema:
        type: string
    podDefinitionTemplateSourceFilter:
      name: templateSource
      in: query
      description: Filter pod definitions by template source
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    podDefinitionDeploymentTypeFilter:
      name: deploymentType
      in: query
      description: Filter pod definitions by deployment type
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    expansionNameFilter:
      name: name
      in: query
      description: Filter expansions by name
      schema:
        type: string
    expansionClusterNameFilter:
      name: clusterName
      in: query
      description: Filter expansions by cluster name
      schema:
        type: string
    expansionNamespaceFilter:
      name: namespaceName
      in: query
      description: Filter expansions by namespace
      schema:
        type: string
    noPagination:
      name: noPagination
      in: query
      description: When true, the pagination params will be ignored
      schema:
        type: boolean
    includeServiceWithNoSpec:
      name: includeServiceWithNoSpec
      in: query
      description: When false, only services with specs wikk be returned
      schema:
        type: boolean
        default: true
    clusterIdPathParameter:
      name: clusterId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    resourceId:
      name: resourceId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    apiServiceSpecTags:
      name: tags
      in: query
      description: spec tags names
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    ApiServiceSpecPath:
      name: specPath
      in: query
      description: spec path
      required: true
      schema:
        type: string
    HitCountIntervalInHours:
      name: hoursInterval
      in: query
      description: hours interval
      schema:
        type: integer
        default: 24
    ApiServiceSpecPathMethod:
      name: specPathMethod
      in: query
      description: spec path method
      required: true
      schema:
        type: string
        enum:
        - GET
        - POST
        - PUT
        - DELETE
        - HEAD
        - CONNECT
        - OPTIONS
        - TRACE
        - PATCH
    catalogId:
      name: catalogId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    riskFindingId:
      name: riskFindingId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    ownerIdPathParameter:
      name: ownerId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    roleIdPathParameter:
      name: roleId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    onlySpecReconstructionEnabledFilter:
      name: onlySpecReconstructionEnabledFilter
      in: query
      description: retrive only clusters that configured as spec reconstruction enabled.
      schema:
        type: boolean
    namespaceNameFilter:
      name: namespaceName
      in: query
      description: the namespace name to filter by
      schema:
        type: string
    permissionRiskFilter:
      name: permissionRisk
      in: query
      description: the risk to filter by
      schema:
        type: string
        enum:
        - NO_RISK
        - MEDIUM
        - HIGH
        - APPROVED
    includeSystemOwners:
      name: includeSystemOwners
      in: query
      description: include systems default owners
      schema:
        type: boolean
        default: false
    includeSystemEnvs:
      name: includeSystemEnvs
      in: query
      description: include systems environments
      schema:
        type: boolean
        default: true
    clusterNameFilter:
      name: clusterName
      in: query
      description: the cluster name to filter by
      schema:
        type: string
    userNameFilter:
      name: username
      in: query
      description: the user name to filter by
      schema:
        type: string
    emailFilter:
      name: email
      in: query
      description: the email to filter by
      schema:
        type: string
    userRoleFilter:
      name: roles
      in: query
      description: the roles to filter by
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
          - LIGHTSPIN_ADMIN
          - SELF_PROVISIONING
          - CI_CD_SCANNER
          - PORTSHIFT_ADMIN
          - PORTSHIFT_AUDITOR
          - ACCOUNT_ADMIN
          - SERVICE
          - ACCOUNT_AUDITOR
    clustersIdsFilter:
      name: clustersIds
      in: query
      description: the clusters ids to filter by
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          format: uuid
    namespacesSortKey:
      name: sortKey
      in: query
      description: the namespaces sort key
      schema:
        type: string
        default: namespaceName
        enum:
        - namespaceName
        - clusterName
        - runningPods
        - protectionStatus
    riskAssessmentPollKey:
      name: riskAssessmentPollKey
      in: query
      description: The ids of the clusters whose scans to poll
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          format: uuid
    riskAssessmentImageId:
      name: imageId
      in: path
      description: The id of the risk assessment image
      required: true
      schema:
        type: string
        format: uuid
    apiPolicyProfiles:
      name: apiPolicyProfiles
      in: query
      description: Names of the Api Policy Profiles
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    apiCatalogSortKey:
      name: sortKey
      in: query
      description: the Api Catalog sort key
      schema:
        type: string
        enum:
        - name
        - risk
    tokenSortKey:
      name: sortKey
      in: query
      description: the token sort key
      schema:
        type: string
        enum:
        - expirationDate
    findingNameFilter:
      name: name
      in: query
      description: Name of the risk finding name
      schema:
        type: string
    apiRisksFilter:
      name: risks
      in: query
      description: The API risk filter
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - CRITICAL
          - ALL
    findingCategoryFilter:
      name: category
      in: query
      description: Category of the risk finding
      schema:
        type: string
    findingSourceFilter:
      name: source
      in: query
      description: Source of the risk finding
      schema:
        type: string
    findingElementFilter:
      name: element
      in: query
      description: Affected element of the risk finding
      schema:
        type: string
    detectedFindingFilter:
      name: detected
      in: query
      description: 'Show finding with detect elements only '
      schema:
        type: boolean
    riskFindingSortKey:
      name: sortKey
      in: query
      description: Risk finding sort key.
      required: true
      schema:
        type: string
        default: RISK
        enum:
        - NAME
        - RISK
    apiCatalogNameFilter:
      name: name
      in: query
      description: the Api Catalog name filter
      schema:
        type: string
    cloudAccountSortKey:
      name: sortKey
      in: query
      description: sort key
      required: true
      schema:
        type: string
        enum:
        - lastScanned
        - name
    cloudAccountNameFilter:
      name: cloudAccountName
      in: query
      description: Filter cloud accounts by name
      schema:
        type: string
    regionFilter:
      name: region
      in: query
      description: Filter cloud accounts by region
      schema:
        type: string
    deployerSortKey:
      name: sortKey
      in: query
      description: sort key
      required: true
      schema:
        type: string
        enum:
        - deployer
        - type
    deployerNameFilter:
      name: name
      in: query
      description: Filter deployers by name
      schema:
        type: string
    deployerRuleCreationFilter:
      name: ruleCreation
      in: query
      description: Filter deployers by rule creation
      schema:
        type: boolean
    deployerSecurityCheckFilter:
      name: securityCheck
      in: query
      description: Filter deployers by security checks
      schema:
        type: boolean
    policyAdvisorType:
      name: policyAdvisorType
      in: query
      description: policy advisor type
      required: true
      schema:
        type: string
        enum:
        - ENVIRONMENT
        - POD_SECURITY_STANDARD
        - CONNECTION_RULES
        - DEPLOYMENT_RULES
        - API_RULES
    zipNameFilter:
      name: zipNameFilter
      in: query
      schema:
        type: string
    zipSha256Filter:
      name: zipSha256Filter
      in: query
      schema:
        type: string
    ServerlessZipSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
        default: VULNERABILITIES
        enum:
        - TIME
        - VULNERABILITIES
    clusterSortKey:
      name: sortKey
      in: query
      description: sort key
      schema:
        type: string
    kubernetesVersionFilter:
      name: kubernetesVersion
      in: query
      description: Filter the clusters by k8s version
      schema:
        type: string
    controllerVersionFilter:
      name: controllerVersion
      in: query
      description: Filter the clusters by controller version
      schema:
        type: string
    controllerStatusFilter:
      name: controllerStatus
      in: query
      description: Filter the clusters by controller status
      schema:
        type: string
  requestBodies:
    uuidList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UuidList'
      required: true
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
