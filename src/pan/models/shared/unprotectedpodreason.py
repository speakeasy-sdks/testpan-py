"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from pan import utils
from typing import Optional

class UnprotectedPodReasonType(str, Enum):
    NAMESPACE_UNPROTECTED = 'NAMESPACE_UNPROTECTED'
    MISSING_SIDECARS = 'MISSING_SIDECARS'
    HOST_NETWORK = 'HOST_NETWORK'
    ISTIO_INJECT_FALSE_ANNOTATION = 'ISTIO_INJECT_FALSE_ANNOTATION'
    ISTIO_INJECT_FALSE_LABEL = 'ISTIO_INJECT_FALSE_LABEL'
    PORTSHIFT_INJECT_FALSE_ANNOTATION = 'PORTSHIFT_INJECT_FALSE_ANNOTATION'
    PORTSHIFT_INJECT_FALSE_LABEL = 'PORTSHIFT_INJECT_FALSE_LABEL'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class UnprotectedPodReason:
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    type: Optional[UnprotectedPodReasonType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    

