"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from pan import utils
from typing import Optional

class DeployerDeployerType(str, Enum):
    OPERATOR_DEPLOYER = 'OperatorDeployer'
    SECURE_CN_DEPLOYER = 'SecureCnDeployer'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeployerInput:
    r"""represent deployer object"""
    deployer_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployerId') }})
    deployer_type: DeployerDeployerType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployerType') }})
    deployer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployer'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Deployer:
    r"""represent deployer object"""
    deployer_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployerId') }})
    deployer_type: DeployerDeployerType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployerType') }})
    deployer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployer'), 'exclude': lambda f: f is None }})
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    

