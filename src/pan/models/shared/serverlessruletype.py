"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .serverlessfunctionvalidation import ServerlessFunctionValidation
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from pan import utils
from typing import Optional

class ServerlessRuleTypeServerlessRuleType(str, Enum):
    FUNCTION_ANY_SERVERLESS_RULE_TYPE = 'FunctionAnyServerlessRuleType'
    FUNCTION_NAME_SERVERLESS_RULE_TYPE = 'FunctionNameServerlessRuleType'
    FUNCTION_ARN_SERVERLESS_RULE_TYPE = 'FunctionArnServerlessRuleType'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ServerlessRuleType:
    r"""identify the serverless functions matching type. Only one of the below should be not null, and  used."""
    serverless_rule_type: ServerlessRuleTypeServerlessRuleType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serverlessRuleType') }})
    serverless_function_validation: Optional[ServerlessFunctionValidation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serverlessFunctionValidation'), 'exclude': lambda f: f is None }})
    

