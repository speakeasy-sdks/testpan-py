"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .openapispecscoreelementslist import OpenAPISpecScoreElementsList
from .openapispectags import OpenAPISpecTags
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from pan import utils
from typing import Optional

class OapIVersion(str, Enum):
    OPEN_API_SPEC_SCORE_V2 = 'OpenApiSpecScoreV2'
    OPEN_API_SPEC_SCORE_V3 = 'OpenApiSpecScoreV3'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OpenAPISpecScoreBase:
    general: Optional[OpenAPISpecScoreElementsList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('general'), 'exclude': lambda f: f is None }})
    oap_i_version: Optional[OapIVersion] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oapIVersion'), 'exclude': lambda f: f is None }})
    security: Optional[OpenAPISpecScoreElementsList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('security'), 'exclude': lambda f: f is None }})
    tags: Optional[OpenAPISpecTags] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})
    

