"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventsforwardingdetailstypeenum as shared_eventsforwardingdetailstypeenum
from ..shared import eventstoforward as shared_eventstoforward
from dataclasses_json import Undefined, dataclass_json
from pan import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventsForwardingDetails:
    events_forwarding_details_type: shared_eventsforwardingdetailstypeenum.EventsForwardingDetailsTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventsForwardingDetailsType') }})
    events_to_forward: List[shared_eventstoforward.EventsToForward] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventsToForward') }})
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventsForwardingDetailsInput:
    events_forwarding_details_type: shared_eventsforwardingdetailstypeenum.EventsForwardingDetailsTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventsForwardingDetailsType') }})
    events_to_forward: List[shared_eventstoforward.EventsToForward] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventsToForward') }})
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    

