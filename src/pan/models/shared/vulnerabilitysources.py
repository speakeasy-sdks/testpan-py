"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .vulnerabilityfixavailability import VulnerabilityFixAvailability
from .vulnerabilitysource import VulnerabilitySource
from dataclasses_json import Undefined, dataclass_json
from pan import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VulnerabilitySources:
    fix_availability: Optional[VulnerabilityFixAvailability] = dataclasses.field(default=VulnerabilityFixAvailability.NO_FIX, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixAvailability'), 'exclude': lambda f: f is None }})
    sources: Optional[List[VulnerabilitySource]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sources'), 'exclude': lambda f: f is None }})
    

