"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .networkprotocol import NetworkProtocol
from dataclasses_json import Undefined, dataclass_json
from pan import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WorkloadAddress:
    address: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address') }})
    network_protocol: Optional[NetworkProtocol] = dataclasses.field(default=NetworkProtocol.TCP, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkProtocol'), 'exclude': lambda f: f is None }})
    

