"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from pan import utils
from typing import Optional

class DiffDetectionStatusStatus(str, Enum):
    READY = 'READY'
    IN_PROGRESS = 'IN_PROGRESS'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DiffDetectionStatus:
    r"""diff detection status. in case of in progress, will reveal the detection end time"""
    endtime: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endtime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'exclude': lambda f: f is None }})
    status: Optional[DiffDetectionStatusStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    

