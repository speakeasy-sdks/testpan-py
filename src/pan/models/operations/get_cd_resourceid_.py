"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import cdpipelineresourceresult as shared_cdpipelineresourceresult
from enum import Enum
from typing import Optional

class SortDir(str, Enum):
    r"""sorting direction"""
    ASC = 'ASC'
    DESC = 'DESC'

class SortKey(str, Enum):
    r"""sort key"""
    RISK = 'risk'


@dataclasses.dataclass
class GetCdResourceIDRequest:
    resource_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'resourceId', 'style': 'simple', 'explode': False }})
    sort_dir: Optional[SortDir] = dataclasses.field(default=SortDir.ASC, metadata={'query_param': { 'field_name': 'sortDir', 'style': 'form', 'explode': True }})
    r"""sorting direction"""
    sort_key: Optional[SortKey] = dataclasses.field(default=SortKey.RISK, metadata={'query_param': { 'field_name': 'sortKey', 'style': 'form', 'explode': True }})
    r"""sort key"""
    



@dataclasses.dataclass
class GetCdResourceIDResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    cd_pipeline_resource_result: Optional[shared_cdpipelineresourceresult.CdPipelineResourceResult] = dataclasses.field(default=None)
    r"""Success"""
    

