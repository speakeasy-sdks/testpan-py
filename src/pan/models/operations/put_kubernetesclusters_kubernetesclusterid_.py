"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.errors import apiresponse as errors_apiresponse
from ...models.shared import kubernetescluster as shared_kubernetescluster
from typing import Optional


@dataclasses.dataclass
class PutKubernetesClustersKubernetesClusterIDRequest:
    kubernetes_cluster: shared_kubernetescluster.KubernetesCluster = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    kubernetes_cluster_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'kubernetesClusterId', 'style': 'simple', 'explode': False }})
    r"""Secure Application Kubernetes cluster ID"""
    



@dataclasses.dataclass
class PutKubernetesClustersKubernetesClusterIDResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    api_response: Optional[errors_apiresponse.APIResponse] = dataclasses.field(default=None)
    r"""unknown error"""
    kubernetes_cluster: Optional[shared_kubernetescluster.KubernetesCluster] = dataclasses.field(default=None)
    r"""OK"""
    

