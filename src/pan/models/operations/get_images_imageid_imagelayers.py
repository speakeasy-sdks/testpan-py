"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import imagelayers as shared_imagelayers
from enum import Enum
from typing import Optional

class GetImagesImageIDImageLayersQueryParamSortDir(str, Enum):
    r"""sorting direction"""
    ASC = 'ASC'
    DESC = 'DESC'


@dataclasses.dataclass
class GetImagesImageIDImageLayersRequest:
    image_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'imageId', 'style': 'simple', 'explode': False }})
    is_ignored: Optional[bool] = dataclasses.field(default=False, metadata={'query_param': { 'field_name': 'isIgnored', 'style': 'form', 'explode': True }})
    r"""Return ignored / not ignored entries"""
    sort_dir: Optional[GetImagesImageIDImageLayersQueryParamSortDir] = dataclasses.field(default=GetImagesImageIDImageLayersQueryParamSortDir.ASC, metadata={'query_param': { 'field_name': 'sortDir', 'style': 'form', 'explode': True }})
    r"""sorting direction"""
    



@dataclasses.dataclass
class GetImagesImageIDImageLayersResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    image_layers: Optional[shared_imagelayers.ImageLayers] = dataclasses.field(default=None)
    r"""OK"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

