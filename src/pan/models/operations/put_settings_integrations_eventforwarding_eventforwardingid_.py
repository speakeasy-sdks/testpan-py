"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import eventsforwardingdetails as shared_eventsforwardingdetails
from ...models.shared import splunkeventsforwardingdetails as shared_splunkeventsforwardingdetails
from typing import Optional


@dataclasses.dataclass
class PutSettingsIntegrationsEventForwardingEventForwardingIDRequest:
    event_forwarding_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'eventForwardingId', 'style': 'simple', 'explode': False }})
    splunk_events_forwarding_details: shared_splunkeventsforwardingdetails.SplunkEventsForwardingDetails = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    



@dataclasses.dataclass
class PutSettingsIntegrationsEventForwardingEventForwardingIDResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    events_forwarding_details: Optional[shared_eventsforwardingdetails.EventsForwardingDetails] = dataclasses.field(default=None)
    r"""Success"""
    

