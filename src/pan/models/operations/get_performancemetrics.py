"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import performancemetrics as shared_performancemetrics
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class GetPerformanceMetricsRequest:
    end_time: datetime = dataclasses.field(metadata={'query_param': { 'field_name': 'endTime', 'style': 'form', 'explode': True }})
    r"""End date of the query"""
    protocol: str = dataclasses.field(metadata={'query_param': { 'field_name': 'protocol', 'style': 'form', 'explode': True }})
    r"""protocol"""
    source_namespace: str = dataclasses.field(metadata={'query_param': { 'field_name': 'sourceNamespace', 'style': 'form', 'explode': True }})
    r"""namespace id"""
    source_pod_template: str = dataclasses.field(metadata={'query_param': { 'field_name': 'sourcePodTemplate', 'style': 'form', 'explode': True }})
    r"""pod template id"""
    start_time: datetime = dataclasses.field(metadata={'query_param': { 'field_name': 'startTime', 'style': 'form', 'explode': True }})
    r"""Start date of the query"""
    target_namespace: str = dataclasses.field(metadata={'query_param': { 'field_name': 'targetNamespace', 'style': 'form', 'explode': True }})
    r"""namespace id"""
    target_pod_template: str = dataclasses.field(metadata={'query_param': { 'field_name': 'targetPodTemplate', 'style': 'form', 'explode': True }})
    r"""pod template id"""
    



@dataclasses.dataclass
class GetPerformanceMetricsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    performance_metrics: Optional[shared_performancemetrics.PerformanceMetrics] = dataclasses.field(default=None)
    r"""Success"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

