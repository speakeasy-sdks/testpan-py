"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apisecriskfindingswidget as shared_apisecriskfindingswidget
from enum import Enum
from typing import Optional

class GetDashboardApisecRiskFindingsAPISecSource(str, Enum):
    r"""source filter. an enum representing the source of the APIs service in scope"""
    INTERNAL = 'INTERNAL'
    EXTERNAL = 'EXTERNAL'


@dataclasses.dataclass
class GetDashboardApisecRiskFindingsRequest:
    api_sec_source: GetDashboardApisecRiskFindingsAPISecSource = dataclasses.field(default=GetDashboardApisecRiskFindingsAPISecSource.INTERNAL, metadata={'query_param': { 'field_name': 'apiSecSource', 'style': 'form', 'explode': True }})
    r"""source filter. an enum representing the source of the APIs service in scope"""
    



@dataclasses.dataclass
class GetDashboardApisecRiskFindingsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    api_sec_risk_findings_widget: Optional[shared_apisecriskfindingswidget.APISecRiskFindingsWidget] = dataclasses.field(default=None)
    r"""OK"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

