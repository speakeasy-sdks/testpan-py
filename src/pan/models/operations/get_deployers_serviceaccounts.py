"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import serviceaccountinfo as shared_serviceaccountinfo
from typing import List, Optional


@dataclasses.dataclass
class GetDeployersServiceAccountsRequest:
    kubernetes_cluster_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'kubernetesClusterId', 'style': 'form', 'explode': True }})
    namespace_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'namespaceName', 'style': 'form', 'explode': True }})
    r"""the namespace name to filter by"""
    



@dataclasses.dataclass
class GetDeployersServiceAccountsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    classes: Optional[List[shared_serviceaccountinfo.ServiceAccountInfo]] = dataclasses.field(default=None)
    r"""Success"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

