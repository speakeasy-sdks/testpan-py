"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import apppolicy as shared_apppolicy
from typing import Optional


@dataclasses.dataclass
class GetAppsPolicyRequest:
    policy_filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'policyFilter', 'style': 'form', 'explode': True }})
    r"""the filter to filter by. the string must be a json representation of PolicyFilter object"""
    



@dataclasses.dataclass
class GetAppsPolicyResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    app_policy: Optional[shared_apppolicy.AppPolicy] = dataclasses.field(default=None)
    r"""Success"""
    

