"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import registry as shared_registry
from enum import Enum
from typing import List, Optional

class GetRegistriesQueryParamSortDir(str, Enum):
    r"""sorting direction"""
    ASC = 'ASC'
    DESC = 'DESC'

class GetRegistriesQueryParamSortKey(str, Enum):
    r"""sort key"""
    URL = 'url'


@dataclasses.dataclass
class GetRegistriesRequest:
    sort_dir: Optional[GetRegistriesQueryParamSortDir] = dataclasses.field(default=GetRegistriesQueryParamSortDir.ASC, metadata={'query_param': { 'field_name': 'sortDir', 'style': 'form', 'explode': True }})
    r"""sorting direction"""
    sort_key: Optional[GetRegistriesQueryParamSortKey] = dataclasses.field(default=GetRegistriesQueryParamSortKey.URL, metadata={'query_param': { 'field_name': 'sortKey', 'style': 'form', 'explode': True }})
    r"""sort key"""
    



@dataclasses.dataclass
class GetRegistriesResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    classes: Optional[List[shared_registry.Registry]] = dataclasses.field(default=None)
    r"""Success"""
    

