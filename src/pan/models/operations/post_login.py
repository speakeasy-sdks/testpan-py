"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import challengerequest as shared_challengerequest
from ...models.shared import userlogininfo as shared_userlogininfo
from typing import Optional


@dataclasses.dataclass
class PostLoginRequest:
    google_id_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'googleIdToken', 'style': 'simple', 'explode': False }})
    r"""google id token"""
    token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'token', 'style': 'simple', 'explode': False }})
    r"""cognito id token"""
    



@dataclasses.dataclass
class PostLoginResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    challenge_request: Optional[shared_challengerequest.ChallengeRequest] = dataclasses.field(default=None)
    r"""Accepted. Challenge required"""
    user_login_info: Optional[shared_userlogininfo.UserLoginInfo] = dataclasses.field(default=None)
    r"""Success"""
    

